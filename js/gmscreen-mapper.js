"use strict";class DmMapper{static $getMapper(board,state){const $wrpPanel=$(`<div class="w-100 h-100 gm-map__root gm__panel-bg gm__data-anchor"/>`).data("getState",(()=>mapper.getSaveableState()));const mapper=new DmMapperRoot(board,$wrpPanel);mapper.setStateFrom(state);mapper.render($wrpPanel);return $wrpPanel}static async pHandleMenuButtonClick(menu){const chosenDoc=await SearchWidget.pGetUserAdventureSearch({fnFilterResults:doc=>!Parser.SOURCE_JSON_TO_FULL[doc.s]});if(!chosenDoc)return;menu.doClose();const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:`Select Mapâ€”${chosenDoc.n}`,isWidth100:true,isHeight100:true,isUncappedHeight:true});$modalInner.append(`<div class="flex-vh-center w-100 h-100"><i class="dnd-font ve-muted">Loading...</i></div>`);const{page:page,source:source,hash:hash}=SearchWidget.docToPageSourceHash(chosenDoc);const adventurePack=await Renderer.hover.pCacheAndGet(page,source,hash);const mapDatas=[];const walker=MiscUtil.getWalker();adventurePack.adventureData.data.forEach(((chap,ixChap)=>{let cntChapImages=0;const handlers={object(obj){if(obj.mapRegions){const out={...Renderer.get().getMapRegionData(obj),page:UrlUtil.PG_ADVENTURE,source:adventurePack.adventure.source,hash:UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ADVENTURE](adventurePack.adventure)};mapDatas.push(out);if(obj.title){out.name=obj.title}else{out.name=`${(adventurePack.adventure.contents[ixChap]||{}).name||"(Unknown)"}, Map ${cntChapImages+1}`}cntChapImages++}return obj}};walker.walk(chap,handlers)}));if(!mapDatas.length){$modalInner.empty().append(`<div class="flex-vh-center w-100 h-100"><span class="dnd-font">Adventure did not contain any valid maps!</span></div>`);return}$modalInner.empty().removeClass("flex-col").addClass("text-center");mapDatas.forEach((mapData=>{$(`<div class="m-1 p-1 clickable gm-map__picker-wrp-img relative">\n\t\t\t\t\t\t\t<div class="gm-map__picker-img" style="background-image: url(${mapData.hrefThumbnail||mapData.href})"></div>\n\t\t\t\t\t\t\t<span class="absolute text-center gm-map__picker-disp-name">${mapData.name.escapeQuotes()}</span>\n\t\t\t\t\t\t</div>`).click((()=>{doClose();menu.pnl.doPopulate_AdventureDynamicMap({state:mapData})})).appendTo($modalInner)}))}}class DmMapperRoot extends BaseComponent{constructor(board,$wrpPanel){super();this._board=board;this._$wrpPanel=$wrpPanel}render($parent){$parent.empty();$parent.append(`<div class="flex-vh-center w-100 h-100"><i class="dnd-font ve-muted">Loading...</i></div>`);RenderMap.$pGetRendered(this._state).then(($ele=>$parent.empty().append($ele)))}}