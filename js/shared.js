Parser={};Parser._parse_aToB=function(abMap,a,fallback){if(a===undefined||a===null)throw new TypeError("undefined or null object passed to parser");if(typeof a==="string")a=a.trim();if(abMap[a]!==undefined)return abMap[a];return fallback!==undefined?fallback:a};Parser._parse_bToA=function(abMap,b){if(b===undefined||b===null)throw new TypeError("undefined or null object passed to parser");if(typeof b==="string")b=b.trim();for(const v in abMap){if(!abMap.hasOwnProperty(v))continue;if(abMap[v]===b)return v}return b};Parser.numberToText=function(number,freq){if(number==null)throw new TypeError(`undefined or null object passed to parser`);if(typeof number==="string")return number;if(Math.abs(number)>=100)return`${number}`;function getAsText(num){const abs=Math.abs(num);switch(abs){case 0:return"zero";case 1:if(freq){return"once"}else return"one";case 2:if(freq){return"twice"}else return"two";case 3:return"three";case 4:return"four";case 5:return"five";case 6:return"six";case 7:return"seven";case 8:return"eight";case 9:return"nine";case 10:return"ten";case 11:return"eleven";case 12:return"twelve";case 13:return"thirteen";case 14:return"fourteen";case 15:return"fifteen";case 16:return"sixteen";case 17:return"seventeen";case 18:return"eighteen";case 19:return"nineteen";case 20:return"twenty";case 30:return"thirty";case 40:return"forty";case 50:return'<span title="fiddy">fifty</span>';case 60:return"sixty";case 70:return"seventy";case 80:return"eighty";case 90:return"ninety";default:{const str=String(abs);return`${getAsText(Number(`${str[0]}0`))}-${getAsText(Number(str[1]))}`}}}if(freq){return`${getAsText(number)} ${number>2?"times":""}`}else{return`${number<0?"negative ":""}${getAsText(number)}`}};Parser._greatestCommonDivisor=function(a,b){if(b<Number.EPSILON)return a;return Parser._greatestCommonDivisor(b,Math.floor(a%b))};Parser.numberToFractional=function(number){const len=number.toString().length-2;let denominator=10**len;let numerator=number*denominator;const divisor=Parser._greatestCommonDivisor(numerator,denominator);numerator=Math.floor(numerator/divisor);denominator=Math.floor(denominator/divisor);return denominator===1?String(numerator):`${Math.floor(numerator)}/${Math.floor(denominator)}`};Parser.ALPHABET="ABCDEFGHIJKLMNOPQRSTUVWXYZ";Parser._addCommas=function(intNum){return`${intNum}`.replace(/(\d)(?=(\d{3})+$)/g,"$1,")};Parser.numToBonus=function(intNum){return`${intNum>=0?"+":""}${intNum}`};Parser.isValidCreatureLvl=function(lvl){lvl=Number(lvl);return lvl>-2&&lvl<26};Parser.actionTypeKeyToFull=function(key){key=key.toLowerCase();switch(key){case"untrained":return"Skill (Untrained)";case"trained":return"Skill (Trained)";case"expert":return"Skill (Expert)";case"master":return"Skill (Master)";case"legendary":return"Skill (Legendary)";case"variantrule":return"Optional/Variant Action";default:return key.toTitleCase()}};Parser.SKILL_TO_ATB_ABV={acrobatics:"dex",arcana:"int",athletics:"str",crafting:"int",deception:"cha",diplomacy:"cha",intimidation:"cha",lore:"int",medicine:"wis",nature:"wis",occultism:"int",performance:"cha",religion:"wis",society:"int",stealth:"dex",survival:"wis",thievery:"dex"};Parser.skillToAbilityAbv=function(skill){return Parser._parse_aToB(Parser.SKILL_TO_ATB_ABV,skill)};Parser.SKILL_TO_SHORT={acrobatics:"acro",arcana:"arc",athletics:"ath",crafting:"cra",deception:"dec",diplomacy:"dip",intimidation:"int",lore:"lore",medicine:"med",nature:"nat",occultism:"occ",performance:"per",religion:"rel",society:"soc",stealth:"ste",survival:"sur",thievery:"thi"};Parser.skillToShort=function(skill){return Parser._parse_aToB(Parser.SKILL_TO_SHORT,skill)};Parser.XP_CHART={"-4":10,"-3":15,"-2":20,"-1":30,0:40,1:60,2:80,3:120,4:160};Parser._getSourceStringFromSource=function(source){if(source&&source.source)return source.source;return source};Parser._buildSourceCache=function(dict){const out={};Object.entries(dict).forEach((([k,v])=>out[k.toLowerCase()]=v));return out};Parser._sourceFullCache=null;Parser.hasSourceFull=function(source){Parser._sourceFullCache=Parser._sourceFullCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_FULL);return!!Parser._sourceFullCache[source.toLowerCase()]};Parser._sourceAbvCache=null;Parser.hasSourceAbv=function(source){Parser._sourceAbvCache=Parser._sourceAbvCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_ABV);return!!Parser._sourceAbvCache[source.toLowerCase()]};Parser._sourceDateCache=null;Parser.hasSourceDate=function(source){Parser._sourceDateCache=Parser._sourceDateCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_DATE);return!!Parser._sourceDateCache[source.toLowerCase()]};Parser.hasSourceStore=function(source){Parser._sourceStoreCache=Parser._sourceStoreCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_STORE);return!!Parser._sourceStoreCache[source.toLowerCase()]};Parser.sourceJsonToFull=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceFull(source))return Parser._sourceFullCache[source.toLowerCase()].replace(/'/g,"’");if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToFull(source).replace(/'/g,"’");return Parser._parse_aToB(Parser.SOURCE_JSON_TO_FULL,source).replace(/'/g,"’")};Parser.sourceJsonToFullCompactPrefix=function(source){let compact=Parser.sourceJsonToFull(source);Object.keys(Parser.SOURCE_PREFIX_TO_SHORT).forEach((prefix=>{compact=compact.replace(prefix,Parser.SOURCE_PREFIX_TO_SHORT[prefix]||prefix)}));Parser.COMPACT_PREFIX_MAP.forEach((it=>compact=compact.replace(it.re,it.replaceWith)));return compact};Parser.sourceJsonToAbv=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceAbv(source))return Parser._sourceAbvCache[source.toLowerCase()];if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToAbv(source);return Parser._parse_aToB(Parser.SOURCE_JSON_TO_ABV,source)};Parser.sourceJsonToDate=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceDate(source))return Parser._sourceDateCache[source.toLowerCase()];if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToDate(source);return Parser._parse_aToB(Parser.SOURCE_JSON_TO_DATE,source,null)};Parser.sourceJsonToStore=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceStore(source))return Parser._sourceStoreCache[source.toLowerCase()];if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToUrl(source);return Parser._parse_aToB(Parser.SOURCE_JSON_TO_STORE,source,null)};Parser.sourceJsonToColor=function(source){return`source${Parser._getSourceStringFromSource(source).replace(/[&\\/\\#,+()$~%.'":*?<>{}]/g,"_")}`};Parser.stringToSlug=function(str){return str.trim().toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-")};Parser.stringToCasedSlug=function(str){return str.replace(/[^\w ]+/g,"").replace(/ +/g,"-")};Parser.priceToValue=function(price){if(price==null)return 0;let mult=0;let offset=0;let amount=price.amount||0;switch(price.coin){case"cp":mult=1;break;case"sp":mult=10;break;case"gp":mult=100;break;case"pp":mult=1e3;break}return mult*amount+offset};Parser.priceToFull=function(price,noPlatinum){if(price==null)return"—";if(typeof price==="object"){if(price.amount==null||price.coin==null)return"—";return`${Parser._addCommas(price.amount)} ${price.coin}${price.note?` ${price.note}`:""}`}else if(typeof price==="number"&&!isNaN(price)){let coin="";let divide=1;if(noPlatinum){switch(Math.floor(Math.log10(price))){case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 2:coin="gp";divide=100;break;case 1:coin="sp";divide=10;break;case 0:coin="cp";divide=1;break}}else{switch(Math.floor(Math.log10(price))){case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 3:coin="pp";divide=1e3;break;case 2:coin="gp";divide=100;break;case 1:coin="sp";divide=10;break;case 0:coin="cp";divide=1;break}}return`${Parser._addCommas(price/divide)} ${coin}`}return"—"};Parser.itemValueToFull=function(item,isShortForm){return Parser._moneyToFull(item,"value","valueMult",isShortForm)};Parser.itemValueToFullMultiCurrency=function(item,isShortForm){return Parser._moneyToFullMultiCurrency(item,"value","valueMult",isShortForm)};Parser._moneyToFull=function(it,prop,propMult,isShortForm){if(it[prop]){const{coin:coin,mult:mult}=Parser.getCurrencyAndMultiplier(it[prop],it.currencyConversion);return`${(it[prop]*mult).toLocaleString(undefined,{maximumFractionDigits:5})} ${coin}`}else if(it[propMult])return isShortForm?`×${it[propMult]}`:`base value ×${it[propMult]}`;return""};Parser._moneyToFullMultiCurrency=function(it,prop,propMult,isShortForm){if(it[prop]){const simplified=CurrencyUtil.doSimplifyCoins({cp:it[prop]},{currencyConversionId:it.currencyConversion});const conversionTable=Parser.getCurrencyConversionTable(it.currencyConversion);return[...conversionTable].reverse().filter((meta=>simplified[meta.coin])).map((meta=>`${simplified[meta.coin].toLocaleString(undefined,{maximumFractionDigits:5})} ${meta.coin}`)).join(", ")}else if(it[propMult])return isShortForm?`×${it[propMult]}`:`base value ×${it[propMult]}`;return""};Parser.DEFAULT_CURRENCY_CONVERSION_TABLE=[{coin:"cp",mult:1},{coin:"sp",mult:.1},{coin:"gp",mult:.01,isFallback:true}];Parser.FULL_CURRENCY_CONVERSION_TABLE=[{coin:"cp",mult:1},{coin:"sp",mult:.1},{coin:"gp",mult:.01,isFallback:true},{coin:"pp",mult:.001}];Parser.getCurrencyConversionTable=function(currencyConversionId){const fromBrew=currencyConversionId?MiscUtil.get(BrewUtil.homebrewMeta,"currencyConversions",currencyConversionId):null;const conversionTable=fromBrew&&fromBrew.length?fromBrew:Parser.DEFAULT_CURRENCY_CONVERSION_TABLE;if(conversionTable!==Parser.DEFAULT_CURRENCY_CONVERSION_TABLE)conversionTable.sort(((a,b)=>SortUtil.ascSort(b.mult,a.mult)));return conversionTable};Parser.getCurrencyAndMultiplier=function(value,currencyConversionId){const conversionTable=Parser.getCurrencyConversionTable(currencyConversionId);if(!value)return conversionTable.find((it=>it.isFallback))||conversionTable[0];if(conversionTable.length===1)return conversionTable[0];if(!Number.isInteger(value)&&value<conversionTable[0].mult)return conversionTable[0];for(let i=conversionTable.length-1;i>=0;--i){if(Number.isInteger(value*conversionTable[i].mult))return conversionTable[i]}return conversionTable.last()};Parser.COIN_ABVS=["cp","sp","gp","pp"];Parser.COIN_ABV_TO_FULL={cp:"copper pieces",sp:"silver pieces",gp:"gold pieces",pp:"platinum pieces"};Parser.COIN_CONVERSIONS=[1,10,100,1e3];Parser.coinAbvToFull=function(coin){return Parser._parse_aToB(Parser.COIN_ABV_TO_FULL,coin)};Parser._decimalSeparator=.1.toLocaleString().substring(1,2);Parser._numberCleanRegexp=Parser._decimalSeparator==="."?new RegExp(/[\s,]*/g,"g"):new RegExp(/[\s.]*/g,"g");Parser._costSplitRegexp=Parser._decimalSeparator==="."?new RegExp(/(\d+(\.\d+)?)([csegp]p)/):new RegExp(/(\d+(,\d+)?)([csegp]p)/);Parser.coinValueToNumber=function(value){if(!value)return 0;if(value==="Varies")return 0;value=value.replace(/\s*/,"").replace(Parser._numberCleanRegexp,"").toLowerCase();const m=Parser._costSplitRegexp.exec(value);if(!m)throw new Error(`Badly formatted value "${value}"`);const ixCoin=Parser.COIN_ABVS.indexOf(m[3]);if(!~ixCoin)throw new Error(`Unknown coin type "${m[3]}"`);return Number(m[1])*Parser.COIN_CONVERSIONS[ixCoin]};Parser.PROFICIENCIES=["Untrained","Trained","Expert","Master","Legendary"];Parser.proficiencyAbvToFull=function(abv){switch(abv){case"t":return"trained";case"T":return"Trained";case"e":return"expert";case"E":return"Expert";case"m":return"master";case"M":return"Master";case"l":return"legendary";case"L":return"Legendary";case"u":return"untrained";case"U":return"Untrained";default:throw new Error(`Unknown proficiency rank ${abv}.`)}};Parser.proficiencyToNumber=function(prof){switch(prof[0].toLowerCase()){case"u":return 0;case"t":return 1;case"e":return 2;case"m":return 3;case"l":return 4;default:return 69}};Parser.genderToFull=function(g){switch(g.toLowerCase()){case"m":return"male";case"f":return"female";case"a":return"agender";case"gf":return"genderfluid";case"nb":return"nonbinary";default:return""}};Parser.savingThrowAbvToFull=function(abv){switch(abv.toLowerCase()){case"f":case"fort":return"Fortitude";case"r":case"ref":return"Reflex";case"w":case"will":return"Will";default:throw new Error(`Unknown saving throw abv ${abv}.`)}};Parser.speedToFullMap=function(speed){return Object.keys(speed).map((k=>{if(k==="walk")return`${speed.walk} feet`;else return`${k.uppercaseFirst()} ${speed[k]} feet`}))};Parser.getClassSideBar=function(sidebarEntries){sidebarEntries=MiscUtil.copy(sidebarEntries);const first=sidebarEntries.splice(0,1)[0];return{type:"pf2-sidebar",name:first.name,entries:first.entries.concat(sidebarEntries.map((it=>[{type:"pf2-title",name:it.name},...it.entries])).flat())}};Parser.getClassSideBarEntries=function(cls){let initProf=cls.initialProficiencies;const out=[];let sideBar={type:"pf2-sidebar",name:`${cls.rarity?"RARITY":"INITIAL PROFICIENCIES"}`,entries:[]};if(cls.rarity)out.push({name:"RARITY",entries:[`{@trait ${cls.rarity}}`]});const initProfText="At 1st level, you gain the listed proficiency ranks in the following statistics. You are untrained in anything not listed unless you gain a better proficiency rank in some other way.";out.push({name:"INITIAL PROFICIENCIES",entries:[initProfText]});out.push({name:"PERCEPTION",entries:[`${Parser.proficiencyAbvToFull(initProf.perception)} in Perception`]});out.push({name:"SAVING THROWS",entries:[`${Parser.proficiencyAbvToFull(initProf.fort)} in Fortitude`,`${Parser.proficiencyAbvToFull(initProf.ref)} in Reflex`,`${Parser.proficiencyAbvToFull(initProf.will)} in Will`]});function initProfParser(thing,entry){Object.keys(thing).forEach((k=>{let thingArray=[];let prof="";switch(k){case"u":{thingArray=thing.u;prof="Untrained";break}case"t":{thingArray=thing.t;prof="Trained";break}case"e":{thingArray=thing.e;prof="Expert";break}case"m":{thingArray=thing.m;prof="Master";break}case"l":{thingArray=thing.l;prof="Legendary";break}case"add":return entry.push(`{@indentSubsequent Trained in a number of additional skills equal to ${thing.add} plus your Intelligence modifier}`);default:}thingArray.forEach((element=>{if(typeof element==="object"){if(element.entry){return entry.push(`{@indentSubsequent ${prof} in ${element.entry}}`)}else if(element.type==="and"){return entry.push(`{@indentSubsequent ${prof} in ${element.skill.map((s=>`{@skill ${s}}`)).joinConjunct(", "," and ")}}`)}else{return entry.push(`{@indentSubsequent ${prof} in ${element.skill.length===1?"":`your choice of`} ${element.skill.map((s=>`{@skill ${s}}`)).joinConjunct(", "," or ")}}`)}}else return entry.push(`{@indentSubsequent ${prof} in ${element}}`)}))}))}const skillsEntries=[];const attacksEntries=[];const defensesEntries=[];initProfParser(initProf.skills,skillsEntries);out.push({name:"SKILLS",entries:skillsEntries});initProfParser(initProf.attacks,attacksEntries);out.push({name:"ATTACKS",entries:attacksEntries});initProfParser(initProf.defenses,defensesEntries);out.push({name:"DEFENSES",entries:defensesEntries});if(initProf.classDc)out.push({name:"CLASS DC",entries:[initProf.classDc.entry]});if(initProf.spells){const spellsEntries=[];initProfParser(initProf.spells,spellsEntries);out.push({name:"SPELLS",entries:spellsEntries})}return out};Parser.spSchoolToStyle=function(school){const rawColor=MiscUtil.get(Renderer.trait.TRAITS,school.toLowerCase(),"_data","school","color");if(!rawColor||!rawColor.trim())return"";const validColor=BrewUtil.getValidColor(rawColor);if(validColor.length)return`style="color: #${validColor}"`;return""};Parser.spSchoolToAbv=function(school){const schoolAbv=MiscUtil.get(Renderer.trait.TRAITS,school.toLowerCase(),"_data","school","short");if(!schoolAbv||!schoolAbv.trim())return school;return schoolAbv};TR_AC="Arcane";TR_DV="Divine";TR_OC="Occult";TR_PR="Primal";Parser.TRADITIONS=[TR_AC,TR_DV,TR_OC,TR_PR];Parser.getOrdinalForm=function(i){i=Number(i);if(isNaN(i))return"";const j=i%10;const k=i%100;if(j===1&&k!==11)return`${i}st`;if(j===2&&k!==12)return`${i}nd`;if(j===3&&k!==13)return`${i}rd`;return`${i}th`};Parser.spLevelToFull=function(level){return Parser.getOrdinalForm(level)};Parser.getArticle=function(str){str=`${str}`;str=str.replace(/\d+/g,((...m)=>Parser.numberToText(m[0])));return/^[aeiou]/.test(str)?"an":"a"};Parser.spLevelToFullLevelText=function(level,dash){return`${Parser.spLevelToFull(level)}${level===0?"s":`${dash?"-":" "}level`}`};Parser.COMPONENTS_TO_FULL={};Parser.COMPONENTS_TO_FULL["V"]="verbal";Parser.COMPONENTS_TO_FULL["M"]="material";Parser.COMPONENTS_TO_FULL["S"]="somatic";Parser.COMPONENTS_TO_FULL["F"]="focus";Parser.alignToFull=function(align){switch(String(align).toLowerCase()){case null:return"";case"any":return"Any";case"lg":case"lawful good":return"Lawful Good";case"ng":case"neutral good":return"Neutral Good";case"cg":case"chaotic good":return"Chaotic Good";case"ln":case"lawful neutral":return"Lawful Neutral";case"n":case"neutral":return"Neutral";case"cn":case"chaotic neutral":return"Chaotic Neutral";case"le":case"lawful evil":return"Lawful Evil";case"ne":case"neutral evil":return"Neutral Evil";case"ce":case"chaotic evil":return"Chaotic Evil";case"all":return"All";case"l":case"lawful":return"Lawful";case"c":case"chaotic":return"Chaotic";case"g":case"good":return"Good";case"e":case"evil":return"Evil";default:return"—"}};Parser.CAT_ID_QUICKREF=10;Parser.CAT_ID_VARIANT_RULE=11;Parser.CAT_ID_SUBSYSTEM=12;Parser.CAT_ID_TABLE=13;Parser.CAT_ID_TABLE_GROUP=14;Parser.CAT_ID_BOOK=15;Parser.CAT_ID_ANCESTRY=20;Parser.CAT_ID_HERITAGE=21;Parser.CAT_ID_VE_HERITAGE=22;Parser.CAT_ID_BACKGROUND=7;Parser.CAT_ID_CLASS=23;Parser.CAT_ID_CLASS_FEATURE=5;Parser.CAT_ID_SUBCLASS=24;Parser.CAT_ID_SUBCLASS_FEATURE=6;Parser.CAT_ID_ARCHETYPE=25;Parser.CAT_ID_FEAT=0;Parser.CAT_ID_COMPANION=26;Parser.CAT_ID_FAMILIAR=27;Parser.CAT_ID_EIDOLON=28;Parser.CAT_ID_OPTIONAL_FEATURE=30;Parser.CAT_ID_OPTIONAL_FEATURE_LESSON=31;Parser.CAT_ID_ADVENTURE=50;Parser.CAT_ID_HAZARD=51;Parser.CAT_ID_ACTION=8;Parser.CAT_ID_CREATURE=1;Parser.CAT_ID_CONDITION=60;Parser.CAT_ID_ITEM=2;Parser.CAT_ID_SPELL=3;Parser.CAT_ID_AFFLICTION=61;Parser.CAT_ID_CURSE=62;Parser.CAT_ID_DISEASE=63;Parser.CAT_ID_ABILITY=64;Parser.CAT_ID_DEITY=9;Parser.CAT_ID_LANGUAGE=65;Parser.CAT_ID_PLACE=66;Parser.CAT_ID_PLANE=67;Parser.CAT_ID_NATION=68;Parser.CAT_ID_SETTLEMENT=69;Parser.CAT_ID_RITUAL=70;Parser.CAT_ID_VEHICLE=71;Parser.CAT_ID_RELICGIFT=73;Parser.CAT_ID_TRAIT=4;Parser.CAT_ID_ORGANIZATION=72;Parser.CAT_ID_EVENT=74;Parser.CAT_ID_PAGE=99;Parser.CAT_ID_TO_FULL={};Parser.CAT_ID_TO_FULL[Parser.CAT_ID_QUICKREF]="Quick Reference";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_VARIANT_RULE]="Variant Rule";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SUBSYSTEM]="Subsystem";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TABLE]="Table";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TABLE_GROUP]="Table";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_BOOK]="Book";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ANCESTRY]="Ancestry";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_HERITAGE]="Heritage";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_VE_HERITAGE]="Versatile Heritage";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_BACKGROUND]="Background";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CLASS]="Class";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CLASS_FEATURE]="Class Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SUBCLASS]="Subclass";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SUBCLASS_FEATURE]="Subclass Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ARCHETYPE]="Archetype";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_FEAT]="Feat";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_COMPANION]="Companion";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_FAMILIAR]="Familiar";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_EIDOLON]="Eidolon";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_OPTIONAL_FEATURE]="Optional Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_OPTIONAL_FEATURE_LESSON]="Lesson";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ADVENTURE]="Adventure";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_HAZARD]="Hazard";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ACTION]="Action";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CREATURE]="Bestiary";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CONDITION]="Condition";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ITEM]="Item";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SPELL]="Spell";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_AFFLICTION]="Affliction";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CURSE]="Curse";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_DISEASE]="Disease";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ABILITY]="Creature Ability";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_DEITY]="Deity";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_LANGUAGE]="Language";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PLACE]="Place";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PLANE]="Plane";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ORGANIZATION]="Organization";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_EVENT]="Event";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_NATION]="Nation";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SETTLEMENT]="Settlement";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_RITUAL]="Ritual";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_VEHICLE]="Vehicle";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_RELICGIFT]="Relic Gift";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TRAIT]="Trait";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PAGE]="Page";Parser.pageCategoryToFull=function(catId){return Parser._parse_aToB(Parser.CAT_ID_TO_FULL,catId)};Parser.CAT_ID_TO_PROP={};Parser.CAT_ID_TO_PROP[Parser.CAT_ID_QUICKREF]=null;Parser.CAT_ID_TO_PROP[Parser.CAT_ID_VARIANT_RULE]="variantrule";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SUBSYSTEM]="variantrule";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TABLE]="table";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TABLE_GROUP]="tableGroup";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_BOOK]="book";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ANCESTRY]="ancestry";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_HERITAGE]="heritage";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_VE_HERITAGE]="versatileHeritage";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_BACKGROUND]="background";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CLASS]="class";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CLASS_FEATURE]="classFeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SUBCLASS]="subclass";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SUBCLASS_FEATURE]="subclassFeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ARCHETYPE]="archetype";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_FEAT]="feat";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_COMPANION]="companion";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_FAMILIAR]="familiar";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_EIDOLON]="eidolon";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_OPTIONAL_FEATURE]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_OPTIONAL_FEATURE_LESSON]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ADVENTURE]="adventure";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_HAZARD]="hazard";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ACTION]="action";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CREATURE]="creature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CONDITION]="condition";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ITEM]="item";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SPELL]="spell";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_AFFLICTION]="affliction";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CURSE]="curse";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_DISEASE]="disease";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ABILITY]="ability";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_DEITY]="deity";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_LANGUAGE]="language";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PLACE]="place";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PLANE]="place";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ORGANIZATION]="organization";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_EVENT]="event";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_NATION]="place";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SETTLEMENT]="place";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_RITUAL]="ritual";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_VEHICLE]="vehicle";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_RELICGIFT]="relicGift";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TRAIT]="trait";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PAGE]=null;Parser.CAT_ID_TO_PROP[Parser.CAT_ID_GENERIC_DATA]="generic";Parser.pageCategoryToProp=function(catId){return Parser._parse_aToB(Parser.CAT_ID_TO_PROP,catId)};Parser.ABIL_ABVS=["str","dex","con","int","wis","cha"];Parser.bookOrdinalToAbv=(ordinal,preNoSuff)=>{if(ordinal===undefined)return"";switch(ordinal.type){case"part":return`${preNoSuff?" ":""}Part ${ordinal.identifier}${preNoSuff?"":" — "}`;case"chapter":return`${preNoSuff?" ":""}Ch. ${ordinal.identifier}${preNoSuff?"":": "}`;case"episode":return`${preNoSuff?" ":""}Ep. ${ordinal.identifier}${preNoSuff?"":": "}`;case"appendix":return`${preNoSuff?" ":""}App. ${ordinal.identifier}${preNoSuff?"":": "}`;case"level":return`${preNoSuff?" ":""}Level ${ordinal.identifier}${preNoSuff?"":": "}`;default:throw new Error(`Unhandled ordinal type "${ordinal.type}"`)}};Parser.nameToTokenName=function(name){return name.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/Æ/g,"AE").replace(/æ/g,"ae").replace(/"/g,"")};Parser.TM_A="action";Parser.TM_AA="two";Parser.TM_AAA="three";Parser.TM_R="reaction";Parser.TM_F="free";Parser.TM_ROUND="round";Parser.TM_MINS="minute";Parser.TM_HRS="hour";Parser.TM_DAYS="day";Parser.TM_VARIES="varies";Parser.TIME_ACTIONS=[Parser.TM_A,Parser.TM_R,Parser.TM_F];Parser.TM_TO_ACTIVITY={};Parser.TM_TO_ACTIVITY[Parser.TM_F]="Free Action";Parser.TM_TO_ACTIVITY[Parser.TM_R]="Reaction";Parser.TM_TO_ACTIVITY[Parser.TM_A]="Action";Parser.TM_TO_ACTIVITY[Parser.TM_AA]="Two-Action";Parser.TM_TO_ACTIVITY[Parser.TM_AAA]="Three-Action";Parser.TM_TO_ACTIVITY[Parser.TM_ROUND]="Rounds";Parser.TM_TO_ACTIVITY[Parser.TM_VARIES]="Varies";Parser.TM_TO_ACTIVITY[Parser.TM_MINS]="Minutes";Parser.TM_TO_ACTIVITY[Parser.TM_HRS]="Hours";Parser.TM_TO_ACTIVITY[Parser.TM_DAYS]="Days";Parser.ACTIVITY_TYPE_TO_IDX=Object.keys(Parser.TM_TO_ACTIVITY).map(((a,ix)=>({[a]:ix}))).reduce(((a,b)=>Object.assign(a,b)),{});Parser.activityTypeToNumber=function(activity){return Parser._parse_aToB(Parser.ACTIVITY_TYPE_TO_IDX,activity,9e8)};Parser.timeToActivityType=function(time){if(time==null)return null;if(time.unit==null)return null;switch(time.unit){case Parser.TM_VARIES:case Parser.TM_DAYS:case Parser.TM_HRS:case Parser.TM_MINS:case Parser.TM_ROUND:case Parser.TM_R:case Parser.TM_F:return Parser.TM_TO_ACTIVITY[time.unit];case Parser.TM_A:{if(time.number===1)return Parser.TM_TO_ACTIVITY[Parser.TM_A];if(time.number===2)return Parser.TM_TO_ACTIVITY[Parser.TM_AA];if(time.number===3)return Parser.TM_TO_ACTIVITY[Parser.TM_AAA]}}};Parser.getNormalisedTime=function(time){if(time==null)return 0;if(time==="Exploration")return 9e8;if(time==="Downtime")return 900000001;let multiplier=1;let offset=0;switch(time.unit){case Parser.TM_F:offset=1;break;case Parser.TM_R:offset=2;break;case Parser.TM_A:multiplier=10;break;case Parser.TM_AA:multiplier=20;break;case Parser.TM_AAA:multiplier=30;break;case Parser.TM_ROUND:multiplier=60;break;case Parser.TM_MINS:multiplier=600;break;case Parser.TM_HRS:multiplier=36e3;break;case Parser.TM_DAYS:multiplier=864e3;break;case Parser.TM_VARIES:multiplier=100;break}return multiplier*time.number+offset};Parser.timeToFullEntry=function(time){if(time.entry!=null)return time.entry;if(Parser.TIME_ACTIONS.includes(time.unit)){if(time.number===1&&time.unit===Parser.TM_F)return"{@as f}";if(time.number===1&&time.unit===Parser.TM_R)return"{@as r}";if(time.number===2&&time.unit===Parser.TM_A)return"{@as 2}";if(time.number===3&&time.unit===Parser.TM_A)return"{@as 3}";return"{@as 1}"}return`${time.number} ${time.unit}${time.number>=2?"s":""}`};Parser.freqToFullEntry=function(freq){if(freq.special!=null)return freq.special;return`${Parser.numberToText(freq.number,true)} ${freq.recurs?"every":"per"} ${freq.interval||""} ${freq.interval>=2?`${freq.unit}s`:freq.customUnit?freq.customUnit:freq.unit}${freq.overcharge?", plus overcharge":""}`};Parser.timeToTableStr=function(time){if(time.unit==="varies")return"Varies";if(Parser.TIME_ACTIONS.includes(time.unit)){if(time.number===1&&time.unit===Parser.TM_F)return"Free Action";if(time.number===1&&time.unit===Parser.TM_R)return"Reaction";if(time.number===2&&time.unit===Parser.TM_A)return"Two-Action";if(time.number===3&&time.unit===Parser.TM_A)return"Three-Action";return"Action"}return`${time.number} ${time.unit.uppercaseFirst()}${time.number>=2?"s":""}`};Parser.durationToFull=function(duration){if(duration==null)return null;if(duration.entry)return duration.entry;if(duration.sustained&&(duration.unit==null||duration.unit==="unlimited"))return"sustained";const rendered=`${duration.number==null?"":`${duration.number} `}${duration.number>1?`${duration.unit}s`:duration.unit}`;if(duration.sustained)return`sustained up to ${rendered}`;else return rendered};UNT_FEET="feet";UNT_MILES="mile";Parser.INCHES_PER_FOOT=12;Parser.FEET_PER_MILE=5280;RNG_SELF="self";RNG_UNLIMITED="unlimited";RNG_UNLIMITED_SAME_PLANE="planetary";RNG_UNLIMITED_OTHER_PLANE="interplanar";RNG_TOUCH="touch";Parser.rangeToFull=function(range){if(range==null)return"";if(range.entry)return range.entry;if(range.unit===UNT_FEET)return`${range.number} ${range.number===1?"foot":"feet"}`;if(range.unit===UNT_MILES)return`${range.number} ${range.number===1?"mile":"miles"}`;return range.unit};Parser.getNormalisedRange=function(range){if(!MiscUtil.isObject(range))return 0;let multiplier=1;let distance=0;let offset=0;switch(range.unit){case null:distance=0;break;case UNT_FEET:multiplier=Parser.INCHES_PER_FOOT;distance=range.number;break;case UNT_MILES:multiplier=Parser.INCHES_PER_FOOT*Parser.FEET_PER_MILE;distance=range.number;break;case RNG_TOUCH:distance=1;break;case RNG_UNLIMITED_SAME_PLANE:distance=9e8;break;case RNG_UNLIMITED_OTHER_PLANE:distance=900000001;break;case RNG_UNLIMITED:distance=900000002;break;case"unknown":distance=900000003;break;default:{const fromBrew=MiscUtil.get(BrewUtil.homebrewMeta,"spellDistanceUnits",range.unit);if(fromBrew){const ftPerUnit=fromBrew.feetPerUnit;if(ftPerUnit!=null){multiplier=Parser.INCHES_PER_FOOT*ftPerUnit;distance=range.number}else{distance=91e7}}break}}return multiplier*distance+offset};Parser.getFilterRange=function(object){const fRan=object.range||{type:null};if(fRan.unit!==null){let norm_range=Parser.getNormalisedRange(fRan);if(norm_range===1){return"Touch"}else if(norm_range<Parser.INCHES_PER_FOOT*10){return"5 feet"}else if(norm_range<Parser.INCHES_PER_FOOT*25){return"10 feet"}else if(norm_range<Parser.INCHES_PER_FOOT*50){return"25 feet"}else if(norm_range<Parser.INCHES_PER_FOOT*100){return"50 feet"}else if(norm_range<Parser.INCHES_PER_FOOT*500){return"100 feet"}else if(norm_range<Parser.INCHES_PER_FOOT*Parser.FEET_PER_MILE){return"500 feet"}else if(norm_range<9e8){return"1 mile"}else if(norm_range<900000001){return"Planetary"}else if(norm_range<900000002){return"Unlimited"}else{return"Varies"}}else{return null}};Parser.getFilterDuration=function(object){const duration=object.duration||{};switch(duration.unit){case null:case undefined:return"Instant";case"turn":case"round":return"1 Round";case"minute":{const amt=duration.number||0;if(amt<=1)return"1 Minute";if(amt<=10)return"10 Minutes";if(amt<=60)return"1 Hour";if(amt<=8*60)return"8 Hours";return"24+ Hours"}case"hour":{const amt=duration.number||0;if(amt<=1)return"1 Hour";if(amt<=8)return"8 Hours";return"24+ Hours"}case"week":case"day":case"year":return"24+ Hours";case"unlimited":return"Unlimited";default:return"Special"}};Parser.ATB_ABV_TO_FULL={str:"Strength",dex:"Dexterity",con:"Constitution",int:"Intelligence",wis:"Wisdom",cha:"Charisma"};Parser.ATB_TO_NUM={Strength:1,Dexterity:2,Constitution:3,Intelligence:4,Wisdom:5,Charisma:6,Free:7};Parser.attAbvToFull=function(abv){return Parser._parse_aToB(Parser.ATB_ABV_TO_FULL,abv)};Parser.CONDITION_TO_COLOR={Blinded:"#525252",Clumsy:"#5c57af",Concealed:"#525252",Confused:"#c9c91e",Controlled:"#ed07bb",Dazzled:"#db8f48",Deafened:"#666464",Doomed:"#9e1414",Drained:"#72aa01",Dying:"#ff0000",Enfeebled:"#42a346",Fascinated:"#fc7b02",Fatigued:"#7913c6","Flat-Footed":"#7f7f7f",Fleeing:"#c9ca18",Frightened:"#c9ca18",Grabbed:"#00e0ac",Immobilized:"#009f7a",Invisible:"#71738c",Paralyzed:"#015642","Persistent Damage":"#ed6904",Petrified:"#2fd62f",Prone:"#00e070",Quickened:"#00d5e0",Restrained:"#007c5f",Sickened:"#008202",Slowed:"#2922a5",Stunned:"#4b43db",Stupefied:"#c94873",Unconscious:"#a0111b",Wounded:"#e81919"};SRC_3PP_SUFFIX=" 3pp";AP_PREFIX="Adventure Path: ";AP_PREFIX_SHORT="AP: ";FRP_PREFIX="Fists of the Ruby Phoenix: ";FRP_PREFIX_SHORT="FRP: ";AV_PREFIX="Abomination Vaults: ";AV_PREFIX_SHORT="AV: ";AoE_PREFIX="Agents of Edgewatch: ";AoE_PREFIX_SHORT="AoE: ";EC_PREFIX="Extinction Curse: ";EC_PREFIX_SHORT="EC: ";AoA_PREFIX="Age of Ashes: ";AoA_PREFIX_SHORT="AoA: ";SoT_PREFIX="Strength of Thousands: ";SoT_PREFIX_SHORT="SoT: ";OoA_PREFIX="Outlaws of Alkenstar: ";OoA_PREFIX_SHORT="OoA: ";BL_PREFIX="Blood Lords: ";BL_PREFIX_SHORT="BL: ";GW_PREFIX="Gatewalkers: ";GW_PREFIX_SHORT="GW: ";LO_PREFIX="Lost Omens: ";LO_PREFIX_SHORT="LO: ";Parser.COMPACT_PREFIX_MAP=[{re:/Fists of the Ruby Phoenix #(\d): /,replaceWith:"FRP$1: "},{re:/Abomination Vaults #(\d): /,replaceWith:"AV$1: "},{re:/Agents of Edgewatch #(\d): /,replaceWith:"AoE$1: "},{re:/Extinction Curse #(\d): /,replaceWith:"EC$1: "},{re:/Age of Ashes #(\d): /,replaceWith:"AoA$1: "},{re:/Strength of Thousands #(\d): /,replaceWith:"SoT$1: "},{re:/Outlaws of Alkenstar #(\d): /,replaceWith:"OoA$1: "},{re:/Quest for the Frozen Flame #(\d): /,replaceWith:"QFF$1: "},{re:/Blood Lords #(\d): /,replaceWith:"BL$1: "},{re:/Gatewalkers #(\d): /,replaceWith:"GW$1: "}];Parser.SOURCE_PREFIX_TO_SHORT={};Parser.SOURCE_PREFIX_TO_SHORT[LO_PREFIX]=LO_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[AP_PREFIX]=AP_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[FRP_PREFIX]=FRP_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[AV_PREFIX]=AV_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[AoE_PREFIX]=AoE_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[EC_PREFIX]=EC_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[AoA_PREFIX]=AoA_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[SoT_PREFIX]=SoT_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[OoA_PREFIX]=OoA_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[BL_PREFIX]=BL_PREFIX_SHORT;Parser.SOURCE_PREFIX_TO_SHORT[GW_PREFIX]=GW_PREFIX_SHORT;Parser.SOURCE_JSON_TO_FULL={};Parser.SOURCE_JSON_TO_ABV={};Parser.SOURCE_JSON_TO_DATE={};Parser.SOURCE_JSON_TO_STORE={};Parser.SOURCES_AVAILABLE_DOCS_BOOK={};Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE={};SRC_TV="TV";SRC_AAWS="AAWS";SRC_AFoF="AFoF";SRC_AoA0="AoA0";SRC_AoA1="AoA1";SRC_AoA2="AoA2";SRC_AoA3="AoA3";SRC_AoA4="AoA4";SRC_AoA5="AoA5";SRC_AoA6="AoA6";SRC_AoE0="AoE0";SRC_AoE1="AoE1";SRC_AoE2="AoE2";SRC_AoE3="AoE3";SRC_AoE4="AoE4";SRC_AoE5="AoE5";SRC_AoE6="AoE6";SRC_APG="APG";SRC_AV0="AV0";SRC_AV1="AV1";SRC_AV2="AV2";SRC_AV3="AV3";SRC_AVH="AVH";SRC_B1="B1";SRC_B2="B2";SRC_B3="B3";SRC_BB="BB";SRC_BL0="BL0";SRC_BL1="BL1";SRC_BL2="BL2";SRC_BL3="BL3";SRC_BL4="BL4";SRC_BL5="BL5";SRC_BL6="BL6";SRC_BotD="BotD";SRC_CFD="CFD";SRC_CHD="CHD";SRC_CRB="CRB";SRC_DA="DA";SRC_EC0="EC0";SRC_EC1="EC1";SRC_EC2="EC2";SRC_EC3="EC3";SRC_EC4="EC4";SRC_EC5="EC5";SRC_EC6="EC6";SRC_FoP="FoP";SRC_FRP0="FRP0";SRC_FRP1="FRP1";SRC_FRP2="FRP2";SRC_FRP3="FRP3";SRC_GnG="G&G";SRC_GMG="GMG";SRC_GW0="GW0";SRC_GW1="GW1";SRC_GW2="GW2";SRC_HPD="HPD";SRC_LOACLO="LOACLO";SRC_LOAG="LOAG";SRC_LOCG="LOCG";SRC_LOGM="LOGM";SRC_LOGMWS="LOGMWS";SRC_LOIL="LOIL";SRC_LOKL="LOKL";SRC_LOL="LOL";SRC_LOME="LOME";SRC_LOMM="LOMM";SRC_LOPSG="LOPSG";SRC_LOTG="LOTG";SRC_LOTGB="LOTGB";SRC_LOWG="LOWG";SRC_LTiBA="LTiBA";SRC_Mal="Mal";SRC_NGD="NGD";SRC_OoA0="OoA0";SRC_OoA1="OoA1";SRC_OoA2="OoA2";SRC_OoA3="OoA3";SRC_POS1="POS1";SRC_PFUM="PFUM";SRC_QFF0="QFF0";SRC_QFF1="QFF1";SRC_QFF2="QFF2";SRC_QFF3="QFF3";SRC_SaS="SaS";SRC_Sli="Sli";SRC_SoM="SoM";SRC_SoT0="SoT0";SRC_SoT1="SoT1";SRC_SoT2="SoT2";SRC_SoT3="SoT3";SRC_SoT4="SoT4";SRC_SoT5="SoT5";SRC_SoT6="SoT6";SRC_TaL="TaL";SRC_TiO="TiO";SRC_ToK="ToK";Parser.SOURCE_JSON_TO_FULL[SRC_TV]="Treasure Vault";Parser.SOURCE_JSON_TO_FULL[SRC_AAWS]="Azarketi Ancestry Web Supplement";Parser.SOURCE_JSON_TO_FULL[SRC_AFoF]="A Fistful of Flowers";Parser.SOURCE_JSON_TO_FULL[SRC_AoA0]="Age of Ashes Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_AoA1]="Age of Ashes #1: Hellknight Hill";Parser.SOURCE_JSON_TO_FULL[SRC_AoA2]="Age of Ashes #2: Cult of Cinders";Parser.SOURCE_JSON_TO_FULL[SRC_AoA3]="Age of Ashes #3: Tomorrow Must Burn";Parser.SOURCE_JSON_TO_FULL[SRC_AoA4]="Age of Ashes #4: Fires of the Haunted City";Parser.SOURCE_JSON_TO_FULL[SRC_AoA5]="Age of Ashes #5: Against the Scarlet Triad";Parser.SOURCE_JSON_TO_FULL[SRC_AoA6]="Age of Ashes #6: Broken Promises";Parser.SOURCE_JSON_TO_FULL[SRC_AoE0]="Agents of Edgewatch Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_AoE1]="Agents of Edgewatch #1: Devil at the Dreaming Palace";Parser.SOURCE_JSON_TO_FULL[SRC_AoE2]="Agents of Edgewatch #2: Sixty Feet Under";Parser.SOURCE_JSON_TO_FULL[SRC_AoE3]="Agents of Edgewatch #3: All or Nothing";Parser.SOURCE_JSON_TO_FULL[SRC_AoE4]="Agents of Edgewatch #4: Assault on Hunting Lodge Seven";Parser.SOURCE_JSON_TO_FULL[SRC_AoE5]="Agents of Edgewatch #5: Belly of the Black Whale";Parser.SOURCE_JSON_TO_FULL[SRC_AoE6]="Agents of Edgewatch #6: Ruins of the Radiant Siege";Parser.SOURCE_JSON_TO_FULL[SRC_APG]="Advanced Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_AV0]="Abomination Vaults Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_AV1]="Abomination Vaults #1: Ruins of Gauntlight";Parser.SOURCE_JSON_TO_FULL[SRC_AV2]="Abomination Vaults #2: Hands of the Devil";Parser.SOURCE_JSON_TO_FULL[SRC_AV3]="Abomination Vaults #3: Eyes of Empty Death";Parser.SOURCE_JSON_TO_FULL[SRC_AVH]="Abomination Vaults Hardcover";Parser.SOURCE_JSON_TO_FULL[SRC_B1]="Bestiary";Parser.SOURCE_JSON_TO_FULL[SRC_B2]="Bestiary 2";Parser.SOURCE_JSON_TO_FULL[SRC_B3]="Bestiary 3";Parser.SOURCE_JSON_TO_FULL[SRC_BB]="Beginner Box";Parser.SOURCE_JSON_TO_FULL[SRC_BL0]="Blood Lords Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_BL1]="Blood Lords #1: Zombie Feast";Parser.SOURCE_JSON_TO_FULL[SRC_BL2]="Blood Lords #2: Graveclaw";Parser.SOURCE_JSON_TO_FULL[SRC_BL3]="Blood Lords #3: Field of Maidens";Parser.SOURCE_JSON_TO_FULL[SRC_BL4]="Blood Lords #4: The Ghouls Hunger";Parser.SOURCE_JSON_TO_FULL[SRC_BL5]="Blood Lords #5: A Taste of Ashes";Parser.SOURCE_JSON_TO_FULL[SRC_BL6]="Blood Lords #6: Ghost King's Rage";Parser.SOURCE_JSON_TO_FULL[SRC_BotD]="Book of the Dead";Parser.SOURCE_JSON_TO_FULL[SRC_CFD]="Critical Fumble Deck";Parser.SOURCE_JSON_TO_FULL[SRC_CHD]="Critical Hit Deck";Parser.SOURCE_JSON_TO_FULL[SRC_CRB]="Core Rulebook";Parser.SOURCE_JSON_TO_FULL[SRC_DA]="Dark Archive";Parser.SOURCE_JSON_TO_FULL[SRC_EC0]="Extinction Curse Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_EC1]="Extinction Curse #1: The Show Must Go On";Parser.SOURCE_JSON_TO_FULL[SRC_EC2]="Extinction Curse #2: Legacy of the Lost God";Parser.SOURCE_JSON_TO_FULL[SRC_EC3]="Extinction Curse #3: Life's Long Shadows";Parser.SOURCE_JSON_TO_FULL[SRC_EC4]="Extinction Curse #4: Siege of the Dinosaurs";Parser.SOURCE_JSON_TO_FULL[SRC_EC5]="Extinction Curse #5: Lord of the Black Sands";Parser.SOURCE_JSON_TO_FULL[SRC_EC6]="Extinction Curse #6: The Apocalypse Prophet";Parser.SOURCE_JSON_TO_FULL[SRC_FoP]="The Fall of Plaguestone";Parser.SOURCE_JSON_TO_FULL[SRC_FRP0]="Fists of the Ruby Phoenix Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_FRP1]="Fists of the Ruby Phoenix #1: Despair on Danger Island";Parser.SOURCE_JSON_TO_FULL[SRC_FRP2]="Fists of the Ruby Phoenix #2: Ready? Fight!";Parser.SOURCE_JSON_TO_FULL[SRC_FRP3]="Fists of the Ruby Phoenix #3: King of the Mountain";Parser.SOURCE_JSON_TO_FULL[SRC_GnG]="Guns & Gears";Parser.SOURCE_JSON_TO_FULL[SRC_GMG]="Gamemastery Guide";Parser.SOURCE_JSON_TO_FULL[SRC_GW0]="Gatewalkers Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_GW1]="Gatewalkers #1: The Seventh Arch";Parser.SOURCE_JSON_TO_FULL[SRC_GW2]="Gatewalkers #2: They Watched the Stars";Parser.SOURCE_JSON_TO_FULL[SRC_HPD]="Hero Point Deck";Parser.SOURCE_JSON_TO_FULL[SRC_LOACLO]="Lost Omens: Absalom, City of Lost Omens";Parser.SOURCE_JSON_TO_FULL[SRC_LOAG]="Lost Omens: Ancestry Guide";Parser.SOURCE_JSON_TO_FULL[SRC_LOCG]="Lost Omens: Character Guide";Parser.SOURCE_JSON_TO_FULL[SRC_LOGM]="Lost Omens: Gods & Magic";Parser.SOURCE_JSON_TO_FULL[SRC_LOGMWS]="Lost Omens: Gods & Magic Web Supplement";Parser.SOURCE_JSON_TO_FULL[SRC_LOIL]="Lost Omens: Impossible Lands";Parser.SOURCE_JSON_TO_FULL[SRC_LOKL]="Lost Omens: Knights of Lastwall";Parser.SOURCE_JSON_TO_FULL[SRC_LOL]="Lost Omens: Legends";Parser.SOURCE_JSON_TO_FULL[SRC_LOME]="Lost Omens: The Mwangi Expanse";Parser.SOURCE_JSON_TO_FULL[SRC_LOMM]="Lost Omens: Monsters of Myth";Parser.SOURCE_JSON_TO_FULL[SRC_LOPSG]="Lost Omens: Pathfinder Society Guide";Parser.SOURCE_JSON_TO_FULL[SRC_LOTG]="Lost Omens: Travel Guide";Parser.SOURCE_JSON_TO_FULL[SRC_LOTGB]="Lost Omens: The Grand Bazaar";Parser.SOURCE_JSON_TO_FULL[SRC_LOWG]="Lost Omens: World Guide";Parser.SOURCE_JSON_TO_FULL[SRC_LTiBA]="Little Trouble in Big Absalom";Parser.SOURCE_JSON_TO_FULL[SRC_Mal]="Malevolence";Parser.SOURCE_JSON_TO_FULL[SRC_NGD]="Night of the Gray Death";Parser.SOURCE_JSON_TO_FULL[SRC_OoA0]="Outlaws of Alkenstar Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_OoA1]="Outlaws of Alkenstar #1: Punks in a Powder Keg";Parser.SOURCE_JSON_TO_FULL[SRC_OoA2]="Outlaws of Alkenstar #2: Cradle of Quartz";Parser.SOURCE_JSON_TO_FULL[SRC_OoA3]="Outlaws of Alkenstar #3: The Smoking Gun";Parser.SOURCE_JSON_TO_FULL[SRC_POS1]="Pathfinder One-Shot: Sundered Waves";Parser.SOURCE_JSON_TO_FULL[SRC_PFUM]="PATHFINDER: FUMBUS!";Parser.SOURCE_JSON_TO_FULL[SRC_QFF0]="Quest for the Frozen Flame Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_QFF1]="Quest for the Frozen Flame #1: Broken Tusk Moon";Parser.SOURCE_JSON_TO_FULL[SRC_QFF2]="Quest for the Frozen Flame #2: Lost Mammoth Valley";Parser.SOURCE_JSON_TO_FULL[SRC_QFF3]="Quest for the Frozen Flame #3: Burning Tundra";Parser.SOURCE_JSON_TO_FULL[SRC_SaS]="Shadows at Sundown";Parser.SOURCE_JSON_TO_FULL[SRC_Sli]="The Slithering";Parser.SOURCE_JSON_TO_FULL[SRC_SoM]="Secrets of Magic";Parser.SOURCE_JSON_TO_FULL[SRC_SoT0]="Strength of Thousands Player's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_SoT1]="Strength of Thousands #1: Kindled Magic";Parser.SOURCE_JSON_TO_FULL[SRC_SoT2]="Strength of Thousands #2: Spoken on the Song Wind";Parser.SOURCE_JSON_TO_FULL[SRC_SoT3]="Strength of Thousands #3: Hurricane's Howl";Parser.SOURCE_JSON_TO_FULL[SRC_SoT4]="Strength of Thousands #4: Secrets of the Temple-City";Parser.SOURCE_JSON_TO_FULL[SRC_SoT5]="Strength of Thousands #5: Doorway to the Red Star";Parser.SOURCE_JSON_TO_FULL[SRC_SoT6]="Strength of Thousands #6: Shadows of the Ancients";Parser.SOURCE_JSON_TO_FULL[SRC_TaL]="Torment and Legacy";Parser.SOURCE_JSON_TO_FULL[SRC_TiO]="Troubles in Otari";Parser.SOURCE_JSON_TO_FULL[SRC_ToK]="Threshold of Knowledge";Parser.SOURCE_JSON_TO_ABV[SRC_TV]="TV";Parser.SOURCE_JSON_TO_ABV[SRC_AAWS]="AAWS";Parser.SOURCE_JSON_TO_ABV[SRC_AFoF]="AFoF";Parser.SOURCE_JSON_TO_ABV[SRC_AoA0]="AoA0";Parser.SOURCE_JSON_TO_ABV[SRC_AoA1]="AoA1";Parser.SOURCE_JSON_TO_ABV[SRC_AoA2]="AoA2";Parser.SOURCE_JSON_TO_ABV[SRC_AoA3]="AoA3";Parser.SOURCE_JSON_TO_ABV[SRC_AoA4]="AoA4";Parser.SOURCE_JSON_TO_ABV[SRC_AoA5]="AoA5";Parser.SOURCE_JSON_TO_ABV[SRC_AoA6]="AoA6";Parser.SOURCE_JSON_TO_ABV[SRC_AoE0]="AoE0";Parser.SOURCE_JSON_TO_ABV[SRC_AoE1]="AoE1";Parser.SOURCE_JSON_TO_ABV[SRC_AoE2]="AoE2";Parser.SOURCE_JSON_TO_ABV[SRC_AoE3]="AoE3";Parser.SOURCE_JSON_TO_ABV[SRC_AoE4]="AoE4";Parser.SOURCE_JSON_TO_ABV[SRC_AoE5]="AoE5";Parser.SOURCE_JSON_TO_ABV[SRC_AoE6]="AoE6";Parser.SOURCE_JSON_TO_ABV[SRC_APG]="APG";Parser.SOURCE_JSON_TO_ABV[SRC_AV0]="AV0";Parser.SOURCE_JSON_TO_ABV[SRC_AV1]="AV1";Parser.SOURCE_JSON_TO_ABV[SRC_AV2]="AV2";Parser.SOURCE_JSON_TO_ABV[SRC_AV3]="AV3";Parser.SOURCE_JSON_TO_ABV[SRC_AVH]="AVH";Parser.SOURCE_JSON_TO_ABV[SRC_B1]="B1";Parser.SOURCE_JSON_TO_ABV[SRC_B2]="B2";Parser.SOURCE_JSON_TO_ABV[SRC_B3]="B3";Parser.SOURCE_JSON_TO_ABV[SRC_BB]="BB";Parser.SOURCE_JSON_TO_ABV[SRC_BL0]="BL0";Parser.SOURCE_JSON_TO_ABV[SRC_BL1]="BL1";Parser.SOURCE_JSON_TO_ABV[SRC_BL2]="BL2";Parser.SOURCE_JSON_TO_ABV[SRC_BL3]="BL3";Parser.SOURCE_JSON_TO_ABV[SRC_BL4]="BL4";Parser.SOURCE_JSON_TO_ABV[SRC_BL5]="BL5";Parser.SOURCE_JSON_TO_ABV[SRC_BL6]="BL6";Parser.SOURCE_JSON_TO_ABV[SRC_BotD]="BotD";Parser.SOURCE_JSON_TO_ABV[SRC_CFD]="CFD";Parser.SOURCE_JSON_TO_ABV[SRC_CHD]="CHD";Parser.SOURCE_JSON_TO_ABV[SRC_CRB]="CRB";Parser.SOURCE_JSON_TO_ABV[SRC_DA]="DA";Parser.SOURCE_JSON_TO_ABV[SRC_EC0]="EC0";Parser.SOURCE_JSON_TO_ABV[SRC_EC1]="EC1";Parser.SOURCE_JSON_TO_ABV[SRC_EC2]="EC2";Parser.SOURCE_JSON_TO_ABV[SRC_EC3]="EC3";Parser.SOURCE_JSON_TO_ABV[SRC_EC4]="EC4";Parser.SOURCE_JSON_TO_ABV[SRC_EC5]="EC5";Parser.SOURCE_JSON_TO_ABV[SRC_EC6]="EC6";Parser.SOURCE_JSON_TO_ABV[SRC_FoP]="FoP";Parser.SOURCE_JSON_TO_ABV[SRC_FRP0]="FRP0";Parser.SOURCE_JSON_TO_ABV[SRC_FRP1]="FRP1";Parser.SOURCE_JSON_TO_ABV[SRC_FRP2]="FRP2";Parser.SOURCE_JSON_TO_ABV[SRC_FRP3]="FRP3";Parser.SOURCE_JSON_TO_ABV[SRC_GnG]="G&G";Parser.SOURCE_JSON_TO_ABV[SRC_GMG]="GMG";Parser.SOURCE_JSON_TO_ABV[SRC_GW0]="GW0";Parser.SOURCE_JSON_TO_ABV[SRC_GW1]="GW1";Parser.SOURCE_JSON_TO_ABV[SRC_GW2]="GW2";Parser.SOURCE_JSON_TO_ABV[SRC_HPD]="HPD";Parser.SOURCE_JSON_TO_ABV[SRC_LOACLO]="LOACLO";Parser.SOURCE_JSON_TO_ABV[SRC_LOAG]="LOAG";Parser.SOURCE_JSON_TO_ABV[SRC_LOCG]="LOCG";Parser.SOURCE_JSON_TO_ABV[SRC_LOGM]="LOGM";Parser.SOURCE_JSON_TO_ABV[SRC_LOGMWS]="LOGMWS";Parser.SOURCE_JSON_TO_ABV[SRC_LOIL]="LOIL";Parser.SOURCE_JSON_TO_ABV[SRC_LOKL]="LOKL";Parser.SOURCE_JSON_TO_ABV[SRC_LOL]="LOL";Parser.SOURCE_JSON_TO_ABV[SRC_LOME]="LOME";Parser.SOURCE_JSON_TO_ABV[SRC_LOMM]="LOMM";Parser.SOURCE_JSON_TO_ABV[SRC_LOPSG]="LOPSG";Parser.SOURCE_JSON_TO_ABV[SRC_LOTG]="LOTG";Parser.SOURCE_JSON_TO_ABV[SRC_LOTGB]="LOTGB";Parser.SOURCE_JSON_TO_ABV[SRC_LOWG]="LOWG";Parser.SOURCE_JSON_TO_ABV[SRC_LTiBA]="LTiBA";Parser.SOURCE_JSON_TO_ABV[SRC_Mal]="Mal";Parser.SOURCE_JSON_TO_ABV[SRC_NGD]="NGD";Parser.SOURCE_JSON_TO_ABV[SRC_OoA0]="OoA0";Parser.SOURCE_JSON_TO_ABV[SRC_OoA1]="OoA1";Parser.SOURCE_JSON_TO_ABV[SRC_OoA2]="OoA2";Parser.SOURCE_JSON_TO_ABV[SRC_OoA3]="OoA3";Parser.SOURCE_JSON_TO_ABV[SRC_POS1]="POS1";Parser.SOURCE_JSON_TO_ABV[SRC_PFUM]="PFUM";Parser.SOURCE_JSON_TO_ABV[SRC_QFF0]="QFF0";Parser.SOURCE_JSON_TO_ABV[SRC_QFF1]="QFF1";Parser.SOURCE_JSON_TO_ABV[SRC_QFF2]="QFF2";Parser.SOURCE_JSON_TO_ABV[SRC_QFF3]="QFF3";Parser.SOURCE_JSON_TO_ABV[SRC_SaS]="SaS";Parser.SOURCE_JSON_TO_ABV[SRC_Sli]="Sli";Parser.SOURCE_JSON_TO_ABV[SRC_SoM]="SoM";Parser.SOURCE_JSON_TO_ABV[SRC_SoT0]="SoT0";Parser.SOURCE_JSON_TO_ABV[SRC_SoT1]="SoT1";Parser.SOURCE_JSON_TO_ABV[SRC_SoT2]="SoT2";Parser.SOURCE_JSON_TO_ABV[SRC_SoT3]="SoT3";Parser.SOURCE_JSON_TO_ABV[SRC_SoT4]="SoT4";Parser.SOURCE_JSON_TO_ABV[SRC_SoT5]="SoT5";Parser.SOURCE_JSON_TO_ABV[SRC_SoT6]="SoT6";Parser.SOURCE_JSON_TO_ABV[SRC_TaL]="TaL";Parser.SOURCE_JSON_TO_ABV[SRC_TiO]="TiO";Parser.SOURCE_JSON_TO_ABV[SRC_ToK]="ToK";Parser.SOURCE_JSON_TO_DATE[SRC_TV]="2023-02-22";Parser.SOURCE_JSON_TO_DATE[SRC_AAWS]="2021-02-24";Parser.SOURCE_JSON_TO_DATE[SRC_AFoF]="2022-07-25";Parser.SOURCE_JSON_TO_DATE[SRC_AoA0]="2019-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_AoA1]="2019-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_AoA2]="2019-09-01";Parser.SOURCE_JSON_TO_DATE[SRC_AoA3]="2019-09-18";Parser.SOURCE_JSON_TO_DATE[SRC_AoA4]="2019-10-16";Parser.SOURCE_JSON_TO_DATE[SRC_AoA5]="2019-11-13";Parser.SOURCE_JSON_TO_DATE[SRC_AoA6]="2019-12-12";Parser.SOURCE_JSON_TO_DATE[SRC_AoE0]="2020-07-08";Parser.SOURCE_JSON_TO_DATE[SRC_AoE1]="2020-07-30";Parser.SOURCE_JSON_TO_DATE[SRC_AoE2]="2020-08-26";Parser.SOURCE_JSON_TO_DATE[SRC_AoE3]="2020-09-15";Parser.SOURCE_JSON_TO_DATE[SRC_AoE4]="2020-10-14";Parser.SOURCE_JSON_TO_DATE[SRC_AoE5]="2020-11-15";Parser.SOURCE_JSON_TO_DATE[SRC_AoE6]="2020-12-15";Parser.SOURCE_JSON_TO_DATE[SRC_APG]="2020-07-30";Parser.SOURCE_JSON_TO_DATE[SRC_AV0]="2021-01-15";Parser.SOURCE_JSON_TO_DATE[SRC_AV1]="2021-01-15";Parser.SOURCE_JSON_TO_DATE[SRC_AV2]="2021-02-24";Parser.SOURCE_JSON_TO_DATE[SRC_AV3]="2021-04-07";Parser.SOURCE_JSON_TO_DATE[SRC_AVH]="2022-05-25";Parser.SOURCE_JSON_TO_DATE[SRC_B1]="2019-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_B2]="2020-05-27";Parser.SOURCE_JSON_TO_DATE[SRC_B3]="2021-04-07";Parser.SOURCE_JSON_TO_DATE[SRC_BB]="2020-11-11";Parser.SOURCE_JSON_TO_DATE[SRC_BL0]="2022-06-29";Parser.SOURCE_JSON_TO_DATE[SRC_BL1]="2022-07-27";Parser.SOURCE_JSON_TO_DATE[SRC_BL2]="2022-08-31";Parser.SOURCE_JSON_TO_DATE[SRC_BL3]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_BL4]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_BL5]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_BL6]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_BotD]="2022-04-27";Parser.SOURCE_JSON_TO_DATE[SRC_CFD]="2019-10-16";Parser.SOURCE_JSON_TO_DATE[SRC_CHD]="2019-10-16";Parser.SOURCE_JSON_TO_DATE[SRC_CRB]="2019-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_DA]="2022-07-27";Parser.SOURCE_JSON_TO_DATE[SRC_EC0]="2020-01-13";Parser.SOURCE_JSON_TO_DATE[SRC_EC1]="2020-01-30";Parser.SOURCE_JSON_TO_DATE[SRC_EC2]="2020-02-26";Parser.SOURCE_JSON_TO_DATE[SRC_EC3]="2020-03-26";Parser.SOURCE_JSON_TO_DATE[SRC_EC4]="2020-04-29";Parser.SOURCE_JSON_TO_DATE[SRC_EC5]="2020-05-27";Parser.SOURCE_JSON_TO_DATE[SRC_EC6]="2020-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_FoP]="2019-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_FRP0]="2021-04-12";Parser.SOURCE_JSON_TO_DATE[SRC_FRP1]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_FRP2]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_FRP3]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_GnG]="2021-10-13";Parser.SOURCE_JSON_TO_DATE[SRC_GMG]="2020-02-26";Parser.SOURCE_JSON_TO_DATE[SRC_GW0]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_GW1]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_GW2]=undefined;Parser.SOURCE_JSON_TO_DATE[SRC_HPD]="2021-11-10";Parser.SOURCE_JSON_TO_DATE[SRC_LOACLO]="2021-12-22";Parser.SOURCE_JSON_TO_DATE[SRC_LOAG]="2021-02-24";Parser.SOURCE_JSON_TO_DATE[SRC_LOCG]="2019-10-16";Parser.SOURCE_JSON_TO_DATE[SRC_LOGM]="2020-01-29";Parser.SOURCE_JSON_TO_DATE[SRC_LOGMWS]="2020-01-29";Parser.SOURCE_JSON_TO_DATE[SRC_LOIL]="2021-11-06";Parser.SOURCE_JSON_TO_DATE[SRC_LOKL]="2022-05-25";Parser.SOURCE_JSON_TO_DATE[SRC_LOL]="2020-07-30";Parser.SOURCE_JSON_TO_DATE[SRC_LOME]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_LOMM]="2021-12-22";Parser.SOURCE_JSON_TO_DATE[SRC_LOPSG]="2020-10-14";Parser.SOURCE_JSON_TO_DATE[SRC_LOTG]="2022-08-31";Parser.SOURCE_JSON_TO_DATE[SRC_LOTGB]="2021-10-13";Parser.SOURCE_JSON_TO_DATE[SRC_LOWG]="2019-08-31";Parser.SOURCE_JSON_TO_DATE[SRC_LTiBA]="2020-07-25";Parser.SOURCE_JSON_TO_DATE[SRC_Mal]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_NGD]="2021-10-13";Parser.SOURCE_JSON_TO_DATE[SRC_OoA0]="2022-03-28";Parser.SOURCE_JSON_TO_DATE[SRC_OoA1]="2022-04-27";Parser.SOURCE_JSON_TO_DATE[SRC_OoA2]="2022-05-25";Parser.SOURCE_JSON_TO_DATE[SRC_OoA3]="2022-06-29";Parser.SOURCE_JSON_TO_DATE[SRC_POS1]="2021-03-06";Parser.SOURCE_JSON_TO_DATE[SRC_PFUM]="2021-11-11";Parser.SOURCE_JSON_TO_DATE[SRC_QFF0]="2021-12-20";Parser.SOURCE_JSON_TO_DATE[SRC_QFF1]="2021-01-26";Parser.SOURCE_JSON_TO_DATE[SRC_QFF2]="2021-02-23";Parser.SOURCE_JSON_TO_DATE[SRC_QFF3]="2021-03-30";Parser.SOURCE_JSON_TO_DATE[SRC_SaS]="2022-05-25";Parser.SOURCE_JSON_TO_DATE[SRC_Sli]="2020-07-30";Parser.SOURCE_JSON_TO_DATE[SRC_SoM]="2021-09-01";Parser.SOURCE_JSON_TO_DATE[SRC_SoT0]="2021-07-26";Parser.SOURCE_JSON_TO_DATE[SRC_SoT1]="2021-08-05";Parser.SOURCE_JSON_TO_DATE[SRC_SoT2]="2021-09-01";Parser.SOURCE_JSON_TO_DATE[SRC_SoT3]="2021-10-13";Parser.SOURCE_JSON_TO_DATE[SRC_SoT4]="2021-10-13";Parser.SOURCE_JSON_TO_DATE[SRC_SoT5]="2021-11-10";Parser.SOURCE_JSON_TO_DATE[SRC_SoT6]="2021-07-26";Parser.SOURCE_JSON_TO_DATE[SRC_TaL]="2019-09-11";Parser.SOURCE_JSON_TO_DATE[SRC_TiO]="2020-12-09";Parser.SOURCE_JSON_TO_DATE[SRC_ToK]="2021-11-19";Parser.SOURCE_JSON_TO_STORE[SRC_TV]="https://paizo.com/products/btq02eav";Parser.SOURCE_JSON_TO_STORE[SRC_AAWS]="https://paizo-images.s3-us-west-2.amazonaws.com/image/download/Azarketi+Ancestry.pdf";Parser.SOURCE_JSON_TO_STORE[SRC_AFoF]="https://paizo.com/products/btq02d8f";Parser.SOURCE_JSON_TO_STORE[SRC_AoA0]="https://paizo.com/products/btq024wj";Parser.SOURCE_JSON_TO_STORE[SRC_AoA1]="https://paizo.com/products/btq024tw";Parser.SOURCE_JSON_TO_STORE[SRC_AoA2]="https://paizo.com/products/btq022ci";Parser.SOURCE_JSON_TO_STORE[SRC_AoA3]="https://paizo.com/products/btq022lx";Parser.SOURCE_JSON_TO_STORE[SRC_AoA4]="https://paizo.com/products/btq0233p";Parser.SOURCE_JSON_TO_STORE[SRC_AoA5]="https://paizo.com/products/btq023dz";Parser.SOURCE_JSON_TO_STORE[SRC_AoA6]="https://paizo.com/products/btq023g1";Parser.SOURCE_JSON_TO_STORE[SRC_AoE0]="https://paizo.com/products/btq01zth";Parser.SOURCE_JSON_TO_STORE[SRC_AoE1]="https://paizo.com/products/btq01znq";Parser.SOURCE_JSON_TO_STORE[SRC_AoE2]="https://paizo.com/products/btq01znt";Parser.SOURCE_JSON_TO_STORE[SRC_AoE3]="https://paizo.com/products/btq01zrs";Parser.SOURCE_JSON_TO_STORE[SRC_AoE4]="https://paizo.com/products/btq0204d";Parser.SOURCE_JSON_TO_STORE[SRC_AoE5]="https://paizo.com/products/btq02065";Parser.SOURCE_JSON_TO_STORE[SRC_AoE6]="https://paizo.com/products/btq021cb";Parser.SOURCE_JSON_TO_STORE[SRC_APG]="https://paizo.com/products/btq023ih";Parser.SOURCE_JSON_TO_STORE[SRC_AV0]="https://paizo.com/community/blog/v5748dyo6shjm";Parser.SOURCE_JSON_TO_STORE[SRC_AV1]="https://paizo.com/products/btq026kj";Parser.SOURCE_JSON_TO_STORE[SRC_AV2]="https://paizo.com/products/btq027jm";Parser.SOURCE_JSON_TO_STORE[SRC_AV3]="https://paizo.com/products/btq024xm";Parser.SOURCE_JSON_TO_STORE[SRC_AVH]="https://paizo.com/products/btq02ajj";Parser.SOURCE_JSON_TO_STORE[SRC_B1]="https://paizo.com/products/btq01zp4";Parser.SOURCE_JSON_TO_STORE[SRC_B2]="https://paizo.com/products/btq022yq";Parser.SOURCE_JSON_TO_STORE[SRC_B3]="https://paizo.com/products/btq027mn";Parser.SOURCE_JSON_TO_STORE[SRC_BB]="https://paizo.com/products/btq023dx";Parser.SOURCE_JSON_TO_STORE[SRC_BL0]="https://paizo.com/community/blog/v5748dyo6si34";Parser.SOURCE_JSON_TO_STORE[SRC_BL1]="https://paizo.com/products/btq02art";Parser.SOURCE_JSON_TO_STORE[SRC_BL2]="https://paizo.com/products/btq02asf";Parser.SOURCE_JSON_TO_STORE[SRC_BL3]="https://paizo.com/products/btq02c11";Parser.SOURCE_JSON_TO_STORE[SRC_BL4]="https://paizo.com/products/btq02c4e";Parser.SOURCE_JSON_TO_STORE[SRC_BL5]="https://paizo.com/products/btq02d51";Parser.SOURCE_JSON_TO_STORE[SRC_BL6]="https://paizo.com/products/btq02d71";Parser.SOURCE_JSON_TO_STORE[SRC_BotD]="https://paizo.com/products/btq02c0j";Parser.SOURCE_JSON_TO_STORE[SRC_CFD]="https://paizo.com/products/btq024ud";Parser.SOURCE_JSON_TO_STORE[SRC_CHD]="https://paizo.com/products/btq024tn";Parser.SOURCE_JSON_TO_STORE[SRC_CRB]="https://paizo.com/products/btq01zp3";Parser.SOURCE_JSON_TO_STORE[SRC_DA]="https://paizo.com/products/btq02arq";Parser.SOURCE_JSON_TO_STORE[SRC_EC0]="https://paizo.com/products/btq022ks";Parser.SOURCE_JSON_TO_STORE[SRC_EC1]="https://paizo.com/products/btq01zqb";Parser.SOURCE_JSON_TO_STORE[SRC_EC2]="https://paizo.com/products/btq01zrd";Parser.SOURCE_JSON_TO_STORE[SRC_EC3]="https://paizo.com/products/btq01zuh";Parser.SOURCE_JSON_TO_STORE[SRC_EC4]="https://paizo.com/products/btq0216l";Parser.SOURCE_JSON_TO_STORE[SRC_EC5]="https://paizo.com/products/btq021by";Parser.SOURCE_JSON_TO_STORE[SRC_EC6]="https://paizo.com/products/btq021f4";Parser.SOURCE_JSON_TO_STORE[SRC_FoP]="https://paizo.com/products/btq01zoh";Parser.SOURCE_JSON_TO_STORE[SRC_FRP0]="https://paizo.com/community/blog/v5748dyo6shmo";Parser.SOURCE_JSON_TO_STORE[SRC_FRP1]="https://paizo.com/products/btq027qd";Parser.SOURCE_JSON_TO_STORE[SRC_FRP2]="https://paizo.com/products/btq027sp";Parser.SOURCE_JSON_TO_STORE[SRC_FRP3]="https://paizo.com/products/btq027sq";Parser.SOURCE_JSON_TO_STORE[SRC_GnG]="https://paizo.com/products/btq026mw";Parser.SOURCE_JSON_TO_STORE[SRC_GMG]="https://paizo.com/products/btq022c1";Parser.SOURCE_JSON_TO_STORE[SRC_GW0]=undefined;Parser.SOURCE_JSON_TO_STORE[SRC_GW1]="https://paizo.com/products/btq02dsq";Parser.SOURCE_JSON_TO_STORE[SRC_GW2]="https://paizo.com/products/btq02dw1";Parser.SOURCE_JSON_TO_STORE[SRC_HPD]="https://paizo.com/products/btq024ut";Parser.SOURCE_JSON_TO_STORE[SRC_LOACLO]="https://paizo.com/products/btq02ap2";Parser.SOURCE_JSON_TO_STORE[SRC_LOAG]="https://paizo.com/products/btq026k5";Parser.SOURCE_JSON_TO_STORE[SRC_LOCG]="https://paizo.com/products/btq01zt4";Parser.SOURCE_JSON_TO_STORE[SRC_LOGM]="https://paizo.com/products/btq021wf";Parser.SOURCE_JSON_TO_STORE[SRC_LOGMWS]="https://paizo-images.s3-us-west-2.amazonaws.com/image/download/PZO9303+Gods+%26+Magic+Web+Supplement.pdf";Parser.SOURCE_JSON_TO_STORE[SRC_LOIL]="https://paizo.com/products/btq02dxx";Parser.SOURCE_JSON_TO_STORE[SRC_LOKL]="https://paizo.com/products/btq02c3a";Parser.SOURCE_JSON_TO_STORE[SRC_LOL]="https://paizo.com/products/btq023gd";Parser.SOURCE_JSON_TO_STORE[SRC_LOME]="https://paizo.com/products/btq026i4";Parser.SOURCE_JSON_TO_STORE[SRC_LOMM]="https://paizo.com/products/btq027u2";Parser.SOURCE_JSON_TO_STORE[SRC_LOPSG]="https://paizo.com/products/btq0250x";Parser.SOURCE_JSON_TO_STORE[SRC_LOTG]="https://paizo.com/products/btq02c20";Parser.SOURCE_JSON_TO_STORE[SRC_LOTGB]="https://paizo.com/products/btq027kc";Parser.SOURCE_JSON_TO_STORE[SRC_LOWG]="https://paizo.com/products/btq01zoj";Parser.SOURCE_JSON_TO_STORE[SRC_LTiBA]="https://paizo.com/products/btq024ys";Parser.SOURCE_JSON_TO_STORE[SRC_Mal]="https://paizo.com/products/btq027qf";Parser.SOURCE_JSON_TO_STORE[SRC_NGD]="https://paizo.com/products/btq027o0";Parser.SOURCE_JSON_TO_STORE[SRC_OoA0]="https://paizo.com/community/blog/v5748dyo6si08";Parser.SOURCE_JSON_TO_STORE[SRC_OoA1]="https://paizo.com/products/btq02ajl";Parser.SOURCE_JSON_TO_STORE[SRC_OoA2]="https://paizo.com/products/btq02am3";Parser.SOURCE_JSON_TO_STORE[SRC_OoA3]="https://paizo.com/products/btq02aot";Parser.SOURCE_JSON_TO_STORE[SRC_POS1]="https://paizo.com/products/btq027oe";Parser.SOURCE_JSON_TO_STORE[SRC_PFUM]="https://www.kickstarter.com/projects/dynamiteent/pathfinder-fumbus?ref=Pf2eTools";Parser.SOURCE_JSON_TO_STORE[SRC_QFF0]="https://paizo.com/community/blog/v5748dyo6shx3";Parser.SOURCE_JSON_TO_STORE[SRC_QFF1]="https://paizo.com/products/btq02asv";Parser.SOURCE_JSON_TO_STORE[SRC_QFF2]="https://paizo.com/products/btq029ud";Parser.SOURCE_JSON_TO_STORE[SRC_QFF3]="https://paizo.com/products/btq029wg";Parser.SOURCE_JSON_TO_STORE[SRC_SaS]="https://paizo.com/products/btq02d7e";Parser.SOURCE_JSON_TO_STORE[SRC_Sli]="https://paizo.com/products/btq023hg";Parser.SOURCE_JSON_TO_STORE[SRC_SoM]="https://paizo.com/products/btq027uy";Parser.SOURCE_JSON_TO_STORE[SRC_SoT0]="https://paizo.com/community/blog/v5748dyo6shr4";Parser.SOURCE_JSON_TO_STORE[SRC_SoT1]="https://paizo.com/products/btq026li";Parser.SOURCE_JSON_TO_STORE[SRC_SoT2]="https://paizo.com/products/btq026mv";Parser.SOURCE_JSON_TO_STORE[SRC_SoT3]="https://paizo.com/products/btq027kb";Parser.SOURCE_JSON_TO_STORE[SRC_SoT4]="https://paizo.com/products/btq027nz";Parser.SOURCE_JSON_TO_STORE[SRC_SoT5]="https://paizo.com/products/btq027s2";Parser.SOURCE_JSON_TO_STORE[SRC_SoT6]="https://paizo.com/products/btq027u1";Parser.SOURCE_JSON_TO_STORE[SRC_TaL]="https://paizo.com/products/btq021ax";Parser.SOURCE_JSON_TO_STORE[SRC_TiO]="https://paizo.com/products/btq026k1";Parser.SOURCE_JSON_TO_STORE[SRC_ToK]="https://paizo.com/products/btq027qf";Parser.SOURCES_ADVENTURES=new Set([SRC_AFoF,SRC_AoA0,SRC_AoA1,SRC_AoA2,SRC_AoA3,SRC_AoA4,SRC_AoA5,SRC_AoA6,SRC_AoE0,SRC_AoE1,SRC_AoE2,SRC_AoE3,SRC_AoE4,SRC_AoE5,SRC_AoE6,SRC_AV0,SRC_AV1,SRC_AV2,SRC_AV3,SRC_AVH,SRC_BB,SRC_BL0,SRC_BL1,SRC_BL2,SRC_BL3,SRC_BL4,SRC_BL5,SRC_BL6,SRC_EC0,SRC_EC1,SRC_EC2,SRC_EC3,SRC_EC4,SRC_EC5,SRC_EC6,SRC_FoP,SRC_FRP0,SRC_FRP1,SRC_FRP2,SRC_FRP3,SRC_GW0,SRC_GW1,SRC_GW2,SRC_LTiBA,SRC_Mal,SRC_NGD,SRC_OoA0,SRC_OoA1,SRC_OoA2,SRC_OoA3,SRC_POS1,SRC_QFF0,SRC_QFF1,SRC_QFF2,SRC_QFF3,SRC_SaS,SRC_Sli,SRC_SoT0,SRC_SoT1,SRC_SoT2,SRC_SoT3,SRC_SoT4,SRC_SoT5,SRC_SoT6,SRC_TaL,SRC_TiO,SRC_ToK]);Parser.SOURCES_VANILLA=new Set([SRC_APG,SRC_B1,SRC_B2,SRC_B3,SRC_BotD,SRC_CRB,SRC_DA,SRC_GnG,SRC_GMG,SRC_SoM]);Parser.TAG_TO_DEFAULT_SOURCE={versatileHeritage:SRC_APG,familiar:SRC_APG,optfeature:SRC_APG,creatureTemplate:SRC_B1,ability:SRC_B1,creature:SRC_B1,spell:SRC_CRB,item:SRC_CRB,class:SRC_CRB,condition:SRC_CRB,background:SRC_CRB,ancestry:SRC_CRB,archetype:SRC_CRB,feat:SRC_CRB,trap:SRC_CRB,hazard:SRC_CRB,deity:SRC_CRB,action:SRC_CRB,classFeature:SRC_CRB,subclassFeature:SRC_CRB,table:SRC_CRB,language:SRC_CRB,ritual:SRC_CRB,trait:SRC_CRB,group:SRC_CRB,domain:SRC_CRB,skill:SRC_CRB,familiarAbility:SRC_CRB,companion:SRC_CRB,companionAbility:SRC_CRB,disease:SRC_GMG,curse:SRC_GMG,variantrule:SRC_GMG,vehicle:SRC_GMG,place:SRC_GMG,plane:SRC_GMG,relicGift:SRC_GMG,settlement:SRC_GMG,nation:SRC_GMG,organization:SRC_LOCG,event:SRC_LOTG,eidolon:SRC_SoM};[SRC_TV,SRC_AAWS,SRC_APG,SRC_B1,SRC_B2,SRC_B3,SRC_BotD,SRC_CFD,SRC_CHD,SRC_CRB,SRC_DA,SRC_GnG,SRC_GMG,SRC_HPD,SRC_LOACLO,SRC_LOAG,SRC_LOCG,SRC_LOGM,SRC_LOGMWS,SRC_LOIL,SRC_LOKL,SRC_LOL,SRC_LOME,SRC_LOMM,SRC_LOPSG,SRC_LOTG,SRC_LOTGB,SRC_LOWG,SRC_PFUM,SRC_SoM].forEach((src=>{Parser.SOURCES_AVAILABLE_DOCS_BOOK[src]=src;Parser.SOURCES_AVAILABLE_DOCS_BOOK[src.toLowerCase()]=src}));[SRC_AFoF,SRC_AoA0,SRC_AoA1,SRC_AoA2,SRC_AoA3,SRC_AoA4,SRC_AoA5,SRC_AoA6,SRC_AoE0,SRC_AoE1,SRC_AoE2,SRC_AoE3,SRC_AoE4,SRC_AoE5,SRC_AoE6,SRC_AV0,SRC_AV1,SRC_AV2,SRC_AV3,SRC_AVH,SRC_BB,SRC_BL0,SRC_BL1,SRC_BL2,SRC_BL3,SRC_BL4,SRC_BL5,SRC_BL6,SRC_EC0,SRC_EC1,SRC_EC2,SRC_EC3,SRC_EC4,SRC_EC5,SRC_EC6,SRC_FoP,SRC_FRP0,SRC_FRP1,SRC_FRP2,SRC_FRP3,SRC_GW0,SRC_GW1,SRC_GW2,SRC_LTiBA,SRC_Mal,SRC_NGD,SRC_OoA0,SRC_OoA1,SRC_OoA2,SRC_OoA3,SRC_POS1,SRC_QFF0,SRC_QFF1,SRC_QFF2,SRC_QFF3,SRC_SaS,SRC_Sli,SRC_SoT0,SRC_SoT1,SRC_SoT2,SRC_SoT3,SRC_SoT4,SRC_SoT5,SRC_SoT6,SRC_TaL,SRC_TiO,SRC_ToK].forEach((src=>{Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[src]=src;Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[src.toLowerCase()]=src}));Parser.SOURCES_ACCESSORIES=new Set(SRC_CFD,SRC_CHD,SRC_HPD);Parser.SOURCES_CORE_SUPPLEMENTS=new Set(Object.keys(Parser.SOURCE_JSON_TO_FULL).filter((it=>!Parser.SOURCES_ADVENTURES.has(it)&&!Parser.SOURCES_ACCESSORIES.has(it))));Parser.getTagSource=function(tag,source){if(source&&source.trim())return source;tag=tag.trim();if(tag.startsWith("@"))tag=tag.slice(1);if(!Parser.TAG_TO_DEFAULT_SOURCE[tag])throw new Error(`Unhandled tag source "${tag}"`);return Parser.TAG_TO_DEFAULT_SOURCE[tag]};Parser.getTraitName=function(trait){const name=trait?Parser.parseTraits([trait.replace(/\|.+/,"")],{toNone:true})[0]:"";if(name===name.toUpperCase())return name;else if(name.length<=2)return name.toUpperCase();else return name.toTitleCase()};Parser.rarityToNumber=function(r){if(isNaN(r)){switch(r.toLowerCase()){case"common":return 0;case"uncommon":return 1;case"rare":return 2;case"unique":return 3;default:return 69}}else return r};Parser.dmgTypeToFull=function(dmg){return Parser._parse_aToB(Parser.DMGTYPE_JSON_TO_FULL,dmg)};Parser.DMGTYPE_JSON_TO_FULL={A:"acid",B:"bludgeoning",C:"cold",D:"bleed",E:"electricity",F:"fire",H:"chaotic",I:"poison",L:"lawful",M:"mental",Mod:"modular",N:"sonic",O:"force",P:"piercing",R:"precision",S:"slashing","+":"positive","-":"negative"};Parser.levelToDC=function(level,isSpell,traits){if(isNaN(level))return"?";let DC=0;if(isSpell.toLowerCase()==="focus"||isSpell.toLowerCase()==="spell"||isSpell===true)level=level*2-1;if(level<21)DC=14+Number(level)+Math.floor(level/3);else DC=40+Number((level-20)*2);if(traits&&traits.length){const difficulties=typeof traits==="string"?traits.split(" "):traits.filter((it=>typeof it==="string"));difficulties.forEach((difficulty=>{switch(Parser.rarityToNumber(difficulty)){case-3:DC=DC-10;break;case-2:DC=DC-5;break;case-1:DC=DC-2;break;case 1:DC=DC+2;break;case 2:DC=DC+5;break;case 3:DC=DC+10;break;default:break}}))}return`${DC}${level<0||level>25?`*`:""}`};Parser.typeToSkill=function(type){if(typeof type==="string"||type instanceof String){type=type.split()}let skill=new Set;for(let i=0;i<type.length;i++){let typeNum=type[i];switch(typeNum.toLowerCase()){case"aberration":skill.add("{@skill Occultism}");break;case"animal":skill.add("{@skill Nature}");break;case"astral":skill.add("{@skill Occultism}");break;case"beast":skill.add("{@skill Arcana}");skill.add("{@skill Nature}");break;case"celestial":skill.add("{@skill Religion}");break;case"construct":skill.add("{@skill Arcana}");skill.add("{@skill Crafting}");break;case"dragon":skill.add("{@skill Arcana}");break;case"elemental":skill.add("{@skill Arcana}");skill.add("{@skill Nature}");break;case"ethereal":skill.add("{@skill Occultism}");break;case"fey":skill.add("{@skill Nature}");break;case"fiend":skill.add("{@skill Religion}");break;case"fungus":skill.add("{@skill Nature}");break;case"humanoid":skill.add("{@skill Society}");break;case"monitor":skill.add("{@skill Religion}");break;case"ooze":skill.add("{@skill Occultism}");break;case"spirit":skill.add("{@skill Occultism}");break;case"plant":skill.add("{@skill Nature}");break;case"undead":skill.add("{@skill Religion}");break;case"arcane":skill.add("{@skill Arcana}");break;case"divine":skill.add("{@skill Religion}");break;case"occult":skill.add("{@skill Occultism}");break;case"primal":skill.add("{@skill Nature}");break;case"magical":skill.add("{@skill Arcana}");skill.add("{@skill Religion}");skill.add("{@skill Occultism}");skill.add("{@skill Nature}");break;case"alchemical":case"item":skill.add("{@skill Crafting}");break;default:break}}return[...skill].join(" or ")};Parser.getKeyByValue=function(object,value){return Object.keys(object).filter((function(key){return object[key]===value}))};Parser.parseSkills=function(array,opts){opts=opts||{};if(opts.toTags&&(opts.toNaked||opts.toNone))throw new Error("Cannot convert to multiple types of strings!");let newArray=opts.toTitleCase?array.map((t=>t.toTitleCase())):array;return newArray.map((it=>{if(opts.toTags){return`{@skill ${it.replace(/<.+>/g,"").trim()}||${it.replace(/<|>/g,"").trim()}}`}if(opts.toNaked){return it.replace(/<|>/g,"").trim()}if(opts.toNone){return it.replace(/<.+>/g,"").trim()}}))};Parser.parseTraits=function(array,opts){opts=opts||{};if(opts.toTags&&(opts.toNaked||opts.toNone))throw new Error("Cannot convert to multiple types of strings!");if(!(opts.toTags||opts.toNaked||opts.toNone))throw new Error("Need arguments!");let newArray=opts.toTitleCase?array.map((t=>t.toTitleCase())):array;return newArray.map((it=>{if(opts.toTags){return`{@trait ${it.replace(/<.+>/g,"").trim()}||${it.replace(/<|>/g,"").trim()}}`}if(opts.toNaked){return it.replace(/<|>/g,"").trim()}if(opts.toNone){return it.replace(/<.+>/g,"").trim()}}))};;
if(typeof module!=="undefined")require("./parser.js");IS_DEPLOYED="v0.8.1";VERSION_NUMBER="0.8.1";DEPLOYED_STATIC_ROOT="";IS_VTT=false;IMGUR_CLIENT_ID=`abdea4de492d3b0`;HASH_PART_SEP=",";HASH_LIST_SEP="_";HASH_SUB_LIST_SEP="~";HASH_SUB_KV_SEP=":";HASH_BLANK="blankhash";HASH_SUB_NONE="null";VeCt={STR_NONE:"None",STR_SEE_CONSOLE:"See the console (CTRL+SHIFT+J) for details.",HASH_CR_SCALED:"scaled",HASH_ITEM_RUNES:"runeitem",FILTER_BOX_SUB_HASH_SEARCH_PREFIX:"fbsr",JSON_HOMEBREW_INDEX:`homebrew/index.json`,STORAGE_HOMEBREW:"HOMEBREW_STORAGE",STORAGE_HOMEBREW_META:"HOMEBREW_META_STORAGE",STORAGE_EXCLUDES:"EXCLUDES_STORAGE",STORAGE_DMSCREEN:"DMSCREEN_STORAGE",STORAGE_DMSCREEN_TEMP_SUBLIST:"DMSCREEN_TEMP_SUBLIST",STORAGE_ROLLER_MACRO:"ROLLER_MACRO_STORAGE",STORAGE_ENCOUNTER:"ENCOUNTER_STORAGE",STORAGE_RUNEITEM:"RUNEITEM_STORAGE",STORAGE_POINTBUY:"POINTBUY_STORAGE",DUR_INLINE_NOTIFY:500,PG_NONE:"NO_PAGE",SYM_UI_SKIP:Symbol("uiSkip")};String.prototype.uppercaseFirst=String.prototype.uppercaseFirst||function(){const str=this.toString();if(str.length===0)return str;if(str.length===1)return str.charAt(0).toUpperCase();return str.charAt(0).toUpperCase()+str.slice(1)};String.prototype.lowercaseFirst=String.prototype.lowercaseFirst||function(){const str=this.toString();if(str.length===0)return str;if(str.length===1)return str.charAt(0).toLowerCase();return str.charAt(0).toLowerCase()+str.slice(1)};String.prototype.uq=String.prototype.uq||function(){return this.unescapeQuotes()};String.prototype.toTitleCase=String.prototype.toTitleCase||function(){let str=this.replace(/([^\W_]+[^\s-/]*) */g,(m0=>m0.charAt(0).toUpperCase()+m0.substr(1).toLowerCase()));StrUtil._TITLE_LOWER_WORDS_RE=StrUtil._TITLE_LOWER_WORDS_RE=StrUtil.TITLE_LOWER_WORDS.map((it=>new RegExp(`\\s${it}\\s`,"gi")));StrUtil._TITLE_UPPER_WORDS_RE=StrUtil._TITLE_UPPER_WORDS_RE=StrUtil.TITLE_UPPER_WORDS.map((it=>new RegExp(`\\b${it}\\b`,"g")));const len=StrUtil.TITLE_LOWER_WORDS.length;for(let i=0;i<len;i++){str=str.replace(StrUtil._TITLE_LOWER_WORDS_RE[i],(txt=>txt.toLowerCase()))}const len1=StrUtil.TITLE_UPPER_WORDS.length;for(let i=0;i<len1;i++){str=str.replace(StrUtil._TITLE_UPPER_WORDS_RE[i],StrUtil.TITLE_UPPER_WORDS[i].toUpperCase())}return str};String.prototype.toSentenceCase=String.prototype.toSentenceCase||function(){const out=[];const re=/([^.!?]+)([.!?]\s*|$)/gi;let m;do{m=re.exec(this);if(m){out.push(m[0].toLowerCase().uppercaseFirst())}}while(m);return out.join("")};String.prototype.toSpellCase=String.prototype.toSpellCase||function(){return this.toLowerCase().replace(/(^|of )(bigby|otiluke|mordenkainen|evard|hadar|agathys|abi-dalzim|aganazzar|drawmij|leomund|maximilian|melf|nystul|otto|rary|snilloc|tasha|tenser|jim)('s|$| )/g,((...m)=>`${m[1]}${m[2].toTitleCase()}${m[3]}`))};String.prototype.toCamelCase=String.prototype.toCamelCase||function(){return this.split(" ").map(((word,index)=>{if(index===0)return word.toLowerCase();return`${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`})).join("")};String.prototype.escapeQuotes=String.prototype.escapeQuotes||function(){return this.replace(/'/g,`&apos;`).replace(/"/g,`&quot;`)};String.prototype.qq=String.prototype.qq||function(){return this.escapeQuotes()};String.prototype.unescapeQuotes=String.prototype.unescapeQuotes||function(){return this.replace(/&apos;/g,`'`).replace(/&quot;/g,`"`)};String.prototype.uq=String.prototype.uq||function(){return this.unescapeQuotes()};String.prototype.encodeApos=String.prototype.encodeApos||function(){return this.replace(/'/g,`%27`)};String.prototype.distance=String.prototype.distance||function(target){let source=this;let i;let j;if(!source)return target?target.length:0;else if(!target)return source.length;const m=source.length;const n=target.length;const INF=m+n;const score=new Array(m+2);const sd={};for(i=0;i<m+2;i++)score[i]=new Array(n+2);score[0][0]=INF;for(i=0;i<=m;i++){score[i+1][1]=i;score[i+1][0]=INF;sd[source[i]]=0}for(j=0;j<=n;j++){score[1][j+1]=j;score[0][j+1]=INF;sd[target[j]]=0}for(i=1;i<=m;i++){let DB=0;for(j=1;j<=n;j++){const i1=sd[target[j-1]];const j1=DB;if(source[i-1]===target[j-1]){score[i+1][j+1]=score[i][j];DB=j}else{score[i+1][j+1]=Math.min(score[i][j],Math.min(score[i+1][j],score[i][j+1]))+1}score[i+1][j+1]=Math.min(score[i+1][j+1],score[i1]?score[i1][j1]+(i-i1-1)+1+(j-j1-1):Infinity)}sd[source[i-1]]=i}return score[m+1][n+1]};String.prototype.isNumeric=String.prototype.isNumeric||function(){return!isNaN(parseFloat(this))&&isFinite(this)};String.prototype.last=String.prototype.last||function(){return this[this.length-1]};String.prototype.escapeRegexp=String.prototype.escapeRegexp||function(){return this.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")};String.prototype.toUrlified=String.prototype.toUrlified||function(){return encodeURIComponent(this.toLowerCase()).toLowerCase()};String.prototype.toChunks=String.prototype.toChunks||function(size){const numChunks=Math.ceil(this.length/size);const chunks=new Array(numChunks);for(let i=0,o=0;i<numChunks;++i,o+=size)chunks[i]=this.substr(o,size);return chunks};String.prototype.toAscii=String.prototype.toAscii||function(){return this.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/Æ/g,"AE").replace(/æ/g,"ae")};String.prototype.trimChar=String.prototype.trimChar||function(ch){let start=0;let end=this.length;while(start<end&&this[start]===ch)++start;while(end>start&&this[end-1]===ch)--end;return start>0||end<this.length?this.substring(start,end):this};String.prototype.trimAnyChar=String.prototype.trimAnyChar||function(chars){let start=0;let end=this.length;while(start<end&&chars.indexOf(this[start])>=0)++start;while(end>start&&chars.indexOf(this[end-1])>=0)--end;return start>0||end<this.length?this.substring(start,end):this};Array.prototype.joinConjunct=Array.prototype.joinConjunct||function(joiner,lastJoiner,nonOxford){if(this.length===0)return"";if(this.length===1)return this[0];if(this.length===2)return this.join(lastJoiner);else{let outStr="";for(let i=0;i<this.length;++i){outStr+=this[i];if(i<this.length-2)outStr+=joiner;else if(i===this.length-2)outStr+=`${!nonOxford&&this.length>2?joiner.trim():""}${lastJoiner}`}return outStr}};StrUtil={COMMAS_NOT_IN_PARENTHESES_REGEX:/,\s?(?![^(]*\))/g,COMMA_SPACE_NOT_IN_PARENTHESES_REGEX:/, (?![^(]*\))/g,uppercaseFirst:function(string){return string.uppercaseFirst()},TITLE_LOWER_WORDS:["a","an","the","and","but","or","for","nor","as","at","by","for","from","in","into","near","of","on","onto","to","with","over"],TITLE_UPPER_WORDS:["Id","Tv","Dm","Ok"],padNumber:(n,len,padder)=>String(n).padStart(len,padder),elipsisTruncate(str,atLeastPre=5,atLeastSuff=0,maxLen=20){if(maxLen>=str.length)return str;maxLen=Math.max(atLeastPre+atLeastSuff+3,maxLen);let out="";let remain=maxLen-(3+atLeastPre+atLeastSuff);for(let i=0;i<str.length-atLeastSuff;++i){const c=str[i];if(i<atLeastPre)out+=c;else if(remain-- >0)out+=c}if(remain<0)out+="...";out+=str.substring(str.length-atLeastSuff,str.length);return out},toTitleCase(str){return str.toTitleCase()},getNamePart(str){if(typeof str!=="string")return str;return str.split(" ").filter((it=>!StrUtil.TITLE_LOWER_WORDS.includes(it.toLowerCase()))).join(" ")}};CleanUtil={getCleanJson(data,minify=false){let str=minify?JSON.stringify(data):`${JSON.stringify(data,null,"\t")}\n`;return CleanUtil.getCleanString(str)},getCleanString(str,isJsonDump=true){str=str.replace(CleanUtil.SHARED_REPLACEMENTS_REGEX,(match=>CleanUtil.SHARED_REPLACEMENTS[match])).replace(/\u00AD/g,"").replace(/\s*(\.\s*\.\s*\.)/g,"$1");if(isJsonDump){return str.replace(CleanUtil.STR_REPLACEMENTS_REGEX,(match=>CleanUtil.STR_REPLACEMENTS[match]))}else{return str.replace(CleanUtil.JSON_REPLACEMENTS_REGEX,(match=>CleanUtil.JSON_REPLACEMENTS[match]))}}};CleanUtil.SHARED_REPLACEMENTS={"’":"'","…":"..."," ":" ","ﬀ":"ff","ﬃ":"ffi","ﬄ":"ffl","ﬁ":"fi","ﬂ":"fl","Ĳ":"IJ","ĳ":"ij","Ǉ":"LJ","ǈ":"Lj","ǉ":"lj","Ǌ":"NJ","ǋ":"Nj","ǌ":"nj","ﬅ":"ft"};CleanUtil.STR_REPLACEMENTS={"—":"\\u2014","–":"\\u2013","−":"\\u2212","“":`\\"`,"”":`\\"`};CleanUtil.JSON_REPLACEMENTS={"“":`"`,"”":`"`};CleanUtil.SHARED_REPLACEMENTS_REGEX=new RegExp(Object.keys(CleanUtil.SHARED_REPLACEMENTS).join("|"),"g");CleanUtil.STR_REPLACEMENTS_REGEX=new RegExp(Object.keys(CleanUtil.STR_REPLACEMENTS).join("|"),"g");CleanUtil.JSON_REPLACEMENTS_REGEX=new RegExp(Object.keys(CleanUtil.JSON_REPLACEMENTS).join("|"),"g");SourceUtil={ADV_BOOK_GROUPS:[{group:"core",displayName:"Core"},{group:"lost-omens",displayName:"Lost Omens"},{group:"homebrew",displayName:"Homebrew"},{group:"other",displayName:"Miscellaneous"}],isAdventure(source){if(source instanceof FilterItem)source=source.item;return Parser.SOURCES_ADVENTURES.has(source)},isAccessory(source){if(source instanceof FilterItem)source=source.item;return Parser.SOURCES_ACCESSORIES.has(source)},isCoreOrSupplement(source){if(source instanceof FilterItem)source=source.item;return Parser.SOURCES_CORE_SUPPLEMENTS.has(source)},isNonstandardSource(source){return source!=null&&BrewUtil.hasSourceJson(source)},getFilterGroup(source){if(source instanceof FilterItem)source=source.item;if(BrewUtil.hasSourceJson(source))return 3;if(SourceUtil.isAdventure(source))return 1;if(SourceUtil.isNonstandardSource(source))return 2;if(!SourceUtil.isNonstandardSource(source))return 0},getAdventureBookSourceHref(source,page){if(!source)return null;source=source.toLowerCase();let docPage;if(Parser.SOURCES_AVAILABLE_DOCS_BOOK[source])docPage=UrlUtil.PG_BOOK;else if(Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[source])docPage=UrlUtil.PG_ADVENTURE;if(!docPage)return null;return`${docPage}#${[source,page?`page:${page}`:null].filter(Boolean).join(HASH_PART_SEP)}`}};CurrencyUtil={doSimplifyCoins(obj,opts){opts=opts||{};const conversionTable=opts.currencyConversionTable||Parser.getCurrencyConversionTable(opts.currencyConversionId);if(!conversionTable.length)return obj;const normalized=conversionTable.map((it=>({...it,normalizedMult:1/it.mult}))).sort(((a,b)=>SortUtil.ascSort(a.normalizedMult,b.normalizedMult)));for(let i=0;i<normalized.length-1;++i){const coinCur=normalized[i].coin;const coinNxt=normalized[i+1].coin;const coinRatio=normalized[i+1].normalizedMult/normalized[i].normalizedMult;if(obj[coinCur]&&Math.abs(obj[coinCur])>=coinRatio){const nxtVal=obj[coinCur]>=0?Math.floor(obj[coinCur]/coinRatio):Math.ceil(obj[coinCur]/coinRatio);obj[coinCur]=obj[coinCur]%coinRatio;obj[coinNxt]=(obj[coinNxt]||0)+nxtVal}}normalized.filter((coinMeta=>obj[coinMeta.coin]===0||obj[coinMeta.coin]==null)).forEach((coinMeta=>{obj[coinMeta.coin]=null;delete obj[coinMeta.coin]}));return obj},getAsCopper(obj){return Parser.FULL_CURRENCY_CONVERSION_TABLE.map((currencyMeta=>(obj[currencyMeta.coin]||0)*(1/currencyMeta.mult))).reduce(((a,b)=>a+b),0)}};Math.seed=Math.seed||function(s){return function(){s=Math.sin(s)*1e4;return s-Math.floor(s)}};JqueryUtil={_isEnhancementsInit:false,initEnhancements(){if(JqueryUtil._isEnhancementsInit)return;JqueryUtil._isEnhancementsInit=true;JqueryUtil.addSelectors();window.$$=function(parts,...args){if(parts instanceof jQuery){return(...passed)=>{const parts2=[...passed[0]];const args2=passed.slice(1);parts2[0]=`<div>${parts2[0]}`;parts2.last(`${parts2.last()}</div>`);const $temp=$$(parts2,...args2);$temp.children().each(((i,e)=>$(e).appendTo(parts)));return parts}}else{const $eles=[];let ixArg=0;const handleArg=arg=>{if(arg instanceof $){$eles.push(arg);return`<${arg.tag()} data-r="true"></${arg.tag()}>`}else if(arg instanceof HTMLElement){return handleArg($(arg))}else return arg};const raw=parts.reduce(((html,p)=>{const myIxArg=ixArg++;if(args[myIxArg]==null)return`${html}${p}`;if(args[myIxArg]instanceof Array)return`${html}${args[myIxArg].map((arg=>handleArg(arg))).join("")}${p}`;else return`${html}${handleArg(args[myIxArg])}${p}`}));const $res=$(raw);if($res.length===1){if($res.attr("data-r")==="true")return $eles[0];else $res.find(`[data-r=true]`).replaceWith((i=>$eles[i]))}else{const $tmp=$(`<div></div>`);$tmp.append($res);$tmp.find(`[data-r=true]`).replaceWith((i=>$eles[i]));return $tmp.children()}return $res}};$.fn.extend({disableSpellcheck:function(){return this.attr("autocomplete","new-password").attr("autocapitalize","off").attr("spellcheck","false")},tag:function(){return this.prop("tagName").toLowerCase()},title:function(...args){return this.attr("title",...args)},placeholder:function(...args){return this.attr("placeholder",...args)},disable:function(){return this.attr("disabled",true)},fastSetHtml:function(html){if(!this.length)return this;let tgt=this[0];while(tgt.children.length){tgt=tgt.children[0]}tgt.innerHTML=html;return this},blurOnEsc:function(){return this.keydown((evt=>{if(evt.which===27)this.blur()}))},hideVe:function(){return this.addClass("ve-hidden")},showVe:function(){return this.removeClass("ve-hidden")},toggleVe:function(val){if(val===undefined)return this.toggleClass("ve-hidden",!this.hasClass("ve-hidden"));else return this.toggleClass("ve-hidden",!val)}});$.event.special.destroyed={remove:function(o){if(o.handler)o.handler()}}},addSelectors(){$.expr[":"].textEquals=(el,i,m)=>$(el).text().toLowerCase().trim()===m[3].unescapeQuotes();$.expr[":"].containsInsensitive=(el,i,m)=>{const searchText=m[3];const textNode=$(el).contents().filter(((i,e)=>e.nodeType===3))[0];if(!textNode)return false;const match=textNode.nodeValue.toLowerCase().trim().match(`${searchText.toLowerCase().trim().escapeRegexp()}`);return match&&match.length>0}},showCopiedEffect($ele,text="Copied!",bubble){const top=$(window).scrollTop();const pos=$ele.offset();const animationOptions={top:"-=8",opacity:0};if(bubble){animationOptions.left=`${Math.random()>.5?"-":"+"}=${~~(Math.random()*17)}`}const seed=Math.random();const duration=bubble?250+seed*200:250;const offsetY=bubble?16:0;const $dispCopied=$(`<div class="clp__disp-copied"></div>`);$dispCopied.html(text).css({top:pos.top-24+offsetY-top,left:pos.left+$ele.width()/2}).appendTo(document.body).animate(animationOptions,{duration:duration,complete:()=>$dispCopied.remove(),progress:(_,progress)=>{if(bubble){const diffProgress=.5-progress;animationOptions.top=`${diffProgress>0?"-":"+"}=40`;$dispCopied.css("transform",`rotate(${seed>.5?"-":""}${seed*500*progress}deg)`)}}})},_dropdownInit:false,bindDropdownButton($ele){if(!JqueryUtil._dropdownInit){JqueryUtil._dropdownInit=true;document.addEventListener("click",(()=>[...document.querySelectorAll(`.open`)].filter((ele=>!(ele.className||"").split(" ").includes(`dropdown--navbar`))).forEach((ele=>ele.classList.remove("open")))))}$ele.click((()=>setTimeout((()=>$ele.parent().addClass("open")),1)))},_ACTIVE_TOAST:[],doToast(options){if(typeof window==="undefined")return;if(typeof options==="string"){options={content:options,type:"info"}}options.type=options.type||"info";options.autoHideTime=options.autoHideTime??5e3;const doCleanup=$toast=>{$toast.removeClass("toast--animate");setTimeout((()=>$toast.remove()),85);JqueryUtil._ACTIVE_TOAST.splice(JqueryUtil._ACTIVE_TOAST.indexOf($toast),1)};const $btnToastDismiss=$(`<button class="btn toast__btn-close"><span class="glyphicon glyphicon-remove"></span></button>`).click((()=>doCleanup($toast)));const $toast=$$`
		<div class="toast toast--type-${options.type}">
			<div class="toast__wrp-content">${options.content}</div>
			<div class="toast__wrp-control">${$btnToastDismiss}</div>
		</div>`.prependTo($(`body`)).data("pos",0);setTimeout((()=>$toast.addClass(`toast--animate`)),5);if(options.autoHideTime!==0){setTimeout((()=>{doCleanup($toast)}),options.autoHideTime)}if(JqueryUtil._ACTIVE_TOAST.length){JqueryUtil._ACTIVE_TOAST.forEach(($oldToast=>{const pos=$oldToast.data("pos");$oldToast.data("pos",pos+1);if(pos===2)doCleanup($oldToast)}))}JqueryUtil._ACTIVE_TOAST.push($toast)},isMobile(){if(navigator&&navigator.userAgentData&&navigator.userAgentData.mobile)return true;return window.matchMedia("(max-width: 768px)").matches}};if(typeof window!=="undefined")window.addEventListener("load",JqueryUtil.initEnhancements);ElementUtil={getOrModify({tag:tag,clazz:clazz,style:style,click:click,contextmenu:contextmenu,change:change,mousedown:mousedown,mouseup:mouseup,mousemove:mousemove,keydown:keydown,html:html,text:text,txt:txt,ele:ele,children:children,outer:outer,id:id,name:name,title:title,val:val,href:href,type:type,attrs:attrs}){ele=ele||(outer?(new DOMParser).parseFromString(outer,"text/html").body.childNodes[0]:document.createElement(tag));if(clazz)ele.className=clazz;if(style)ele.setAttribute("style",style);if(click)ele.addEventListener("click",click);if(contextmenu)ele.addEventListener("contextmenu",contextmenu);if(change)ele.addEventListener("change",change);if(mousedown)ele.addEventListener("mousedown",mousedown);if(mouseup)ele.addEventListener("mouseup",mouseup);if(mousemove)ele.addEventListener("mousemove",mousemove);if(keydown)ele.addEventListener("keydown",keydown);if(html!=null)ele.innerHTML=html;if(text!=null||txt!=null)ele.textContent=text;if(id!=null)ele.setAttribute("id",id);if(name!=null)ele.setAttribute("name",name);if(title!=null)ele.setAttribute("title",title);if(href!=null)ele.setAttribute("href",href);if(val!=null)ele.setAttribute("value",val);if(type!=null)ele.setAttribute("type",type);if(attrs!=null){for(const k in attrs){if(attrs[k]===undefined)continue;ele.setAttribute(k,attrs[k])}}if(children)for(let i=0,len=children.length;i<len;++i)if(children[i]!=null)ele.append(children[i]);ele.appends=ele.appends||ElementUtil._appends.bind(ele);ele.appendTo=ele.appendTo||ElementUtil._appendTo.bind(ele);ele.prependTo=ele.prependTo||ElementUtil._prependTo.bind(ele);ele.addClass=ele.addClass||ElementUtil._addClass.bind(ele);ele.removeClass=ele.removeClass||ElementUtil._removeClass.bind(ele);ele.toggleClass=ele.toggleClass||ElementUtil._toggleClass.bind(ele);ele.showVe=ele.showVe||ElementUtil._showVe.bind(ele);ele.hideVe=ele.hideVe||ElementUtil._hideVe.bind(ele);ele.toggleVe=ele.toggleVe||ElementUtil._toggleVe.bind(ele);ele.empty=ele.empty||ElementUtil._empty.bind(ele);ele.detach=ele.detach||ElementUtil._detach.bind(ele);ele.attr=ele.attr||ElementUtil._attr.bind(ele);ele.val=ele.val||ElementUtil._val.bind(ele);ele.html=ele.html||ElementUtil._html.bind(ele);ele.txt=ele.txt||ElementUtil._txt.bind(ele);ele.tooltip=ele.tooltip||ElementUtil._tooltip.bind(ele);ele.onClick=ele.onClick||ElementUtil._onClick.bind(ele);ele.onContextmenu=ele.onContextmenu||ElementUtil._onContextmenu.bind(ele);ele.onChange=ele.onChange||ElementUtil._onChange.bind(ele);return ele},_appends(child){this.appendChild(child);return this},_appendTo(parent){parent.appendChild(this);return this},_prependTo(parent){parent.prepend(this);return this},_addClass(clazz){this.classList.add(clazz);return this},_removeClass(clazz){this.classList.remove(clazz);return this},_toggleClass(clazz,isActive){if(isActive==null)this.classList.toggle(clazz);else if(isActive)this.classList.add(clazz);else this.classList.remove(clazz);return this},_showVe(){this.classList.remove("ve-hidden");return this},_hideVe(){this.classList.add("ve-hidden");return this},_toggleVe(isActive){this.toggleClass("ve-hidden",isActive==null?isActive:!isActive);return this},_empty(){this.innerHTML="";return this},_detach(){if(this.parentElement)this.parentElement.removeChild(this);return this},_attr(name,value){this.setAttribute(name,value);return this},_html(html){if(html===undefined)return this.innerHTML;this.innerHTML=html;return this},_txt(txt){if(txt===undefined)return this.innerText;this.innerText=txt;return this},_tooltip(title){return this.attr("title",title)},_onClick(fn){return ElementUtil._onX(this,"click",fn)},_onContextmenu(fn){return ElementUtil._onX(this,"contextmenu",fn)},_onChange(fn){return ElementUtil._onX(this,"change",fn)},_onX(ele,evtName,fn){ele.addEventListener(evtName,fn);return ele},_val(val){if(val!==undefined){switch(this.tagName){case"SELECT":{let selectedIndexNxt=-1;for(let i=0,len=this.options.length;i<len;++i){if(this.options[i]?.value===val){selectedIndexNxt=i;break}}this.selectedIndex=selectedIndexNxt;return this}default:{this.value=val;return this}}}switch(this.tagName){case"SELECT":return this.options[this.selectedIndex]?.value;default:return this.value}},getIndexPathToParent(parent,child){if(!parent.contains(child))return null;const path=[];while(child!==parent){if(!child.parentElement)return null;const ix=[...child.parentElement.children].indexOf(child);if(!~ix)return null;path.push(ix);child=child.parentElement}return path.reverse()},getChildByIndexPath(parent,indexPath){for(let i=0;i<indexPath.length;++i){const ix=indexPath[i];parent=parent.children[ix];if(!parent)return null}return parent}};if(typeof window!=="undefined")window.e_=ElementUtil.getOrModify;ObjUtil={mergeWith(source,target,fnMerge,options={depth:1}){if(!source||!target||typeof fnMerge!=="function")throw new Error("Must include a source, target and a fnMerge to handle merging");const recursive=function(deepSource,deepTarget,depth=1){if(depth>options.depth||!deepSource||!deepTarget)return;for(let prop of Object.keys(deepSource)){deepTarget[prop]=fnMerge(deepSource[prop],deepTarget[prop],source,target);recursive(source[prop],deepTarget[prop],depth+1)}};recursive(source,target,1)},async pForEachDeep(source,pCallback,options={depth:Infinity,callEachLevel:false}){const path=[];const pDiveDeep=async function(val,path,depth=0){if(options.callEachLevel||typeof val!=="object"||options.depth===depth){await pCallback(val,path,depth)}if(options.depth!==depth&&typeof val==="object"){for(const key of Object.keys(val)){path.push(key);await pDiveDeep(val[key],path,depth+1)}}path.pop()};await pDiveDeep(source,path)}};MiscUtil={COLOR_HEALTHY:"#00bb20",COLOR_HURT:"#c5ca00",COLOR_BLOODIED:"#f7a100",COLOR_DEFEATED:"#cc0000",copy(obj){return JSON.parse(JSON.stringify(obj))},isObject(obj){return obj&&typeof obj==="object"&&!Array.isArray(obj)},merge(...objects){return objects.filter((it=>MiscUtil.isObject(it))).reduce(((acc,obj)=>{Object.keys(obj).forEach((key=>{const initVal=acc[key];const newVal=obj[key];if(Array.isArray(initVal)&&Array.isArray(newVal))acc[key]=initVal.concat(...newVal);else if(MiscUtil.isObject(initVal)&&MiscUtil.isObject(newVal))acc[key]=MiscUtil.merge(initVal,newVal);else acc[key]=newVal}));return acc}),{})},async pCopyTextToClipboard(text){function doCompatibilityCopy(){const $iptTemp=$(`<textarea class="clp__wrp-temp"></textarea>`).appendTo(document.body).val(text).select();document.execCommand("Copy");$iptTemp.remove()}if(navigator&&navigator.permissions){try{const access=await navigator.permissions.query({name:"clipboard-write"});if(access.state==="granted"||access.state==="prompt"){await navigator.clipboard.writeText(text)}else doCompatibilityCopy()}catch(e){doCompatibilityCopy()}}else doCompatibilityCopy()},checkProperty(object,...path){for(let i=0;i<path.length;++i){object=object[path[i]];if(object==null)return false}return true},get(object,...path){if(object==null)return null;for(let i=0;i<path.length;++i){object=object[path[i]];if(object==null)return object}return object},set(object,...pathAndVal){if(object==null)return null;const val=pathAndVal.pop();if(!pathAndVal.length)return null;const len=pathAndVal.length;for(let i=0;i<len;++i){const pathPart=pathAndVal[i];if(i===len-1)object[pathPart]=val;else object=object[pathPart]=object[pathPart]||{}}return val},getOrSet(object,...pathAndVal){const existing=MiscUtil.get(object,...pathAndVal);return existing||MiscUtil.set(object,...pathAndVal)},mix:superclass=>new MiscUtil._MixinBuilder(superclass),_MixinBuilder:function(superclass){this.superclass=superclass;this.with=function(...mixins){return mixins.reduce(((c,mixin)=>mixin(c)),this.superclass)}},clearSelection(){if(document.getSelection){document.getSelection().removeAllRanges();document.getSelection().addRange(document.createRange())}else if(window.getSelection){if(window.getSelection().removeAllRanges){window.getSelection().removeAllRanges();window.getSelection().addRange(document.createRange())}else if(window.getSelection().empty){window.getSelection().empty()}}else if(document.selection){document.selection.empty()}},randomColor(){let r;let g;let b;const h=RollerUtil.randomise(30,0)/30;const i=~~(h*6);const f=h*6-i;const q=1-f;switch(i%6){case 0:r=1;g=f;b=0;break;case 1:r=q;g=1;b=0;break;case 2:r=0;g=1;b=f;break;case 3:r=0;g=q;b=1;break;case 4:r=f;g=0;b=1;break;case 5:r=1;g=0;b=q;break}return`#${`00${(~~(r*255)).toString(16)}`.slice(-2)}${`00${(~~(g*255)).toString(16)}`.slice(-2)}${`00${(~~(b*255)).toString(16)}`.slice(-2)}`},invertColor(hex,opts){opts=opts||{};hex=hex.slice(1);let r=parseInt(hex.slice(0,2),16);let g=parseInt(hex.slice(2,4),16);let b=parseInt(hex.slice(4,6),16);const isDark=r*.299+g*.587+b*.114>186;if(opts.dark&&opts.light)return isDark?opts.dark:opts.light;else if(opts.bw)return isDark?"#000000":"#FFFFFF";r=(255-r).toString(16);g=(255-g).toString(16);b=(255-b).toString(16);return`#${[r,g,b].map((it=>it.padStart(2,"0"))).join("")}`},scrollPageTop(){document.body.scrollTop=document.documentElement.scrollTop=0},expEval(str){return new Function(`return ${str.replace(/[^-()\d/*+.]/g,"")}`)()},parseNumberRange(input,min=Number.MIN_SAFE_INTEGER,max=Number.MAX_SAFE_INTEGER){function errInvalid(input){throw new Error(`Could not parse range input "${input}"`)}function errOutOfRange(){throw new Error(`Number was out of range! Range was ${min}-${max} (inclusive).`)}function isOutOfRange(num){return num<min||num>max}function addToRangeVal(range,num){range.add(num)}function addToRangeLoHi(range,lo,hi){for(let i=lo;i<=hi;++i)range.add(i)}while(true){if(input&&input.trim()){const clean=input.replace(/\s*/g,"");if(/^((\d+-\d+|\d+),)*(\d+-\d+|\d+)$/.exec(clean)){const parts=clean.split(",");const out=new Set;for(const part of parts){if(part.includes("-")){const spl=part.split("-");const numLo=Number(spl[0]);const numHi=Number(spl[1]);if(isNaN(numLo)||isNaN(numHi)||numLo===0||numHi===0||numLo>numHi)errInvalid();if(isOutOfRange(numLo)||isOutOfRange(numHi))errOutOfRange();if(numLo===numHi)addToRangeVal(out,numLo);else addToRangeLoHi(out,numLo,numHi)}else{const num=Number(part);if(isNaN(num)||num===0)errInvalid();else{if(isOutOfRange(num))errOutOfRange();addToRangeVal(out,num)}}}return out}else errInvalid()}else return null}},MONTH_NAMES:["January","February","March","April","May","June","July","August","September","October","November","December"],dateToStr(date,short){const month=MiscUtil.MONTH_NAMES[date.getMonth()];return`${short?month.substring(0,3):month} ${Parser.getOrdinalForm(date.getDate())}, ${date.getFullYear()}`},findCommonPrefix(strArr){let prefix=null;strArr.forEach((s=>{if(prefix==null){prefix=s}else{const minLen=Math.min(s.length,prefix.length);for(let i=0;i<minLen;++i){const cp=prefix[i];const cs=s[i];if(cp!==cs){prefix=prefix.substring(0,i);break}}}}));return prefix},calculateBlendedColor(fgHexTarget,fgOpacity,bgHex){const fgDcTarget=CryptUtil.hex2Dec(fgHexTarget);const bgDc=CryptUtil.hex2Dec(bgHex);return((fgDcTarget-(1-fgOpacity)*bgDc)/fgOpacity).toString(16)},debounce(func,wait,options){let lastArgs;let lastThis;let maxWait;let result;let timerId;let lastCallTime;let lastInvokeTime=0;let leading=false;let maxing=false;let trailing=true;wait=Number(wait)||0;if(typeof options==="object"){leading=!!options.leading;maxing="maxWait"in options;maxWait=maxing?Math.max(Number(options.maxWait)||0,wait):maxWait;trailing="trailing"in options?!!options.trailing:trailing}function invokeFunc(time){let args=lastArgs;let thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result}function leadingEdge(time){lastInvokeTime=time;timerId=setTimeout(timerExpired,wait);return leading?invokeFunc(time):result}function remainingWait(time){let timeSinceLastCall=time-lastCallTime;let timeSinceLastInvoke=time-lastInvokeTime;let result=wait-timeSinceLastCall;return maxing?Math.min(result,maxWait-timeSinceLastInvoke):result}function shouldInvoke(time){let timeSinceLastCall=time-lastCallTime;let timeSinceLastInvoke=time-lastInvokeTime;return lastCallTime===undefined||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait}function timerExpired(){const time=Date.now();if(shouldInvoke(time)){return trailingEdge(time)}timerId=setTimeout(timerExpired,remainingWait(time))}function trailingEdge(time){timerId=undefined;if(trailing&&lastArgs)return invokeFunc(time);lastArgs=lastThis=undefined;return result}function cancel(){if(timerId!==undefined)clearTimeout(timerId);lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined}function flush(){return timerId===undefined?result:trailingEdge(Date.now())}function debounced(){let time=Date.now();let isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined)return leadingEdge(lastCallTime);if(maxing){timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime)}}if(timerId===undefined)timerId=setTimeout(timerExpired,wait);return result}debounced.cancel=cancel;debounced.flush=flush;return debounced},throttle(func,wait,options){let leading=true;let trailing=true;if(typeof options==="object"){leading="leading"in options?!!options.leading:leading;trailing="trailing"in options?!!options.trailing:trailing}return this.debounce(func,wait,{leading:leading,maxWait:wait,trailing:trailing})},pDelay(msecs,resolveAs){return new Promise((resolve=>setTimeout((()=>resolve(resolveAs)),msecs)))},GENERIC_WALKER_ENTRIES_KEY_BLACKLIST:new Set(["caption","type","name","colStyles","rowStyles","style","styles","shortName","subclassShortName","immunities","resistances","weaknesses","featType","trait","traits","components"]),getWalker(opts){opts=opts||{};const keyBlacklist=opts.keyBlacklist||new Set;function applyHandlers(handlers,obj,lastKey,stack){if(!(handlers instanceof Array))handlers=[handlers];handlers.forEach((h=>{const out=h(obj,lastKey,stack);if(!opts.isNoModification)obj=out}));return obj}function runHandlers(handlers,obj,lastKey,stack){if(!(handlers instanceof Array))handlers=[handlers];handlers.forEach((h=>h(obj,lastKey,stack)))}const fn=(obj,primitiveHandlers,lastKey,stack)=>{if(obj==null){if(primitiveHandlers.null)return applyHandlers(primitiveHandlers.null,obj,lastKey,stack);return obj}const doObjectRecurse=()=>{Object.keys(obj).forEach((k=>{const v=obj[k];if(!keyBlacklist.has(k)){const out=fn(v,primitiveHandlers,k,stack);if(!opts.isNoModification)obj[k]=out}}))};const to=typeof obj;switch(to){case undefined:if(primitiveHandlers.preUndefined)runHandlers(primitiveHandlers.preUndefined,obj,lastKey,stack);if(primitiveHandlers.undefined){const out=applyHandlers(primitiveHandlers.undefined,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(primitiveHandlers.postUndefined)runHandlers(primitiveHandlers.postUndefined,obj,lastKey,stack);return obj;case"boolean":if(primitiveHandlers.preBoolean)runHandlers(primitiveHandlers.preBoolean,obj,lastKey,stack);if(primitiveHandlers.boolean){const out=applyHandlers(primitiveHandlers.boolean,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(primitiveHandlers.postBoolean)runHandlers(primitiveHandlers.postBoolean,obj,lastKey,stack);return obj;case"number":if(primitiveHandlers.preNumber)runHandlers(primitiveHandlers.preNumber,obj,lastKey,stack);if(primitiveHandlers.number){const out=applyHandlers(primitiveHandlers.number,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(primitiveHandlers.postNumber)runHandlers(primitiveHandlers.postNumber,obj,lastKey,stack);return obj;case"string":if(primitiveHandlers.preString)runHandlers(primitiveHandlers.preString,obj,lastKey,stack);if(primitiveHandlers.string){const out=applyHandlers(primitiveHandlers.string,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(primitiveHandlers.postString)runHandlers(primitiveHandlers.postString,obj,lastKey,stack);return obj;case"object":{if(obj instanceof Array){if(primitiveHandlers.preArray)runHandlers(primitiveHandlers.preArray,obj,lastKey,stack);if(opts.isDepthFirst){if(stack)stack.push(obj);const out=obj.map((it=>fn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out;if(stack)stack.pop();if(primitiveHandlers.array){const out=applyHandlers(primitiveHandlers.array,obj,lastKey,stack);if(!opts.isNoModification)obj=out}}else{if(primitiveHandlers.array){const out=applyHandlers(primitiveHandlers.array,obj,lastKey,stack);if(!opts.isNoModification)obj=out}const out=obj.map((it=>fn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out}if(primitiveHandlers.postArray)runHandlers(primitiveHandlers.postArray,obj,lastKey,stack);return obj}else{if(primitiveHandlers.preObject)runHandlers(primitiveHandlers.preObject,obj,lastKey,stack);if(opts.isDepthFirst){if(stack)stack.push(obj);doObjectRecurse();if(stack)stack.pop();if(primitiveHandlers.object){const out=applyHandlers(primitiveHandlers.object,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}}else{if(primitiveHandlers.object){const out=applyHandlers(primitiveHandlers.object,obj,lastKey,stack);if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}else{doObjectRecurse()}}if(primitiveHandlers.postObject)runHandlers(primitiveHandlers.postObject,obj,lastKey,stack);return obj}}default:throw new Error(`Unhandled type "${to}"`)}};return{walk:fn}},pDefer(fn){return(async()=>fn())()}};EventUtil={_mouseX:0,_mouseY:0,init(){document.addEventListener("mousemove",(evt=>{EventUtil._mouseX=evt.clientX;EventUtil._mouseY=evt.clientY}))},getClientX(evt){return evt.touches&&evt.touches.length?evt.touches[0].clientX:evt.clientX},getClientY(evt){return evt.touches&&evt.touches.length?evt.touches[0].clientY:evt.clientY},isInInput(evt){return evt.target.nodeName==="INPUT"||evt.target.nodeName==="TEXTAREA"||evt.target.getAttribute("contenteditable")==="true"},noModifierKeys(evt){return!evt.ctrlKey&&!evt.altKey&&!evt.metaKey},getKeyIgnoreCapsLock(evt){if(!evt.key)return null;if(evt.key.length!==1)return evt.key;const isCaps=(evt.originalEvent||evt).getModifierState("CapsLock");if(!isCaps)return evt.key;const asciiCode=evt.key.charCodeAt(0);const isUpperCase=asciiCode>=65&&asciiCode<=90;const isLowerCase=asciiCode>=97&&asciiCode<=122;if(!isUpperCase&&!isLowerCase)return evt.key;return isUpperCase?evt.key.toLowerCase():evt.key.toUpperCase()}};if(typeof window!=="undefined")window.addEventListener("load",EventUtil.init);ContextUtil={_isInit:false,_menus:[],_init(){if(ContextUtil._isInit)return;ContextUtil._isInit=true;$(document.body).click((()=>ContextUtil._menus.forEach((menu=>menu.close()))))},getMenu(actions){ContextUtil._init();const menu=new ContextUtil.Menu(actions);ContextUtil._menus.push(menu);return menu},deleteMenu(menu){menu.remove();const ix=ContextUtil._menus.findIndex((it=>it===menu));if(~ix)ContextUtil._menus.splice(ix,1)},pOpenMenu(evt,menu,userData){evt.preventDefault();evt.stopPropagation();ContextUtil._init();ContextUtil._menus.filter((it=>it!==menu)).forEach((it=>it.close()));return menu.pOpen(evt,userData)},Menu:function(actions){this._actions=actions;this._pResult=null;this._resolveResult=null;this._userData=null;const $elesAction=this._actions.map((it=>{if(it==null)return $(`<div class="my-1 w-100 ui-ctx__divider"></div>`);const $row=$$`<div class="py-1 px-5 ui-ctx__row ${it.isDisabled?"disabled":""} ${it.style||""}">${it.text}</div>`.click((async evt=>{if(it.isDisabled)return;evt.preventDefault();evt.stopPropagation();this.close();const result=await it.fnAction(evt,this._userData);if(this._resolveResult)this._resolveResult(result)}));if(it.title)$row.title(it.title);return $row}));this._$ele=$$`<div class="flex-col ui-ctx__wrp py-2">${$elesAction}</div>`.hideVe().appendTo(document.body);this.remove=function(){this._$ele.remove()};this.width=function(){return this._$ele.width()};this.height=function(){return this._$ele.height()};this.pOpen=function(evt,userData){if(this._resolveResult)this._resolveResult(null);this._pResult=new Promise((resolve=>{this._resolveResult=resolve}));this._userData=userData;this._$ele.css({position:"absolute",left:this._getMenuPosition(evt,"x"),top:this._getMenuPosition(evt,"y")}).showVe();return this._pResult};this.close=function(){this._$ele.hideVe()};this._getMenuPosition=function(evt,axis){const{fnMenuSize:fnMenuSize,propMousePos:propMousePos,fnWindowSize:fnWindowSize,fnScrollDir:fnScrollDir}=axis==="x"?{fnMenuSize:"width",propMousePos:"clientX",fnWindowSize:"width",fnScrollDir:"scrollLeft"}:{fnMenuSize:"height",propMousePos:"clientY",fnWindowSize:"height",fnScrollDir:"scrollTop"};const posMouse=evt[propMousePos];const szWin=$(window)[fnWindowSize]();const posScroll=$(window)[fnScrollDir]();let position=posMouse+posScroll;const szMenu=this[fnMenuSize]();if(posMouse+szMenu>szWin&&szMenu<posMouse)position-=szMenu;return position}},Action:function(text,fnAction,opts){opts=opts||{};this.text=text;this.fnAction=fnAction;this.isDisabled=opts.isDisabled;this.title=opts.title;this.style=opts.style}};SearchUtil={removeStemmer(elasticSearch){const stemmer=elasticlunr.Pipeline.getRegisteredFunction("stemmer");elasticSearch.pipeline.remove(stemmer)}};UrlUtil={encodeForHash(toEncode){if(toEncode instanceof Array)return toEncode.map((it=>`${it}`.toUrlified())).join(HASH_LIST_SEP);else return`${toEncode}`.toUrlified()},autoEncodeHash(obj){const curPage=UrlUtil.getCurrentPage();const encoder=UrlUtil.URL_TO_HASH_BUILDER[curPage];if(!encoder)throw new Error(`No encoder found for page ${curPage}`);return encoder(obj)},getCurrentPage(){if(typeof window==="undefined")return VeCt.PG_NONE;const pSplit=window.location.pathname.split("/");let out=pSplit[pSplit.length-1];if(!out.toLowerCase().endsWith(".html"))out+=".html";return out},link(href){function addGetParam(curr){if(href.includes("?"))return`${curr}&v=${VERSION_NUMBER}`;else return`${curr}?v=${VERSION_NUMBER}`}if(!IS_VTT&&IS_DEPLOYED)return addGetParam(`${DEPLOYED_STATIC_ROOT}${href}`);else if(IS_DEPLOYED)return addGetParam(href);return href},unpackSubHash(subHash,unencode){if(subHash.includes(HASH_SUB_KV_SEP)){const keyValArr=subHash.split(HASH_SUB_KV_SEP).map((s=>s.trim()));const out={};let k=keyValArr[0].toLowerCase();if(unencode)k=decodeURIComponent(k);let v=keyValArr[1].toLowerCase();if(unencode)v=decodeURIComponent(v);out[k]=v.split(HASH_SUB_LIST_SEP).map((s=>s.trim()));if(out[k].length===1&&out[k]===HASH_SUB_NONE)out[k]=[];return out}else{throw new Error(`Badly formatted subhash ${subHash}`)}},packSubHash(key,values,opts){opts=opts||{};if(opts.isEncodeBoth||opts.isEncodeKey)key=key.toUrlified();if(opts.isEncodeBoth||opts.isEncodeValues)values=values.map((it=>it.toUrlified()));return`${key}${HASH_SUB_KV_SEP}${values.join(HASH_SUB_LIST_SEP)}`},categoryToPage(category){return UrlUtil.CAT_TO_PAGE[category]},categoryToHoverPage(category){return UrlUtil.CAT_TO_HOVER_PAGE[category]||UrlUtil.categoryToPage(category)},bindLinkExportButton(filterBox,$btn){$btn=$btn||ListUtil.getOrTabRightButton(`btn-link-export`,`magnet`);$btn.addClass("btn-copy-effect").off("click").on("click",(async evt=>{let url=window.location.href;const parts=filterBox.getSubHashes({isAddSearchTerm:true});parts.unshift(url);if(evt.ctrlKey){await MiscUtil.pCopyTextToClipboard(filterBox.getFilterTag());JqueryUtil.showCopiedEffect($btn);return}if(evt.shiftKey&&ListUtil.sublist){const toEncode=JSON.stringify(ListUtil.getExportableSublist());const part2=UrlUtil.packSubHash(ListUtil.SUB_HASH_PREFIX,[toEncode],{isEncodeBoth:true});parts.push(part2)}await MiscUtil.pCopyTextToClipboard(parts.join(HASH_PART_SEP));JqueryUtil.showCopiedEffect($btn)})).title("Get link to filters (SHIFT adds list; CTRL copies @filter tag)")},bindLinkExportButtonMulti(filterBox,$btn){$btn=$btn||ListUtil.getOrTabRightButton(`btn-link-export`,`magnet`);$btn.addClass("btn-copy-effect").off("click").on("click",(async evt=>{const url=window.location.href.replace(/\.html.+/,".html");const[[mainHash,..._],[featHash,...__]]=Hist.getDoubleHashParts();const filterBoxHashes=filterBox.getSubHashes({isAddSearchTerm:true});const toCopy=`${url}#${[mainHash,...filterBoxHashes].join(HASH_PART_SEP)}#${featHash}`;await MiscUtil.pCopyTextToClipboard(toCopy);JqueryUtil.showCopiedEffect($btn)})).title("Get Link to Filters")},mini:{compress(primitive){const type=typeof primitive;if(primitive==null)return`x`;switch(type){case"boolean":return`b${Number(primitive)}`;case"number":return`n${primitive}`;case"string":return`s${primitive.toUrlified()}`;default:throw new Error(`Unhandled type "${type}"`)}},decompress(raw){const[type,data]=[raw.slice(0,1),raw.slice(1)];switch(type){case"x":return null;case"b":return!!Number(data);case"n":return Number(data);case"s":return String(data);default:throw new Error(`Unhandled type "${type}"`)}}},class:{getIndexedEntries(cls){const out=[];let scFeatureI=0;(cls.classFeatures||[]).forEach(((lvlFeatureList,ixLvl)=>{lvlFeatureList.filter((feature=>!feature.gainSubclassFeature)).forEach(((feature,ixFeature)=>{const name=Renderer.findName(feature);if(!name){if(BrewUtil.hasSourceJson(cls.source))return;else throw new Error("Class feature had no name!")}out.push({_type:"classFeature",source:cls.source.source||cls.source,name:name,hash:`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls)}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:ixLvl,ixFeature:ixFeature}})}`,entry:feature,level:ixLvl+1})}));const ixGainSubclassFeatures=lvlFeatureList.findIndex((feature=>feature.gainSubclassFeature));if(~ixGainSubclassFeatures){cls.subclasses.forEach((sc=>{const features=(sc.subclassFeatures||[])[scFeatureI]||[];sc.source=sc.source||cls.source;const tempStack=[];features.forEach((feature=>{const subclassFeatureHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls)}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc,feature:{ixLevel:ixLvl,ixFeature:ixGainSubclassFeatures}})}`;const name=Renderer.findName(feature);if(!name){if(BrewUtil.hasSourceJson(sc.source))return;else throw new Error("Subclass feature had no name!")}tempStack.push({_type:"subclassFeature",name:name,subclassName:sc.name,subclassShortName:sc.shortName,source:sc.source.source||sc.source,hash:subclassFeatureHash,entry:feature,level:ixLvl+1});if(feature.entries){const namedFeatureParts=feature.entries.filter((it=>it.name));namedFeatureParts.forEach((it=>{const lvl=ixLvl+1;if(tempStack.find((existing=>it.name===existing.name&&lvl===existing.level)))return;tempStack.push({_type:"subclassFeaturePart",name:it.name,subclassName:sc.name,subclassShortName:sc.shortName,source:sc.source.source||sc.source,hash:subclassFeatureHash,entry:feature,level:lvl})}))}}));out.push(...tempStack)}));scFeatureI++}else if(ixGainSubclassFeatures.length>1){setTimeout((()=>{throw new Error(`Multiple subclass features gained at level ${ixLvl+1} for class "${cls.name}" from source "${cls.source}"!`)}))}}));return out}},getStateKeySubclass(sc){return Parser.stringToSlug(`sub ${sc.shortName||sc.name} ${Parser.sourceJsonToAbv(sc.source)}`)},getStateKeyHeritage(h){return Parser.stringToSlug(`h ${h.shortName||h.name} ${Parser.sourceJsonToAbv(h.source)}`)},getClassesPageStatePart(opts){const stateParts=[opts.subclass?`${UrlUtil.getStateKeySubclass(opts.subclass)}=${UrlUtil.mini.compress(true)}`:null,opts.feature?`feature=${UrlUtil.mini.compress(`${opts.feature.ixLevel}-${opts.feature.ixFeature}`)}`:""].filter(Boolean);return stateParts.length?UrlUtil.packSubHash("state",stateParts):""},getAncestriesPageStatePart(opts){const stateParts=[opts.heritage?`${UrlUtil.getStateKeyHeritage(opts.heritage)}=${UrlUtil.mini.compress(true)}`:null].filter(Boolean);return stateParts.length?UrlUtil.packSubHash("state",stateParts):""}};UrlUtil.PG_BESTIARY="bestiary.html";UrlUtil.PG_SPELLS="spells.html";UrlUtil.PG_RITUALS="rituals.html";UrlUtil.PG_BACKGROUNDS="backgrounds.html";UrlUtil.PG_ITEMS="items.html";UrlUtil.PG_CLASSES="classes.html";UrlUtil.PG_CONDITIONS="conditions.html";UrlUtil.PG_AFFLICTIONS="afflictions.html";UrlUtil.PG_FEATS="feats.html";UrlUtil.PG_COMPANIONS_FAMILIARS="companionsfamiliars.html";UrlUtil.PG_ANCESTRIES="ancestries.html";UrlUtil.PG_ARCHETYPES="archetypes.html";UrlUtil.PG_VARIANTRULES="variantrules.html";UrlUtil.PG_ADVENTURE="adventure.html";UrlUtil.PG_ADVENTURES="adventures.html";UrlUtil.PG_BOOK="book.html";UrlUtil.PG_BOOKS="books.html";UrlUtil.PG_DEITIES="deities.html";UrlUtil.PG_HAZARDS="hazards.html";UrlUtil.PG_QUICKREF="quickreference.html";UrlUtil.PG_MANAGE_BREW="managebrew.html";UrlUtil.PG_MAKE_BREW="makebrew.html";UrlUtil.PG_DEMO_RENDER="renderdemo.html";UrlUtil.PG_TABLES="tables.html";UrlUtil.PG_ORGANIZATIONS="organizations.html";UrlUtil.PG_CREATURETEMPLATE="creaturetemplates.html";UrlUtil.PG_CHARACTERS="characters.html";UrlUtil.PG_ACTIONS="actions.html";UrlUtil.PG_ABILITIES="abilities.html";UrlUtil.PG_LANGUAGES="languages.html";UrlUtil.PG_TRAITS="traits.html";UrlUtil.PG_VEHICLES="vehicles.html";UrlUtil.PG_GM_SCREEN="gmscreen.html";UrlUtil.PG_CHANGELOG="changelog.html";UrlUtil.PG_PLACES="places.html";UrlUtil.PG_EVENTS="events.html";UrlUtil.PG_RELICGIFTS="relicgifts.html";UrlUtil.PG_OPTIONAL_FEATURES="optionalfeatures.html";UrlUtil.PG_SEARCH="search.html";UrlUtil.PG_GENERIC_DATA="genericData";UrlUtil.URL_TO_HASH_BUILDER={};UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BESTIARY]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_SPELLS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RITUALS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BACKGROUNDS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ITEMS]=it=>UrlUtil.encodeForHash([it.generic==="G"?`${it.name} (generic)`:it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CONDITIONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_AFFLICTIONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_FEATS]=it=>UrlUtil.encodeForHash([it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_COMPANIONS_FAMILIARS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ANCESTRIES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ARCHETYPES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_VARIANTRULES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ADVENTURE]=it=>UrlUtil.encodeForHash(it.id);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BOOK]=it=>UrlUtil.encodeForHash(it.id);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_DEITIES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_HAZARDS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_TABLES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ORGANIZATIONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CREATURETEMPLATE]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ACTIONS]=it=>UrlUtil.encodeForHash([it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ABILITIES]=it=>UrlUtil.encodeForHash([it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_LANGUAGES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_TRAITS]=it=>UrlUtil.encodeForHash(BrewUtil.hasSourceJson(it.source)?[it.name,it.source]:[it.name]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_VEHICLES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_PLACES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_EVENTS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RELICGIFTS]=it=>UrlUtil.encodeForHash([it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_OPTIONAL_FEATURES]=it=>UrlUtil.encodeForHash([it.add_hash?`${it.name} (${it.add_hash})`:it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["subclass"]=it=>{const hashParts=[UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource}),UrlUtil.packSubHash("state",[`${UrlUtil.getStateKeySubclass(it)}=${UrlUtil.mini.compress(true)}`])].filter(Boolean);return Hist.util.getCleanHash(hashParts.join(HASH_PART_SEP))};UrlUtil.URL_TO_HASH_BUILDER["classFeature"]=it=>UrlUtil.encodeForHash([it.name,it.className,it.classSource,it.level,it.source]);UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]=it=>UrlUtil.encodeForHash([it.name,it.className,it.classSource,it.subclassShortName,it.subclassSource,it.level,it.source]);UrlUtil.URL_TO_HASH_BUILDER["legendaryGroup"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["runeItem"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["domain"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["group"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["skill"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.PG_TO_NAME={};UrlUtil.PG_TO_NAME[UrlUtil.PG_BESTIARY]="Bestiary";UrlUtil.PG_TO_NAME[UrlUtil.PG_SPELLS]="Spells";UrlUtil.PG_TO_NAME[UrlUtil.PG_BACKGROUNDS]="Backgrounds";UrlUtil.PG_TO_NAME[UrlUtil.PG_ITEMS]="Items";UrlUtil.PG_TO_NAME[UrlUtil.PG_CLASSES]="Classes";UrlUtil.PG_TO_NAME[UrlUtil.PG_CONDITIONS]="Conditions";UrlUtil.PG_TO_NAME[UrlUtil.PG_AFFLICTIONS]="Afflictions";UrlUtil.PG_TO_NAME[UrlUtil.PG_FEATS]="Feats";UrlUtil.PG_TO_NAME[UrlUtil.PG_COMPANIONS_FAMILIARS]="Companions and Familiars";UrlUtil.PG_TO_NAME[UrlUtil.PG_ANCESTRIES]="Ancestries";UrlUtil.PG_TO_NAME[UrlUtil.PG_ARCHETYPES]="Archetypes";UrlUtil.PG_TO_NAME[UrlUtil.PG_VARIANTRULES]="Variant Rules";UrlUtil.PG_TO_NAME[UrlUtil.PG_ADVENTURES]="Adventures";UrlUtil.PG_TO_NAME[UrlUtil.PG_BOOKS]="Books";UrlUtil.PG_TO_NAME[UrlUtil.PG_DEITIES]="Deities";UrlUtil.PG_TO_NAME[UrlUtil.PG_HAZARDS]="Hazards";UrlUtil.PG_TO_NAME[UrlUtil.PG_QUICKREF]="Quick Reference";UrlUtil.PG_TO_NAME[UrlUtil.PG_MANAGE_BREW]="Homebrew Manager";UrlUtil.PG_TO_NAME[UrlUtil.PG_DEMO_RENDER]="Renderer Demo";UrlUtil.PG_TO_NAME[UrlUtil.PG_TABLES]="Tables";UrlUtil.PG_TO_NAME[UrlUtil.PG_ORGANIZATIONS]="Organizations";UrlUtil.PG_TO_NAME[UrlUtil.PG_CREATURETEMPLATE]="Creature Templates";UrlUtil.PG_TO_NAME[UrlUtil.PG_ACTIONS]="Actions";UrlUtil.PG_TO_NAME[UrlUtil.PG_ABILITIES]="Creature Abilities";UrlUtil.PG_TO_NAME[UrlUtil.PG_LANGUAGES]="Languages";UrlUtil.PG_TO_NAME[UrlUtil.PG_GM_SCREEN]="GM Screen";UrlUtil.PG_TO_NAME[UrlUtil.PG_CHANGELOG]="Changelog";UrlUtil.PG_TO_NAME[UrlUtil.PG_PLACES]="Planes and Places";UrlUtil.PG_TO_NAME[UrlUtil.PG_EVENTS]="Events";UrlUtil.PG_TO_NAME[UrlUtil.PG_OPTIONAL_FEATURES]="Optional Features";UrlUtil.CAT_TO_PAGE={};UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_QUICKREF]=UrlUtil.PG_QUICKREF;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_VARIANT_RULE]=UrlUtil.PG_VARIANTRULES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SUBSYSTEM]=UrlUtil.PG_VARIANTRULES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TABLE]=UrlUtil.PG_TABLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TABLE_GROUP]=UrlUtil.PG_TABLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_BOOK]=UrlUtil.PG_BOOK;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ANCESTRY]=UrlUtil.PG_ANCESTRIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_HERITAGE]=UrlUtil.PG_ANCESTRIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_VE_HERITAGE]=UrlUtil.PG_ANCESTRIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_BACKGROUND]=UrlUtil.PG_BACKGROUNDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CLASS]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CLASS_FEATURE]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SUBCLASS]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SUBCLASS_FEATURE]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ARCHETYPE]=UrlUtil.PG_ARCHETYPES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_FEAT]=UrlUtil.PG_FEATS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_COMPANION]=UrlUtil.PG_COMPANIONS_FAMILIARS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_FAMILIAR]=UrlUtil.PG_COMPANIONS_FAMILIARS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_EIDOLON]=UrlUtil.PG_COMPANIONS_FAMILIARS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_OPTIONAL_FEATURE]=UrlUtil.PG_OPTIONAL_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_OPTIONAL_FEATURE_LESSON]=UrlUtil.PG_OPTIONAL_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ADVENTURE]=UrlUtil.PG_ADVENTURE;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_HAZARD]=UrlUtil.PG_HAZARDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ACTION]=UrlUtil.PG_ACTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CREATURE]=UrlUtil.PG_BESTIARY;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CONDITION]=UrlUtil.PG_CONDITIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ITEM]=UrlUtil.PG_ITEMS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SPELL]=UrlUtil.PG_SPELLS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_AFFLICTION]=UrlUtil.PG_AFFLICTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CURSE]=UrlUtil.PG_AFFLICTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_DISEASE]=UrlUtil.PG_AFFLICTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ABILITY]=UrlUtil.PG_ABILITIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_DEITY]=UrlUtil.PG_DEITIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_LANGUAGE]=UrlUtil.PG_LANGUAGES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PLACE]=UrlUtil.PG_PLACES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_EVENT]=UrlUtil.PG_EVENTS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PLANE]=UrlUtil.PG_PLACES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ORGANIZATION]=UrlUtil.PG_ORGANIZATIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CREATURETEMPLATE]=UrlUtil.PG_CREATURETEMPLATE;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_NATION]=UrlUtil.PG_PLACES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SETTLEMENT]=UrlUtil.PG_PLACES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_RITUAL]=UrlUtil.PG_RITUALS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_VEHICLE]=UrlUtil.PG_VEHICLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_RELICGIFT]=UrlUtil.PG_RELICGIFTS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TRAIT]=UrlUtil.PG_TRAITS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PAGE]=null;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_GENERIC_DATA]=UrlUtil.PG_GENERIC_DATA;UrlUtil.CAT_TO_HOVER_PAGE={};UrlUtil.CAT_TO_HOVER_PAGE[Parser.CAT_ID_CLASS_FEATURE]="classfeature";UrlUtil.CAT_TO_HOVER_PAGE[Parser.CAT_ID_SUBCLASS_FEATURE]="subclassfeature";SortUtil={ascSort:(a,b)=>{if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}return SortUtil._ascSort(a,b)},ascSortProp:(prop,a,b)=>SortUtil.ascSort(a[prop],b[prop]),ascSortLower:(a,b)=>{if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}a=a?a.toLowerCase():a;b=b?b.toLowerCase():b;return SortUtil._ascSort(a,b)},ascSortLowerProp:(prop,a,b)=>SortUtil.ascSortLower(a[prop],b[prop]),ascSortNumericalSuffix(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}function popEndNumber(str){const spl=str.split(" ");return spl.last().isNumeric()?[spl.slice(0,-1).join(" "),Number(spl.last().replace(Parser._numberCleanRegexp,""))]:[spl.join(" "),0]}const[aStr,aNum]=popEndNumber(a.item||a);const[bStr,bNum]=popEndNumber(b.item||b);const initialSort=SortUtil.ascSort(aStr,bStr);if(initialSort)return initialSort;return SortUtil.ascSort(aNum,bNum)},_ascSort:(a,b)=>{if(b===a)return 0;return b<a?1:-1},ascSortAdventure(a,b){return SortUtil.ascSortDateString(b.published,a.published)||SortUtil.ascSortLower(a.parentSource||"",b.parentSource||"")||SortUtil.ascSort(a.publishedOrder??0,b.publishedOrder??0)||SortUtil.ascSortLower(a.storyline,b.storyline)||SortUtil.ascSort(a.level?.start??20,b.level?.start??20)||SortUtil.ascSortLower(a.name,b.name)},ascSortBook(a,b){return SortUtil.ascSortDateString(b.published,a.published)||SortUtil.ascSortLower(a.parentSource||"",b.parentSource||"")||SortUtil.ascSortLower(a.name,b.name)},ascSortDate(a,b){return b.getTime()-a.getTime()},ascSortDateString(a,b){return SortUtil.ascSortDate(new Date(a||"1970-01-0"),new Date(b||"1970-01-0"))},compareListNames(a,b){return SortUtil._ascSort(a.name.toLowerCase(),b.name.toLowerCase())},listSort(a,b,opts){opts=opts||{sortBy:"name"};if(opts.sortBy==="name")return SortUtil.compareListNames(a,b);else return SortUtil._compareByOrDefault_compareByOrDefault(a,b,opts.sortBy)},_listSort_compareBy(a,b,sortBy){const aValue=typeof a.values[sortBy]==="string"?a.values[sortBy].toLowerCase():a.values[sortBy];const bValue=typeof b.values[sortBy]==="string"?b.values[sortBy].toLowerCase():b.values[sortBy];return SortUtil._ascSort(aValue,bValue)},_compareByOrDefault_compareByOrDefault(a,b,sortBy){return SortUtil._listSort_compareBy(a,b,sortBy)||SortUtil.compareListNames(a,b)},_alignSorted:["ce","ne","le","cn","n","ln","cg","ng","lg","any"],alignmentSort:(a,b)=>{if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}return SortUtil.ascSort(SortUtil._alignSorted.indexOf(b.toLowerCase()),SortUtil._alignSorted.indexOf(a.toLowerCase()))},sortActivities(a,b){return SortUtil.ascSort(Parser.activityTypeToNumber(a),Parser.activityTypeToNumber(b))},ascSortLvl(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}if(a==="Unknown"||a===undefined)a="999";if(b==="Unknown"||b===undefined)b="999";return SortUtil.ascSort(a,b)},ascSortRarity(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}return SortUtil.ascSort(Parser.rarityToNumber(a),Parser.rarityToNumber(b))},ascSortProfRanks(a,b){return SortUtil.ascSort(Parser.proficiencyToNumber(a.item),Parser.proficiencyToNumber(b.item))},abilitySort(a,b){return SortUtil.ascSort(Parser._parse_aToB(Parser.ATB_TO_NUM,a,999),Parser._parse_aToB(Parser.ATB_TO_NUM,b,999))},sortTraits(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}if(Renderer.trait.isTraitInCategory(a,"Rarity"))return-1;else if(Renderer.trait.isTraitInCategory(b,"Rarity"))return 1;else if(Renderer.trait.isTraitInCategory(a,"_alignAbv"))return-1;else if(Renderer.trait.isTraitInCategory(b,"_alignAbv"))return 1;else if(Renderer.trait.isTraitInCategory(a,"Size"))return-1;else if(Renderer.trait.isTraitInCategory(b,"Size"))return 1;else return SortUtil.ascSortLower(a,b)},sortSpellLvlCreature(a,b){const aNum=Number(a);const bNum=Number(b);if(!isNaN(aNum)&&!isNaN(bNum))return SortUtil.ascSort(bNum,aNum);else if(isNaN(a))return 1;else if(isNaN(b))return-1;else return 0},sortItemSubCategory(a,b){const out=SortUtil.ascSort(a.item.split(" ").last(),b.item.split(" ").last());if(out===0)return SortUtil.ascSort(a,b);else return out},sortDice(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}const A=String(a).split("d");const B=String(b).split("d");if(A.length<B.length)return-1;else if(A.length>B.length)return 1;else if(SortUtil._ascSort(A[0],B[0])!==0)return SortUtil._ascSort(A[0],B[0]);return SortUtil.ascSort(`000${A[1]}`.slice(-3),`000${B[1]}`.slice(-3))},initBtnSortHandlers($wrpBtnsSort,list){function addCaret($btnSort,direction){$wrpBtnsSort.find(".caret").removeClass("caret");$btnSort.find(".caret_wrp").addClass("caret").toggleClass("caret--reverse",direction==="asc")}const $btnSort=$wrpBtnsSort.find(`.sort[data-sort="${list.sortBy}"]`);addCaret($btnSort,list.sortDir);$wrpBtnsSort.find(".sort").each(((i,e)=>{const $btnSort=$(e);$btnSort.click((evt=>{evt.stopPropagation();const direction=list.sortDir==="asc"?"desc":"asc";addCaret($btnSort,direction);list.sort($btnSort.data("sort"),direction)}))}))}};DataUtil={_loading:{},_loaded:{},_merging:{},_merged:{},async _pLoad(url){if(DataUtil._loading[url]){await DataUtil._loading[url];return DataUtil._loaded[url]}DataUtil._loading[url]=new Promise(((resolve,reject)=>{const request=new XMLHttpRequest;request.open("GET",url,true);request.overrideMimeType("application/json");request.onload=function(){try{DataUtil._loaded[url]=JSON.parse(this.response);resolve()}catch(e){reject(new Error(`Could not parse JSON from ${url}: ${e.message}`))}};request.onerror=e=>reject(new Error(`Error during JSON request: ${e.target.status}`));request.send()}));await DataUtil._loading[url];return DataUtil._loaded[url]},async loadJSON(url,...otherData){const procUrl=UrlUtil.link(url);let ident=procUrl;let data;try{data=await DataUtil._pLoad(procUrl)}catch(e){setTimeout((()=>{throw e}))}if(!data){ident=url;data=await DataUtil._pLoad(url)}await DataUtil.pDoMetaMerge(ident,data);return data},async pDoMetaMerge(ident,data,options){DataUtil._merging[ident]=DataUtil._merging[ident]||DataUtil._pDoMetaMerge(ident,data,options);await DataUtil._merging[ident];return DataUtil._merged[ident]},_pDoMetaMerge_handleCopyProp(prop,arr,entry,options){if(entry._copy){switch(prop){case"creature":return DataUtil.creature.pMergeCopy(arr,entry,options);case"creatureFluff":return DataUtil.creatureFluff.pMergeCopy(arr,entry,options);case"spell":return DataUtil.spell.pMergeCopy(arr,entry,options);case"spellFluff":return DataUtil.spellFluff.pMergeCopy(arr,entry,options);case"item":return DataUtil.item.pMergeCopy(arr,entry,options);case"itemFluff":return DataUtil.itemFluff.pMergeCopy(arr,entry,options);case"background":return DataUtil.background.pMergeCopy(arr,entry,options);case"ancestry":return DataUtil.ancestry.pMergeCopy(arr,entry,options);case"ancestryFluff":return DataUtil.ancestryFluff.pMergeCopy(arr,entry,options);case"deity":return DataUtil.deity.pMergeCopy(arr,entry,options);case"deityFluff":return DataUtil.deityFluff.pMergeCopy(arr,entry,options);case"organization":return DataUtil.organization.pMergeCopy(arr,entry,options);case"organizationFluff":return DataUtil.organizationFluff.pMergeCopy(arr,entry,options);case"creatureTemplate":return DataUtil.creatureTemplate.pMergeCopy(arr,entry,options);case"creatureTemplateFluff":return DataUtil.creatureTemplateFluff.pMergeCopy(arr,entry,options);default:throw new Error(`No dependency _copy merge strategy specified for property "${prop}"`)}}},async _pDoMetaMerge(ident,data,options){if(data._meta){if(data._meta.dependencies){await Promise.all(Object.entries(data._meta.dependencies).map((async([prop,sources])=>{if(!data[prop])return;const toLoads=await Promise.all(sources.map((async source=>DataUtil.pGetLoadableByMeta(prop,source))));const dependencyData=await Promise.all(toLoads.map((toLoad=>DataUtil.loadJSON(toLoad))));const flatDependencyData=dependencyData.map((dd=>dd[prop])).flat();await Promise.all(data[prop].map((entry=>DataUtil._pDoMetaMerge_handleCopyProp(prop,flatDependencyData,entry,options))))})));delete data._meta.dependencies}if(data._meta.internalCopies){for(const prop of data._meta.internalCopies){if(!data[prop])continue;for(const entry of data[prop]){await DataUtil._pDoMetaMerge_handleCopyProp(prop,data[prop],entry,options)}}delete data._meta.internalCopies}if(data._meta.otherSources){await Promise.all(Object.entries(data._meta.otherSources).map((async([prop,sources])=>{const toLoads=await Promise.all(Object.entries(sources).map((async([source,findWith])=>({findWith:findWith,url:await DataUtil.pGetLoadableByMeta(prop,source)}))));const additionalData=await Promise.all(toLoads.map((async({findWith:findWith,url:url})=>({findWith:findWith,sourceData:await DataUtil.loadJSON(url)}))));additionalData.forEach((dataAndSource=>{const findWith=dataAndSource.findWith;const ad=dataAndSource.sourceData;const toAppend=ad[prop].filter((it=>it.otherSources&&Object.keys(it.otherSources).map((x=>it.otherSources[x])).find((os=>os.source===findWith))));if(toAppend.length)data[prop]=(data[prop]||[]).concat(toAppend)}))})));delete data._meta.otherSources}}DataUtil._merged[ident]=data},getCleanFilename(filename){return filename.replace(/[^-_a-zA-Z0-9]/g,"_")},getCsv(headers,rows){function escapeCsv(str){return`"${str.replace(/"/g,`""`).replace(/ +/g," ").replace(/\n\n+/gi,"\n\n")}"`}function toCsv(row){return row.map((str=>escapeCsv(str))).join(",")}return`${toCsv(headers)}\n${rows.map((r=>toCsv(r))).join("\n")}`},userDownload(filename,data,{fileType:fileType=null,isSkipAdditionalMetadata:isSkipAdditionalMetadata=false,propVersion:propVersion="siteVersion",valVersion:valVersion=VERSION_NUMBER}={}){filename=`${filename}.json`;if(isSkipAdditionalMetadata||data instanceof Array)return DataUtil._userDownload(filename,JSON.stringify(data,null,"\t"),"text/json");data={[propVersion]:valVersion,...data};if(fileType!=null)data={fileType:fileType,...data};return DataUtil._userDownload(filename,JSON.stringify(data,null,"\t"),"text/json")},userDownloadText(filename,string){return DataUtil._userDownload(filename,string,"text/plain")},_userDownload(filename,data,mimeType){const a=document.createElement("a");const t=new Blob([data],{type:mimeType});a.href=window.URL.createObjectURL(t);a.download=filename;a.dispatchEvent(new MouseEvent("click",{bubbles:true,cancelable:true,view:window}));setTimeout((()=>window.URL.revokeObjectURL(a.href)),100)},pUserUpload({isMultiple:isMultiple=false,expectedFileType:expectedFileType=null,propVersion:propVersion="siteVersion"}={}){return new Promise((resolve=>{const $iptAdd=$(`<input type="file" ${isMultiple?"multiple":""} accept=".json" style="position: fixed; top: -100px; left: -100px; display: none;">`).on("change",(evt=>{const input=evt.target;const reader=new FileReader;let readIndex=0;const out=[];const errs=[];reader.onload=async()=>{const name=input.files[readIndex-1].name;const text=reader.result;try{const json=JSON.parse(text);const isSkipFile=expectedFileType!=null&&json.fileType&&json.fileType!==expectedFileType&&!await InputUiUtil.pGetUserBoolean({textYes:"Yes",textNo:"Cancel",title:"File Type Mismatch",htmlDescription:`The file "${name}" has the type "${json.fileType}" when the expected file type was "${expectedFileType}".<br>Are you sure you want to upload this file?`});if(!isSkipFile){delete json.fileType;delete json[propVersion];out.push(json)}}catch(e){errs.push({filename:name,message:e.message})}if(input.files[readIndex])reader.readAsText(input.files[readIndex++]);else resolve({jsons:out,errors:errs})};reader.readAsText(input.files[readIndex++])})).appendTo(document.body);$iptAdd.click()}))},doHandleFileLoadErrorsGeneric(errors){if(!errors)return;errors.forEach((err=>{JqueryUtil.doToast({content:`Could not load file "${err.filename}": <code>${err.message}</code>. ${VeCt.STR_SEE_CONSOLE}`,type:"danger"})}))},cleanJson(cpy){cpy.name=cpy._displayName||cpy.name;delete cpy.uniqueId;DataUtil.__cleanJsonObject(cpy);return cpy},__cleanJsonObject(obj){if(obj==null)return obj;if(typeof obj==="object"){if(obj instanceof Array){obj.forEach((it=>DataUtil.__cleanJsonObject(it)))}else{Object.entries(obj).forEach((([k,v])=>{if(k.startsWith("_")||k==="customHashId")delete obj[k];else DataUtil.__cleanJsonObject(v)}))}}},async pGetLoadableByMeta(key,value){switch(key){case"creature":{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/index.json`);if(index[value])return`${Renderer.get().baseUrl}data/bestiary/${index[value]}`;const brewIndex=await DataUtil.brew.pLoadSourceIndex();if(!brewIndex[value])throw new Error(`Bestiary index did not contain source "${value}"`);const urlRoot=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const brewUrl=DataUtil.brew.getFileUrl(brewIndex[value],urlRoot);await BrewUtil.pDoHandleBrewJson(await DataUtil.loadJSON(brewUrl),UrlUtil.getCurrentPage());return brewUrl}case"creatureFluff":{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/fluff-index.json`);if(!index[value])throw new Error(`Bestiary fluff index did not contain source "${value}"`);return`${Renderer.get().baseUrl}data/bestiary/${index[value]}`}case"spell":{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/index.json`);if(index[value])return`${Renderer.get().baseUrl}data/spells/${index[value]}`;const brewIndex=await DataUtil.brew.pLoadSourceIndex();if(!brewIndex[value])throw new Error(`Spell index did not contain source "${value}"`);const urlRoot=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const brewUrl=DataUtil.brew.getFileUrl(brewIndex[value],urlRoot);await BrewUtil.pDoHandleBrewJson(await DataUtil.loadJSON(brewUrl),UrlUtil.getCurrentPage());return brewUrl}case"spellFluff":{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/fluff-index.json`);if(!index[value])throw new Error(`Spell fluff index did not contain source "${value}"`);return`${Renderer.get().baseUrl}data/spells/${index[value]}`}case"background":return`${Renderer.get().baseUrl}data/backgrounds.json`;case"raceFluff":return`${Renderer.get().baseUrl}data/fluff-races.json`;default:throw new Error(`Could not get loadable URL for \`${JSON.stringify({key:key,value:value})}\``)}},generic:{_walker_replaceTxt:null,unpackUid(uid,tag,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,source,displayText,...others]=uid.split("|").map((it=>it.trim()));source=Parser.getTagSource(tag,source);if(opts.isLower)source=source.toLowerCase();return{name:name,source:source,displayText:displayText,others:others}},async _pMergeCopy(impl,page,entryList,entry,options){if(entry._copy){const hash=UrlUtil.URL_TO_HASH_BUILDER[page](entry._copy);const it=impl._mergeCache[hash]||DataUtil.generic._pMergeCopy_search(impl,page,entryList,entry,options);if(!it)return;if(it._copy)await DataUtil.generic._pMergeCopy(impl,page,entryList,it,options);return DataUtil.generic._pApplyCopy(impl,MiscUtil.copy(it),entry,options)}},_pMergeCopy_search(impl,page,entryList,entry,options){const entryHash=UrlUtil.URL_TO_HASH_BUILDER[page](entry._copy);return entryList.find((it=>{const hash=UrlUtil.URL_TO_HASH_BUILDER[page](it);impl._mergeCache[hash]=it;return hash===entryHash}))},async _pApplyCopy(impl,copyFrom,copyTo,options={}){if(options.doKeepCopy)copyTo.__copy=MiscUtil.copy(copyFrom);function normaliseMods(obj){Object.entries(obj._mod).forEach((([k,v])=>{if(!(v instanceof Array))obj._mod[k]=[v]}))}const copyMeta=copyTo._copy||{};if(copyMeta._mod)normaliseMods(copyMeta);if(copyMeta.creatureAdjustment){scaleCreature.applyAdjustment(copyFrom,copyMeta.creatureAdjustment.toLowerCase())}Object.keys(copyFrom).forEach((k=>{if(copyTo[k]===null)return delete copyTo[k];if(copyTo[k]==null){if(impl._MERGE_REQUIRES_PRESERVE[k]){if(copyTo._copy._preserve&&copyTo._copy._preserve[k])copyTo[k]=copyFrom[k]}else copyTo[k]=copyFrom[k]}}));function getPropertyFromPath(obj,path){return path.split(".").reduce(((o,i)=>o[i]),obj)}function setPropertyFromPath(obj,setTo,path){const split=path.split(".");if(split.length===1)obj[path]=setTo;else{const top=split.shift();if(!MiscUtil.isObject(obj[top]))obj[top]={};setPropertyFromPath(obj[top],setTo,split.join("."))}}function doEnsureArray(obj,prop){if(!(obj[prop]instanceof Array))obj[prop]=[obj[prop]]}function doMod_appendStr(modInfo,prop){if(copyTo[prop])copyTo[prop]=`${copyTo[prop]}${modInfo.joiner||""}${modInfo.str}`;else copyTo[prop]=modInfo.str}function doMod_replaceTxt(modInfo,path){if(!getPropertyFromPath(copyTo,path))return;DataUtil.generic._walker_replaceTxt=DataUtil.generic._walker_replaceTxt||MiscUtil.getWalker();const re=new RegExp(modInfo.replace,`g${modInfo.flags||""}`);const handlers={string:str=>{if(modInfo.replaceTags)return str.replace(re,modInfo.with);const split=Renderer.splitByTags(str);const len=split.length;for(let i=0;i<len;++i){if(split[i].startsWith("{@"))continue;split[i]=split[i].replace(re,modInfo.with)}return split.join("")},object:obj=>obj};const setTo=getPropertyFromPath(copyTo,path).map((it=>{if(typeof it!=="string")return it;return DataUtil.generic._walker_replaceTxt.walk(it,handlers)}));setPropertyFromPath(copyTo,setTo,path);const typesToReplaceIn=["successDegree","ability","affliction","lvlEffect"];getPropertyFromPath(copyTo,path).forEach((it=>{if(path==="attacks"){it.damage=it.damage.replace(re,modInfo.with);it.traits=DataUtil.generic._walker_replaceTxt.walk(it.traits,handlers)}if(it.entries)it.entries=DataUtil.generic._walker_replaceTxt.walk(it.entries,handlers);if(it.items)it.items=DataUtil.generic._walker_replaceTxt.walk(it.items,handlers);if(typesToReplaceIn.includes(it.type)){Object.keys(it).forEach((key=>{it[key]=DataUtil.generic._walker_replaceTxt.walk(it[key],handlers)}))}if(it.headerEntries)it.headerEntries=DataUtil.generic._walker_replaceTxt.walk(it.headerEntries,handlers);if(it.footerEntries)it.footerEntries=DataUtil.generic._walker_replaceTxt.walk(it.footerEntries,handlers)}))}function doMod_prependArr(modInfo,path){doEnsureArray(modInfo,"items");const current=getPropertyFromPath(copyTo,path);const replacement=current?modInfo.items.concat(current):modInfo.items;setPropertyFromPath(copyTo,replacement,path)}function doMod_appendArr(modInfo,path){doEnsureArray(modInfo,"items");const current=getPropertyFromPath(copyTo,path);const replacement=current?current.concat(modInfo.items):modInfo.items;setPropertyFromPath(copyTo,replacement,path)}function doMod_appendIfNotExistsArr(modInfo,path){doEnsureArray(modInfo,"items");const current=getPropertyFromPath(copyTo,path);if(!current)return setPropertyFromPath(copyTo,modInfo.items,path);const replacement=arr.concat(modInfo.items.filter((it=>!current.some((x=>CollectionUtil.deepEquals(it,x))))));setPropertyFromPath(copyTo,replacement,path)}function doMod_replaceArr(modInfo,path,isThrow=true){doEnsureArray(modInfo,"items");const current=getPropertyFromPath(copyTo,path);if(!current){if(isThrow)throw new Error(`Could not find "${path}" array`);return false}let ixOld;if(modInfo.replace.regex){const re=new RegExp(modInfo.replace.regex,modInfo.replace.flags||"");ixOld=current.findIndex((it=>it.idName||it.name?re.test(it.idName||it.name):typeof it==="string"?re.test(it):false))}else if(modInfo.replace.index!=null){ixOld=modInfo.replace.index}else{ixOld=current.findIndex((it=>it.idName||it.name?it.idName||it.name===modInfo.replace:it===modInfo.replace))}if(~ixOld){current.splice(ixOld,1,...modInfo.items);return true}else if(isThrow)throw new Error(`Could not find "${path}" item with name or title "${modInfo.replace}" to replace`);return false}function doMod_replaceOrAppendArr(modInfo,prop){const didReplace=doMod_replaceArr(modInfo,prop,false);if(!didReplace)doMod_appendArr(modInfo,prop)}function doMod_insertArr(modInfo,path){doEnsureArray(modInfo,"items");if(!getPropertyFromPath(copyTo,path))throw new Error(`Could not find "${path}" array`);getPropertyFromPath(copyTo,path).splice(modInfo.index,0,...modInfo.items)}function doMod_removeArr(modInfo,path){if(modInfo.names){doEnsureArray(modInfo,"names");modInfo.names.forEach((nameToRemove=>{const ixOld=getPropertyFromPath(copyTo,path).findIndex((it=>it.idName||it.name===nameToRemove));if(~ixOld)getPropertyFromPath(copyTo,path).splice(ixOld,1);else{if(!modInfo.force)throw new Error(`Could not find "${path}" item with name "${nameToRemove}" to remove`)}}))}else if(modInfo.items){doEnsureArray(modInfo,"items");modInfo.items.forEach((itemToRemove=>{const ixOld=getPropertyFromPath(copyTo,path).findIndex((it=>it===itemToRemove));if(~ixOld)getPropertyFromPath(copyTo,path).splice(ixOld,1);else throw new Error(`Could not find "${path}" item "${itemToRemove}" to remove`)}))}else throw new Error(`One of "names" or "items" must be provided!`)}function doMod_scalarAddProp(modInfo,prop){function applyTo(k){const out=Number(copyTo[prop][k])+modInfo.scalar;const isString=typeof copyTo[prop][k]==="string";copyTo[prop][k]=isString?`${out>=0?"+":""}${out}`:out}if(!copyTo[prop])return;if(modInfo.prop==="*")Object.keys(copyTo[prop]).forEach((k=>applyTo(k)));else applyTo(modInfo.prop)}function doMod_scalarMultProp(modInfo,prop){function applyTo(k){let out=Number(copyTo[prop][k])*modInfo.scalar;if(modInfo.floor)out=Math.floor(out);const isString=typeof copyTo[prop][k]==="string";copyTo[prop][k]=isString?`${out>=0?"+":""}${out}`:out}if(!copyTo[prop])return;if(modInfo.prop==="*")Object.keys(copyTo[prop]).forEach((k=>applyTo(k)));else applyTo(modInfo.prop)}function doMod_setProps(modInfo,path){doEnsureArray(modInfo,"items");const current=getPropertyFromPath(copyTo,path);const replacement=current?Object.assign(current,modInfo.props):modInfo.props;setPropertyFromPath(copyTo,replacement,path)}function doMod(modInfos,...properties){function handleProp(prop){modInfos.forEach((modInfo=>{if(typeof modInfo==="string"){switch(modInfo){case"remove":return delete copyTo[prop];default:throw new Error(`Unhandled mode: ${modInfo}`)}}else{switch(modInfo.mode){case"appendStr":return doMod_appendStr(modInfo,prop);case"replaceTxt":return doMod_replaceTxt(modInfo,prop);case"prependArr":return doMod_prependArr(modInfo,prop);case"appendArr":return doMod_appendArr(modInfo,prop);case"replaceArr":return doMod_replaceArr(modInfo,prop);case"replaceOrAppendArr":return doMod_replaceOrAppendArr(modInfo,prop);case"appendIfNotExistsArr":return doMod_appendIfNotExistsArr(modInfo,prop);case"insertArr":return doMod_insertArr(modInfo,prop);case"removeArr":return doMod_removeArr(modInfo,prop);case"scalarAddProp":return doMod_scalarAddProp(modInfo,prop);case"scalarMultProp":return doMod_scalarMultProp(modInfo,prop);case"setProps":return doMod_setProps(modInfo,prop);default:throw new Error(`Unhandled mode: ${modInfo.mode}`)}}}))}properties.forEach((prop=>handleProp(prop)));if(!properties.length)handleProp()}if(copyMeta._mod){Object.entries(copyMeta._mod).forEach((([k,v])=>{copyMeta._mod[k]=JSON.parse(JSON.stringify(v).replace(/<\$([^$]+)\$>/g,((...m)=>{const parts=m[1].split("__");switch(parts[0]){case"name":return copyTo.name;default:return m[0]}})))}));Object.entries(copyMeta._mod).forEach((([path,modInfos])=>{if(path==="*")doMod(modInfos,"attacks","abilities.top","abilities.mid","abilities.bot");else if(path==="_")doMod(modInfos);else if(path==="entriesMode"){}else doMod(modInfos,path)}))}copyTo._isCopy=true;delete copyTo._copy}},trait:{loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/traits.json`)}},feat:{_loadedJson:null,_pLoadingJson:null,async loadJSON(){if(DataUtil.feat._loadedJson)return DataUtil.feat._loadedJson;DataUtil.feat._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/feats/index.json`);const allData=await Promise.all(Object.values(index).map((file=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/feats/${file}`))));DataUtil.feat._loadedJson={feat:allData.map((it=>it.feat||[])).flat()}})();await DataUtil.feat._pLoadingJson;return DataUtil.feat._loadedJson}},ritual:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(ritualList,ritual,options){return DataUtil.generic._pMergeCopy(DataUtil.ritual,UrlUtil.PG_RITUALS,ritualList,ritual,options)},loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/rituals.json`)}},optionalfeature:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(optionalFeatureList,optionalfeature,options){return DataUtil.generic._pMergeCopy(DataUtil.optionalfeature,UrlUtil.PG_OPTIONAL_FEATURES,optionalFeatureList,optionalfeature,options)},loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/optionalfeatures.json`)}},creature:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true,hasImages:true,description:true},_mergeCache:{},async pMergeCopy(crList,cr,options){return DataUtil.generic._pMergeCopy(DataUtil.creature,UrlUtil.PG_BESTIARY,crList,cr,options)},async pLoadAll(){const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/index.json`);const allData=await Promise.all(Object.entries(index).map((async([source,file])=>{const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/${file}`);return data.creature.filter((it=>it.source===source))})));return allData.flat()}},creatureFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(crFlfList,crFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.creatureFluff,UrlUtil.PG_BESTIARY,crFlfList,crFlf,options)}},spell:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(spellList,spell,options){return DataUtil.generic._pMergeCopy(DataUtil.spell,UrlUtil.PG_SPELLS,spellList,spell,options)},async pLoadAll(){const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/index.json`);const allData=await Promise.all(Object.entries(index).map((async([source,file])=>{const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/${file}`);return data.spell.filter((it=>it.source===source))})));return allData.flat()}},spellFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(spellFlfList,spellFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.spellFluff,UrlUtil.PG_SPELLS,spellFlfList,spellFlf,options)}},item:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},_loadedJson:null,_pLoadingJson:null,async pMergeCopy(itemList,item,options){return DataUtil.generic._pMergeCopy(DataUtil.item,UrlUtil.PG_ITEMS,itemList,item,options)},async loadJSON(){if(DataUtil.item._loadedJson)return DataUtil.item._loadedJson;DataUtil.item._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/items/index.json`);const files=["baseitems.json",...Object.values(index)];const allData=await Promise.all(files.map((file=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/items/${file}`))));const expanded=await Promise.all(allData.map((it=>it.item||[])).flat().map((it=>DataUtil.item.expandVariants(it))));DataUtil.item._loadedJson={item:expanded.flat(),baseitem:allData.map((it=>it.baseitem||[])).flat()}})();await DataUtil.item._pLoadingJson;return DataUtil.item._loadedJson},async expandVariants(item){if(!item.variants)return[item];const expanded=await Promise.all(item.variants.filter((x=>{if(x.exists!==true)return x})).map((v=>DataUtil.item._expandVariant(item,v))));return[item,...expanded]},async _expandVariant(generic,variant){variant=MiscUtil.copy(variant);variant._copy=variant._copy||{};variant._copy._mod=MiscUtil.merge(generic._vmod,variant._mod,variant._copy._mod);const entriesMode=variant._copy._mod.entriesMode||"concat";if(entriesMode==="concat"){variant.entries=MiscUtil.copy([...generic.entries,...variant.entries||[]])}else if(entriesMode==="generic"){variant.entries=MiscUtil.copy([...generic.entries])}else if(entriesMode==="variant"){variant.entries=MiscUtil.copy([...variant.entries])}if(!variant.name){if(!generic.name.toLowerCase().includes(variant.variantType.toLowerCase())&&!variant.variantType.toLowerCase().includes(generic.name.toLowerCase())){variant.name=`${variant.variantType} ${generic.name}`.toTitleCase()}else{variant.name=variant.variantType.toTitleCase()}}variant.type=generic.type||"Item";variant.generic="V";variant.genericItem=`${generic.name} (generic)|${generic.source.toLowerCase()!=="crb"?`${generic.source}`:""}|${generic.name}`;await DataUtil.generic._pApplyCopy(DataUtil.item,generic,variant,{});delete variant.variants;return variant}},runeItem:{unpackUid(uid){const splits=uid.split("|").map((it=>it.trim()));const source=splits[1];let displayText;let name;if(splits.length%2)displayText=splits.pop();splits.push(splits.shift());name=displayText||splits.filter(((x,i)=>i%2===1)).map((it=>Renderer.runeItem.getRuneShortName(it))).join(" ");const hashes=Renderer.runeItem.getHashesFromTag(uid);return{hashes:hashes,displayText:displayText,name:name,source:source}}},itemFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(itemFlfList,itemFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.itemFluff,UrlUtil.PG_ITEMS,itemFlfList,itemFlf,options)}},background:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},_loadedJson:null,_pLoadingJson:null,async loadJSON(){if(DataUtil.background._loadedJson)return DataUtil.background._loadedJson;DataUtil.background._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/backgrounds/index.json`);const allData=await Promise.all(Object.values(index).map((file=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/backgrounds/${file}`))));DataUtil.background._loadedJson={background:allData.map((it=>it.background||[])).flat()}})();await DataUtil.background._pLoadingJson;return DataUtil.background._loadedJson},async pMergeCopy(bgList,bg,options){return DataUtil.generic._pMergeCopy(DataUtil.background,UrlUtil.PG_BACKGROUNDS,bgList,bg,options)}},ancestry:{_pLoadingJson:null,_loadedJson:null,async loadJSON(){if(DataUtil.ancestry._loadedJson)return DataUtil.ancestry._loadedJson;DataUtil.ancestry._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/ancestries/index.json`);const allData=await Promise.all(Object.values(index).map((it=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/ancestries/${it}`))));DataUtil.ancestry._loadedJson={ancestry:allData.map((it=>it.ancestry||[])).flat(),versatileHeritage:allData.map((it=>it.versatileHeritage||[])).flat()}})();await DataUtil.ancestry._pLoadingJson;return DataUtil.ancestry._loadedJson}},ancestryFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(ancFlfList,ancFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.ancestryFluff,UrlUtil.PG_ANCESTRIES,ancFlfList,ancFlf,options)}},class:{_pLoadingJson:null,_pLoadingRawJson:null,_loadedJson:null,_loadedRawJson:null,async loadJSON(){if(DataUtil.class._loadedJson)return DataUtil.class._loadedJson;DataUtil.class._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/index.json`);const allData=await Promise.all(Object.values(index).map((it=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/${it}`))));const allDereferencedData=await Promise.all(allData.map((json=>Promise.all((json.class||[]).map((cls=>DataUtil.class.pGetDereferencedClassData(cls)))))));DataUtil.class._loadedJson={class:allDereferencedData.flat()}})();await DataUtil.class._pLoadingJson;return DataUtil.class._loadedJson},async loadRawJSON(){if(DataUtil.class._loadedRawJson)return DataUtil.class._loadedRawJson;DataUtil.class._pLoadingRawJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/index.json`);const allData=await Promise.all(Object.values(index).map((it=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/${it}`))));DataUtil.class._loadedRawJson={class:allData.map((it=>it.class||[])).flat(),classFeature:allData.map((it=>it.classFeature||[])).flat(),subclassFeature:allData.map((it=>it.subclassFeature||[])).flat()}})();await DataUtil.class._pLoadingRawJson;return DataUtil.class._loadedRawJson},unpackUidClassFeature(uid,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,className,classSource,level,source,displayText]=uid.split("|").map((it=>it.trim()));classSource=classSource||(opts.isLower?SRC_CRB.toLowerCase():SRC_CRB);source=source||classSource;level=Number(level);return{name:name,className:className,classSource:classSource,level:level,source:source,displayText:displayText}},unpackUidSubclassFeature(uid,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,className,classSource,subclassShortName,subclassSource,level,source,displayText]=uid.split("|").map((it=>it.trim()));classSource=classSource||(opts.isLower?SRC_CRB.toLowerCase():SRC_CRB);subclassSource=subclassSource||(opts.isLower?SRC_CRB.toLowerCase():SRC_CRB);source=source||subclassSource;level=Number(level);return{name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source,displayText:displayText}},_mutEntryNestLevel(feature){const depth=(feature.header==null?1:feature.header)-1;for(let i=0;i<depth;++i){const nxt=MiscUtil.copy(feature);feature.entries=[nxt];delete feature.name;delete feature.page;delete feature.source}},async pGetDereferencedClassData(cls){if(cls.classFeatures&&cls.classFeatures.every((it=>typeof it!=="string"&&!it.classFeature)))return cls;cls=MiscUtil.copy(cls);const byLevel={};for(const classFeatureRef of cls.classFeatures||[]){const uid=classFeatureRef.classFeature?classFeatureRef.classFeature:classFeatureRef;const{name:name,className:className,classSource:classSource,level:level,source:source}=DataUtil.class.unpackUidClassFeature(uid);if(!name||!className||!level||isNaN(level))continue;const hash=UrlUtil.URL_TO_HASH_BUILDER["classFeature"]({name:name,className:className,classSource:classSource,level:level,source:source});if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(hash,"classFeature",source,{isNoCount:true}))continue;const classFeature=await Renderer.hover.pCacheAndGet("classFeature",source,hash,{isCopy:true});if(!classFeature){JqueryUtil.doToast({type:"danger",content:`Failed to find <code>classFeature</code> <code>${uid}</code>`});continue}if(classFeatureRef.gainSubclassFeature)classFeature.gainSubclassFeature=true;if(classFeature.source===cls.source&&SourceUtil.isNonstandardSource(classFeature.source))delete classFeature.source;DataUtil.class._mutEntryNestLevel(classFeature);const key=`${classFeature.level||1}`;(byLevel[key]=byLevel[key]||[]).push(classFeature)}const outClassFeatures=[];const maxLevel=Math.max(...Object.keys(byLevel).map((it=>Number(it))));for(let i=1;i<=maxLevel;++i){outClassFeatures[i-1]=byLevel[i]||[]}cls.classFeatures=outClassFeatures;if(cls.subclasses){const outSubclasses=[];for(const sc of cls.subclasses){outSubclasses.push(await DataUtil.class.pGetDereferencedSubclassData(sc))}cls.subclasses=outSubclasses}return cls},async pGetDereferencedSubclassData(sc){if(sc.subclassFeatures&&sc.subclassFeatures.every((it=>typeof it!=="string"&&!it.subclassFeature)))return sc;sc=MiscUtil.copy(sc);const byLevel={};for(const subclassFeatureRef of sc.subclassFeatures||[]){const uid=subclassFeatureRef.subclassFeature?subclassFeatureRef.subclassFeature:subclassFeatureRef;const{name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source}=DataUtil.class.unpackUidSubclassFeature(uid);if(!name||!className||!subclassShortName||!level||isNaN(level))continue;const hash=UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]({name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source});if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(hash,"subclassFeature",source,{isNoCount:true}))continue;const subclassFeature=await Renderer.hover.pCacheAndGet("subclassFeature",source,hash,{isCopy:true});if(!subclassFeature){JqueryUtil.doToast({type:"danger",content:`Failed to find <code>subclassFeature</code> <code>${uid}</code>`});continue}if(subclassFeature.source===sc.source&&SourceUtil.isNonstandardSource(subclassFeature.source))delete subclassFeature.source;DataUtil.class._mutEntryNestLevel(subclassFeature);const key=`${subclassFeature.level||1}`;(byLevel[key]=byLevel[key]||[]).push(subclassFeature)}sc.subclassFeatures=Object.keys(byLevel).map((it=>Number(it))).sort(SortUtil.ascSort).map((k=>byLevel[k]));return sc}},deity:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(deityList,deity,options){return DataUtil.generic._pMergeCopy(DataUtil.deity,UrlUtil.PG_DEITIES,deityList,deity,options)},loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/deities.json`)}},deityFluff:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(deityFlfList,deityFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.deityFluff,UrlUtil.PG_DEITIES,deityFlfList,deityFlf,options)}},organization:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(organizationList,organization,options){return DataUtil.generic._pMergeCopy(DataUtil.organization,UrlUtil.PG_ORGANIZATIONS,organizationList,organization,options)},loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/organizations.json`)}},organizationFluff:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(organizationFlfList,organizationFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.organizationFluff,UrlUtil.PG_ORGANIZATIONS,organizationFlfList,organizationFlf,options)}},creatureTemplate:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(creatureTemplateList,creatureTemplate,options){return DataUtil.generic._pMergeCopy(DataUtil.creatureTemplate,UrlUtil.PG_ORGANIZATIONS,creatureTemplateList,creatureTemplate,options)},loadJSON:async function(){return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/creaturetemplates.json`)}},creatureTemplateFluff:{_MERGE_REQUIRES_PRESERVE:{page:true,otherSources:true},_mergeCache:{},async pMergeCopy(creatureTemplateFlfList,creatureTemplateFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.creatureTemplateFluff,UrlUtil.PG_ORGANIZATIONS,creatureTemplateFlfList,creatureTemplateFlf,options)}},brew:{_getCleanUrlRoot(urlRoot){if(urlRoot&&urlRoot.trim()){urlRoot=urlRoot.trim();if(!urlRoot.endsWith("/"))urlRoot=`${urlRoot}/`}else urlRoot=`https://raw.githubusercontent.com/Pf2eTools/homebrew/master/`;return urlRoot},async pLoadTimestamps(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-timestamps.json`)},async pLoadPropIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-props.json`)},async pLoadSourceIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-sources.json`)},getFileUrl(path,urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return`${urlRoot}${path}`}}};RollerUtil={isCrypto(){return typeof window!=="undefined"&&typeof window.crypto!=="undefined"},randomise(max,min=1){if(min>max)return 0;if(max===min)return max;if(RollerUtil.isCrypto()){return RollerUtil._randomise(min,max+1)}else{return RollerUtil.roll(max)+min}},rollOnArray(array){return array[RollerUtil.randomise(array.length)-1]},_randomise:(min,max)=>{const range=max-min;const bytesNeeded=Math.ceil(Math.log2(range)/8);const randomBytes=new Uint8Array(bytesNeeded);const maximumRange=(2**8)**bytesNeeded;const extendedRange=Math.floor(maximumRange/range)*range;let i;let randomInteger;while(true){window.crypto.getRandomValues(randomBytes);randomInteger=0;for(i=0;i<bytesNeeded;i++){randomInteger<<=8;randomInteger+=randomBytes[i]}if(randomInteger<extendedRange){randomInteger%=range;return min+randomInteger}}},roll(max,fn=Math.random){return Math.floor(fn()*max)},addListRollButton(isCompact,ids,rollX){ids=ids||{roll:"feelinglucky",reset:"reset",search:"filter-search-group"};const $btnRoll=$(`<button class="btn btn-xs btn-default ${isCompact?"px-2":""}" id="${ids.roll}" title="Feeling Lucky?"><span class="glyphicon glyphicon-random"></span></button>`);$btnRoll.on("click",(()=>{const primaryLists=ListUtil.getPrimaryLists();if(primaryLists&&primaryLists.length){const allLists=primaryLists.filter((l=>l.visibleItems.length));if(allLists.length){if(rollX==null)rollX=RollerUtil.roll(allLists.length);const list=allLists[rollX];const rollY=RollerUtil.roll(list.visibleItems.length);window.location.hash=$(list.visibleItems[rollY].ele).find(`a`).prop("hash")}}}));$(`#${ids.search}`).find(`#${ids.reset}`).before($btnRoll)},getColRollType(colLabel){if(typeof colLabel!=="string")return false;if(/^{@dice [^}]+}$/.test(colLabel.trim()))return true;colLabel=Renderer.stripTags(colLabel);if(Renderer.dice.lang.getTree3(colLabel))return RollerUtil.ROLL_COL_STANDARD;colLabel=colLabel.replace(RollerUtil._REGEX_ROLLABLE_COL_LABEL,"$1");if(Renderer.dice.lang.getTree3(colLabel))return RollerUtil.ROLL_COL_VARIABLE;return 0},getFullRollCol(lbl){if(lbl.includes("@dice"))return lbl;if(Renderer.dice.lang.getTree3(lbl))return`{@dice ${lbl}}`;const m=RollerUtil._REGEX_ROLLABLE_COL_LABEL.exec(lbl);if(!m)return lbl;return`{@dice ${m[1]}${m[2]}#$prompt_number:title=Enter a ${m[3].trim()}$#|${lbl}}`},_DICE_REGEX_STR:"((([1-9]\\d*)?d([1-9]\\d*)(\\s*?[-+×x*÷/]\\s*?(\\d,\\d|\\d)+(\\.\\d+)?)?))+?"};RollerUtil.DICE_REGEX=new RegExp(RollerUtil._DICE_REGEX_STR,"g");RollerUtil.REGEX_DAMAGE_DICE=/(\d+)( \((?:{@dice |{@damage ))([-+0-9d ]*)(}\) [a-z]+( \([-a-zA-Z0-9 ]+\))?( or [a-z]+( \([-a-zA-Z0-9 ]+\))?)? damage)/gi;RollerUtil._REGEX_ROLLABLE_COL_LABEL=/^(.*?\d)(\s*[-+/*^×÷]\s*)([a-zA-Z0-9 ]+)$/;RollerUtil.ROLL_COL_NONE=0;RollerUtil.ROLL_COL_STANDARD=1;RollerUtil.ROLL_COL_VARIABLE=2;StorageUtil={_init:false,_initAsync:false,_fakeStorage:{},_fakeStorageAsync:{},_getSyncStorage(){if(StorageUtil._init){if(StorageUtil.__fakeStorage)return StorageUtil._fakeStorage;else return window.localStorage}StorageUtil._init=true;try{window.localStorage.setItem("_test_storage",true);return window.localStorage}catch(e){StorageUtil.__fakeStorage=true;StorageUtil._fakeStorage={isSyncFake:true,getItem:k=>StorageUtil.__fakeStorage[k],removeItem:k=>delete StorageUtil.__fakeStorage[k],setItem:(k,v)=>StorageUtil.__fakeStorage[k]=v};return StorageUtil._fakeStorage}},async _getAsyncStorage(){if(StorageUtil._initAsync){if(StorageUtil.__fakeStorageAsync)return StorageUtil._fakeStorageAsync;else return localforage}const getInitFakeStorage=()=>{StorageUtil.__fakeStorageAsync={};StorageUtil._fakeStorageAsync={pIsAsyncFake:true,async setItem(k,v){StorageUtil.__fakeStorageAsync[k]=v},async getItem(k){return StorageUtil.__fakeStorageAsync[k]},async removeItem(k){delete StorageUtil.__fakeStorageAsync[k]}};return StorageUtil._fakeStorageAsync};if(typeof window!=="undefined"){try{await new Promise(((resolve,reject)=>{const request=window.indexedDB.open("_test_db",1);request.onerror=reject;request.onsuccess=resolve}));await localforage.setItem("_storage_check",true);return localforage}catch(e){return getInitFakeStorage()}finally{StorageUtil._initAsync=true}}else return getInitFakeStorage()},syncGet(key){const rawOut=StorageUtil._getSyncStorage().getItem(key);if(rawOut&&rawOut!=="undefined"&&rawOut!=="null")return JSON.parse(rawOut);return null},syncSet(key,value){StorageUtil._getSyncStorage().setItem(key,JSON.stringify(value));StorageUtil._syncTrackKey(key)},syncRemove(key){StorageUtil._getSyncStorage().removeItem(key);StorageUtil._syncTrackKey(key,true)},syncGetForPage(key){return StorageUtil.syncGet(`${key}_${UrlUtil.getCurrentPage()}`)},syncSetForPage(key,value){StorageUtil.syncSet(`${key}_${UrlUtil.getCurrentPage()}`,value)},isSyncFake(){return!!StorageUtil._getSyncStorage().isSyncFake},_syncTrackKey(key,isRemove){const meta=StorageUtil.syncGet(StorageUtil._META_KEY)||{};if(isRemove)delete meta[key];else meta[key]=1;StorageUtil._getSyncStorage().setItem(StorageUtil._META_KEY,JSON.stringify(meta))},syncGetDump(){const out={};const meta=StorageUtil.syncGet(StorageUtil._META_KEY)||{};Object.entries(meta).filter((([key,isPresent])=>isPresent)).forEach((([key])=>out[key]=StorageUtil.syncGet(key)));return out},syncSetFromDump(dump){Object.entries(dump).forEach((([k,v])=>StorageUtil.syncSet(k,v)))},async pIsAsyncFake(){const storage=await StorageUtil._getAsyncStorage();return!!storage.pIsAsyncFake},async pSet(key,value){StorageUtil._pTrackKey(key);const storage=await StorageUtil._getAsyncStorage();return storage.setItem(key,value)},async pGet(key){const storage=await StorageUtil._getAsyncStorage();return storage.getItem(key)},async pRemove(key){StorageUtil._pTrackKey(key,true);const storage=await StorageUtil._getAsyncStorage();return storage.removeItem(key)},getPageKey(key,page){return`${key}_${page||UrlUtil.getCurrentPage()}`},async pGetForPage(key){return StorageUtil.pGet(StorageUtil.getPageKey(key))},async pSetForPage(key,value){return StorageUtil.pSet(StorageUtil.getPageKey(key),value)},async pRemoveForPage(key){return StorageUtil.pRemove(StorageUtil.getPageKey(key))},async _pTrackKey(key,isRemove){const storage=await StorageUtil._getAsyncStorage();const meta=await StorageUtil.pGet(StorageUtil._META_KEY)||{};if(isRemove)delete meta[key];else meta[key]=1;return storage.setItem(StorageUtil._META_KEY,meta)},async pGetDump(){const out={};const meta=await StorageUtil.pGet(StorageUtil._META_KEY)||{};await Promise.all(Object.entries(meta).filter((([key,isPresent])=>isPresent)).map((async([key])=>out[key]=await StorageUtil.pGet(key))));return out},async pSetFromDump(dump){return Promise.all(Object.entries(dump).map((([k,v])=>StorageUtil.pSet(k,v))))}};StorageUtil._META_KEY="_STORAGE_META_STORAGE";SessionStorageUtil={_fakeStorage:{},__storage:null,getStorage:()=>{try{return window.sessionStorage}catch(e){if(SessionStorageUtil.__storage)return SessionStorageUtil.__storage;else{return SessionStorageUtil.__storage={isFake:true,getItem:k=>SessionStorageUtil._fakeStorage[k],removeItem:k=>{delete SessionStorageUtil._fakeStorage[k]},setItem:(k,v)=>{SessionStorageUtil._fakeStorage[k]=v}}}}},isFake(){return SessionStorageUtil.getStorage().isSyncFake},setForPage:(key,value)=>{SessionStorageUtil.set(`${key}_${UrlUtil.getCurrentPage()}`,value)},set(key,value){SessionStorageUtil.getStorage().setItem(key,JSON.stringify(value))},getForPage:key=>SessionStorageUtil.get(`${key}_${UrlUtil.getCurrentPage()}`),get(key){const rawOut=SessionStorageUtil.getStorage().getItem(key);if(rawOut&&rawOut!=="undefined"&&rawOut!=="null")return JSON.parse(rawOut);return null},removeForPage:key=>{SessionStorageUtil.remove(`${key}_${UrlUtil.getCurrentPage()}`)},remove(key){SessionStorageUtil.getStorage().removeItem(key)}};BrewUtil={_PAGE:null,homebrew:null,homebrewMeta:null,_lists:null,_sourceCache:null,_filterBoxes:null,_sourceFilters:null,_pHandleBrew:null,_lockHandleBrewJson:null,bind(options){if(options.list)BrewUtil._lists=[options.list];else if(options.lists)BrewUtil._lists=options.lists;if(options.filterBox)BrewUtil._filterBoxes=[options.filterBox];else if(options.filterBoxes)BrewUtil._filterBoxes=options.filterBoxes;if(options.sourceFilter)BrewUtil._sourceFilters=[options.sourceFilter];else if(options.sourceFilters)BrewUtil._sourceFilters=options.sourceFilters;if(options.pHandleBrew!==undefined)this._pHandleBrew=options.pHandleBrew},async pAddBrewData(){if(BrewUtil.homebrew){return BrewUtil.homebrew}else{try{const homebrew=await StorageUtil.pGet(VeCt.STORAGE_HOMEBREW)||{};BrewUtil.homebrewMeta=StorageUtil.syncGet(VeCt.STORAGE_HOMEBREW_META)||{sources:[]};BrewUtil.homebrewMeta.sources=BrewUtil.homebrewMeta.sources||[];BrewUtil.homebrew=homebrew;BrewUtil._resetSourceCache();return BrewUtil.homebrew}catch(e){BrewUtil.pPurgeBrew(e)}}},async pPurgeBrew(error){JqueryUtil.doToast({content:"Error when loading homebrew! Purged homebrew data. (See the log for more information.)",type:"danger"});await StorageUtil.pRemove(VeCt.STORAGE_HOMEBREW);StorageUtil.syncRemove(VeCt.STORAGE_HOMEBREW_META);BrewUtil.homebrew=null;window.location.hash="";BrewUtil.homebrew={};BrewUtil.homebrewMeta={sources:[]};if(error){setTimeout((()=>{throw error}))}},async pAddLocalBrewData(callbackFn=(async(d,page)=>BrewUtil.pDoHandleBrewJson(d,page,null))){if(!IS_VTT&&!IS_DEPLOYED){const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${VeCt.JSON_HOMEBREW_INDEX}`);if(data.toImport&&data.toImport.length){const page=BrewUtil._PAGE||UrlUtil.getCurrentPage();const allData=await Promise.all(data.toImport.map((it=>DataUtil.loadJSON(`homebrew/${it}`))));await Promise.all(allData.map((d=>callbackFn(d,page))))}}},async _pRenderBrewScreen($appendTo,opts){opts=opts||{};const page=BrewUtil._PAGE||UrlUtil.getCurrentPage();const $brewList=$(`<div class="manbrew__current_brew flex-col h-100 mt-1"></div>`);await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);const $iptAdd=$(`<input multiple type="file" accept=".json" style="display: none;">`).change((evt=>{const input=evt.target;let readIndex=0;const reader=new FileReader;reader.onload=async()=>{const json=JSON.parse(reader.result);await DataUtil.pDoMetaMerge(CryptUtil.uid(),json);await BrewUtil.pDoHandleBrewJson(json,page,BrewUtil._pRenderBrewScreen_pRefreshBrewList.bind(this,$brewList));if(input.files[readIndex])reader.readAsText(input.files[readIndex++]);else $(evt.target).val("")};reader.readAsText(input.files[readIndex++])}));const $btnLoadFromUrl=$(`<button class="btn btn-default btn-sm mr-2">Load from URL</button>`).click((async()=>{const enteredUrl=await InputUiUtil.pGetUserString({title:"Homebrew URL"});if(!enteredUrl||!enteredUrl.trim())return;let parsedUrl;try{parsedUrl=new URL(enteredUrl)}catch(e){JqueryUtil.doToast({content:`The provided URL does not appear to be valid.`,type:"danger"});return}BrewUtil.addBrewRemote(null,parsedUrl.href).catch((err=>{JqueryUtil.doToast({content:"Could not load homebrew from the provided URL.",type:"danger"});setTimeout((()=>{throw err}))}))}));const $btnGet=$(`<button class="btn btn-info btn-sm">Get Homebrew</button>`).click((()=>BrewUtil._pHandleClickBtnGet(opts)));const $btnCustomUrl=$(`<button class="btn btn-info btn-sm px-2" title="Set Custom Repository URL"><span class="glyphicon glyphicon-cog"></span></button>`).click((async()=>{const customBrewUtl=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const nxtUrl=await InputUiUtil.pGetUserString({title:"Homebrew Repository URL (Blank for Default)",default:customBrewUtl});if(nxtUrl==null)await StorageUtil.pRemove(`HOMEBREW_CUSTOM_REPO_URL`);else await StorageUtil.pSet(`HOMEBREW_CUSTOM_REPO_URL`,nxtUrl)}));const $btnDelAll=opts.isModal?null:BrewUtil._$getBtnDeleteAll();const $wrpBtns=$$`<div class="flex-vh-center no-shrink mobile__flex-col">
			<div class="flex-v-center mobile__mb-2">
				<div class="flex-v-center btn-group mr-2">
					${$btnGet}
					${$btnCustomUrl}
				</div>
				<label role="button" class="btn btn-default btn-sm mr-2">Upload File${$iptAdd}</label>
				${$btnLoadFromUrl}
			</div>
			<div class="flex-v-center">
				<a href="https://github.com/Pf2eToolsOrg/homebrew" class="flex-v-center" target="_blank" rel="noopener noreferrer"><button class="btn btn-default btn-sm">Browse Source Repository</button></a>
				${$btnDelAll}
				${opts.isModal?$(`<button class="btn btn-danger btn-sm ml-2">Cancel</button>`).click((()=>opts.doClose())):""}
			</div>
		</div>`;if(opts.isModal){$$($appendTo)`
			${$brewList}
			${$wrpBtns.addClass("mb-2")}`}else{$$($appendTo)`
			${$wrpBtns.addClass("mb-3")}
			${$brewList}`}BrewUtil.addBrewRemote=async($ele,jsonUrl,doUnescape)=>{let cached;if($ele){cached=$ele.html();$ele.text("Loading...")}if(doUnescape)jsonUrl=jsonUrl.unescapeQuotes();const data=await DataUtil.loadJSON(`${jsonUrl}?${(new Date).getTime()}`);await BrewUtil.pDoHandleBrewJson(data,page,BrewUtil._pRenderBrewScreen_pRefreshBrewList.bind(this,$brewList));if($ele){$ele.text("Done!");setTimeout((()=>$ele.html(cached)),VeCt.DUR_INLINE_NOTIFY)}}},async _pHandleClickBtnGet(opts){const $btnToggleDisplayNonPageBrews=opts.isModal?$(`<button class="btn btn-default btn-xs mr-2 ${opts.isShowAll?"":"active"}" disabled title="Hides homebrews which do not contain content relevant to this page.">Hide Unrelated</button>`):null;const $btnAll=$(`<button class="btn btn-default btn-xs" disabled title="(Excluding samples)">Add All</button>`);const $ulRows=$$`<ul class="list"><li><div class="lst__wrp-cells"><span style="font-style: italic;">Loading...</span></div></li></ul>`;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control w-100" placeholder="Find homebrew...">`).keydown((evt=>{switch(evt.which){case 13:{return $ulRows.find(`li`).first().find(`.manbrew__load_from_url`).click()}case 40:{const firstItem=list.visibleItems[0];if(firstItem)firstItem.ele.focus()}}}));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isHeight100:true,title:`Get Homebrew`,isUncappedHeight:true,isWidth100:true,overlayColor:"transparent",isHeaderBorder:true});const $wrpBtn=$$`<div class="flex-vh-center no-shrink mobile__flex-col">
			${$(`<button class="btn btn-danger btn-sm">Cancel</button>`).click((()=>doClose()))}
			</div>`;$$($modalInner)`
		<div class="mt-1"><i>A list of homebrew available in the public repository. Click a name to load the homebrew, or view the source directly.<br>
		Contributions are welcome; see the <a href="https://github.com/Pf2eToolsOrg/homebrew#readme" target="_blank" rel="noopener noreferrer">README</a>, or stop by our <a href="https://discord.gg/2hzNxErtVu" target="_blank" rel="noopener noreferrer">Discord</a>.</i></div>
		<hr class="hr-1">
		<div class="flex-h-right mb-1">${$btnToggleDisplayNonPageBrews}${$btnAll}</div>
		${$iptSearch}
		<div class="filtertools manbrew__filtertools btn-group input-group input-group--bottom flex no-shrink">
			<button class="col-4 sort btn btn-default btn-xs" data-sort="name">Name</button>
			<button class="col-3 sort btn btn-default btn-xs" data-sort="author">Author</button>
			<button class="col-1-2 sort btn btn-default btn-xs" data-sort="category">Category</button>
			<button class="col-1-4 sort btn btn-default btn-xs" data-sort="modified">Modified</button>
			<button class="col-1-4 sort btn btn-default btn-xs" data-sort="added">Added</button>
			<button class="sort btn btn-default btn-xs ve-grow" disabled>Source</button>
		</div>
		${$ulRows}${$wrpBtn}`;let dataList;function fnSort(a,b,o){a=dataList[a.ix];b=dataList[b.ix];if(o.sortBy==="name")return byName();if(o.sortBy==="author")return orFallback(SortUtil.ascSortLower,"_brewAuthor");if(o.sortBy==="category")return orFallback(SortUtil.ascSortLower,"_brewCat");if(o.sortBy==="added")return orFallback(SortUtil.ascSort,"_brewAdded");if(o.sortBy==="modified")return orFallback(SortUtil.ascSort,"_brewModified");function byName(){return SortUtil.ascSortLower(a._brewName,b._brewName)}function orFallback(func,prop){return func(a[prop],b[prop])||byName()}}const urlRoot=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const[timestamps,propIndex]=await Promise.all([DataUtil.brew.pLoadTimestamps(urlRoot),DataUtil.brew.pLoadPropIndex(urlRoot)]);const props=opts.isShowAll?BrewUtil.getPageProps(UrlUtil.PG_MANAGE_BREW):BrewUtil.getPageProps();const seenPaths=new Set;dataList=[];props.forEach((prop=>{Object.entries(propIndex[prop]||{}).forEach((([path,dir])=>{if(seenPaths.has(path))return;seenPaths.add(path);dataList.push({download_url:DataUtil.brew.getFileUrl(path,urlRoot),path:path,name:path.slice(path.indexOf("/")+1),_cat:BrewUtil.dirToProp(dir)})}))}));dataList.forEach((it=>{const cleanFilename=it.name.trim().replace(/\.json$/,"");const spl=cleanFilename.split(";").map((it=>it.trim()));if(spl.length>1){it._brewName=spl[1];it._brewAuthor=spl[0]}else{it._brewName=cleanFilename;it._brewAuthor=""}}));dataList.sort(((a,b)=>SortUtil.ascSortLower(a._brewName,b._brewName)));const list=new List({$iptSearch:$iptSearch,$wrpList:$ulRows,fnSort:fnSort,isUseJquery:true});SortUtil.initBtnSortHandlers($modalInner.find(".manbrew__filtertools"),list);dataList.forEach(((it,i)=>{it._brewAdded=(timestamps[it.path]||{}).a||0;it._brewModified=(timestamps[it.path]||{}).m||0;it._brewCat=BrewUtil._pRenderBrewScreen_getDisplayCat(BrewUtil.dirToProp(it._cat));const timestampAdded=it._brewAdded?MiscUtil.dateToStr(new Date(it._brewAdded*1e3),true):"";const timestampModified=it._brewModified?MiscUtil.dateToStr(new Date(it._brewModified*1e3),true):"";const $btnAdd=$(`<span class="col-4 bold manbrew__load_from_url pl-0 clickable"></span>`).text(it._brewName).click((()=>BrewUtil.addBrewRemote($btnAdd,it.download_url||"",true)));const $li=$$`<li class="not-clickable lst--border lst__row--focusable" tabindex="1">
				<div class="lst__wrp-cells">
					${$btnAdd}
					<span class="col-3">${it._brewAuthor}</span>
					<span class="col-1-2 text-center">${it._brewCat}</span>
					<span class="col-1-4 text-center">${timestampModified}</span>
					<span class="col-1-4 text-center">${timestampAdded}</span>
					<span class="col-1 manbrew__source text-center"><a href="${it.download_url}" target="_blank" rel="noopener noreferrer">View Raw</a></span>
				</div>
			</li>`;$li.keydown((evt=>{switch(evt.which){case 13:{return $btnAdd.click()}case 38:{const ixCur=list.visibleItems.indexOf(listItem);if(~ixCur){const prevItem=list.visibleItems[ixCur-1];if(prevItem)prevItem.ele.focus()}else{const firstItem=list.visibleItems[0];if(firstItem)firstItem.ele.focus()}return}case 40:{const ixCur=list.visibleItems.indexOf(listItem);if(~ixCur){const nxtItem=list.visibleItems[ixCur+1];if(nxtItem)nxtItem.ele.focus()}else{const lastItem=list.visibleItems.last();if(lastItem)lastItem.ele.focus()}}}}));const listItem=new ListItem(i,$li,it._brewName,{author:it._brewAuthor,category:it._brewCat,added:timestampAdded,modified:timestampAdded},{$btnAdd:$btnAdd,isSample:it._brewAuthor.toLowerCase().startsWith("sample -")});list.addItem(listItem)}));list.init();$btnAll.prop("disabled",false).click((()=>list.visibleItems.filter((it=>!it.data.isSample)).forEach((it=>it.data.$btnAdd.click()))));if($btnToggleDisplayNonPageBrews){$btnToggleDisplayNonPageBrews.prop("disabled",false).click((()=>{$btnToggleDisplayNonPageBrews.toggleClass("active");doClose();BrewUtil._pHandleClickBtnGet({...opts,isShowAll:!$btnToggleDisplayNonPageBrews.hasClass("active")})}))}$iptSearch.focus()},_$getBtnDeleteAll(isModal){return $(`<button class="btn ${isModal?"btn-xs":"btn-sm ml-2"} btn-danger">Delete All</button>`).click((async()=>{if(!window.confirm("Are you sure?"))return;await StorageUtil.pSet(VeCt.STORAGE_HOMEBREW,{});StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,{});window.location.hash="";location.reload()}))},async _pCleanSaveBrew(){const cpy=MiscUtil.copy(BrewUtil.homebrew);BrewUtil._STORABLE.forEach((prop=>{(cpy[prop]||[]).forEach((ent=>{}))}));await StorageUtil.pSet(VeCt.STORAGE_HOMEBREW,cpy)},async _pRenderBrewScreen_pDeleteSource($brewList,source,doConfirm,isAllSources){if(doConfirm&&!window.confirm(`Are you sure you want to remove all homebrew${!isAllSources?` with${source?` source "${Parser.sourceJsonToFull(source)}"`:`out a source`}`:""}?`))return;const vetoolsSourceSet=new Set(BrewUtil._getActiveVetoolsSources().map((it=>it.json)));const isMatchingSource=itSrc=>isAllSources||(itSrc===source||source===undefined&&!vetoolsSourceSet.has(itSrc)&&!BrewUtil.hasSourceJson(itSrc));await Promise.all(BrewUtil._getBrewCategories().map((async k=>{const cat=BrewUtil.homebrew[k];const pDeleteFn=BrewUtil._getPDeleteFunction(k);const toDel=[];cat.filter((it=>isMatchingSource(it.source))).forEach((it=>toDel.push(it.uniqueId)));await Promise.all(toDel.map((async uId=>pDeleteFn(uId))))})));if(BrewUtil._lists)BrewUtil._lists.forEach((l=>l.update()));BrewUtil._persistHomebrewDebounced();BrewUtil.removeJsonSource(source);if(BrewUtil._sourceFilters)BrewUtil._sourceFilters.forEach((sf=>sf.removeItem(source)));if(BrewUtil._filterBoxes)BrewUtil._filterBoxes.forEach((fb=>fb.render()));await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);window.location.hash="";if(BrewUtil._filterBoxes)BrewUtil._filterBoxes.forEach((fb=>fb.fireChangeEvent()))},async _pRenderBrewScreen_pRefreshBrewList($brewList){function showSourceManager(source,showAll){const $wrpBtnDel=$(`<div class="flex-v-center"></div>`);const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isHeight100:true,title:`View/Manage ${source?`Source Contents: ${Parser.sourceJsonToFull(source)}`:showAll?"Entries from All Sources":`Entries with No Source`}`,isUncappedHeight:true,isWidth100:true,overlayColor:"transparent",$titleSplit:$wrpBtnDel,isHeaderBorder:true});const $cbAll=$(`<input type="checkbox">`);const $ulRows=$$`<ul class="list"></ul>`;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control w-100 mt-1" placeholder="Search entries...">`);const $wrpBtnsSort=$$`<div class="filtertools manbrew__filtertools btn-group">
				<button class="col-6 sort btn btn-default btn-xs" data-sort="name">Name</button>
				<button class="col-5 sort btn btn-default btn-xs" data-sort="category">Category</button>
				<label class="wrp-cb-all pr-0 flex-vh-center mb-0 h-100">${$cbAll}</label>
			</div>`;$$($modalInner)`
				${$iptSearch}
				${$wrpBtnsSort}
				${$ulRows}`;let list;function populateList(){$ulRows.empty();list=new List({$iptSearch:$iptSearch,$wrpList:$ulRows,fnSort:SortUtil.listSort});ListUiUtil.bindSelectAllCheckbox($cbAll.off("change"),list);function mapCategoryEntry(cat,bru){const out={};out.name=bru.name;out.uniqueId=bru.uniqueId;out.extraInfo="";switch(cat){case"subclass":out.extraInfo=` (${bru.class})`;break;case"subrace":out.extraInfo=` (${(bru.race||{}).name})`;break;case"psionic":out.extraInfo=` (${Parser.psiTypeToMeta(bru.type).short})`;break;case"itemProperty":{if(bru.entries)out.name=Renderer.findName(bru.entries);if(!out.name)out.name=bru.abbreviation;break}case"adventureData":case"bookData":{const assocData={adventureData:"adventure",bookData:"book"};out.name=((BrewUtil.homebrew[assocData[cat]]||[]).find((a=>a.id===bru.id))||{}).name||bru.id}}out.name=out.name||`(Unknown)`;return out}const vetoolsSourceSet=new Set(BrewUtil._getActiveVetoolsSources().map((it=>it.json)));const isMatchingSource=itSrc=>showAll||(itSrc===source||source===undefined&&!vetoolsSourceSet.has(itSrc)&&!BrewUtil.hasSourceJson(itSrc));BrewUtil._getBrewCategories().forEach((cat=>{BrewUtil.homebrew[cat].filter((it=>isMatchingSource(it.source))).map((it=>mapCategoryEntry(cat,it))).sort(((a,b)=>SortUtil.ascSort(a.name,b.name))).forEach(((it,i)=>{const dispCat=BrewUtil._pRenderBrewScreen_getDisplayCat(cat,true);const eleLi=document.createElement("li");eleLi.className="row px-0";eleLi.innerHTML=`<label class="lst--border no-select mb-0 flex-v-center">\n\t\t\t\t\t\t\t\t<div class="col-6 bold">${it.name}</div>\n\t\t\t\t\t\t\t\t<div class="col-5 flex-vh-center">${dispCat}${it.extraInfo}</div>\n\t\t\t\t\t\t\t\t<div class="pr-0 col-1 flex-vh-center"><input type="checkbox" class="no-events"></div>\n\t\t\t\t\t\t\t</label>`;const listItem=new ListItem(i,eleLi,it.name,{category:dispCat,category_raw:cat},{uniqueId:it.uniqueId,cbSel:eleLi.firstElementChild.children[2].firstElementChild});list.addItem(listItem);eleLi.addEventListener("click",(evt=>ListUiUtil.handleSelectClick(list,listItem,evt)))}))}));$ulRows.empty();list.init();if(!list.items.length)$ulRows.append(`<h5 class="text-center">No results found.</h5>`);SortUtil.initBtnSortHandlers($wrpBtnsSort,list)}populateList();$(`<button class="btn btn-danger btn-xs">Delete Selected</button>`).on("click",(async()=>{const toDel=list.items.filter((it=>$(it.ele).find(`input`).prop("checked"))).map((it=>({...it.values,...it.data})));if(!toDel.length)return;if(!window.confirm(`Are you sure you want to delete the ${toDel.length} selected item${toDel.length===1?"":"s"}?`))return;if(toDel.length===list.items.length){await BrewUtil._pRenderBrewScreen_pDeleteSource($brewList,source,false,false);doClose()}else{await Promise.all(toDel.map((async it=>{const pDeleteFn=BrewUtil._getPDeleteFunction(it.category_raw);await pDeleteFn(it.uniqueId)})));if(BrewUtil._lists)BrewUtil._lists.forEach((l=>l.update()));BrewUtil._persistHomebrewDebounced();populateList();await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);window.location.hash=""}})).appendTo($wrpBtnDel);$iptSearch.focus()}$brewList.empty();if(!BrewUtil.homebrew)return;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control" placeholder="Search active homebrew...">`);const $wrpList=$(`<ul class="list-display-only brew-list brew-list--target manbrew__list"></ul>`);const $ulGroup=$(`<ul class="list-display-only brew-list brew-list--groups no-shrink" style="height: initial;"></ul>`);const list=new List({$iptSearch:$iptSearch,$wrpList:$wrpList,isUseJquery:true});const $lst=$$`
			<div class="flex-col h-100">
				${$iptSearch}
				<div class="filtertools manbrew__filtertools btn-group input-group input-group--bottom flex no-shrink">
					<button class="col-5 sort btn btn-default btn-xs ve-grow" data-sort="source">Source</button>
					<button class="col-4 sort btn btn-default btn-xs" data-sort="authors">Authors</button>
					<button class="col-1 btn btn-default btn-xs" disabled>Origin</button>
					<button class="col-2 ve-grow btn btn-default btn-xs" disabled>&nbsp;</button>
				</div>
				<div class="flex w-100 h-100 overflow-y-auto relative">${$wrpList}</div>
			</div>
		`.appendTo($brewList);$ulGroup.appendTo($brewList);SortUtil.initBtnSortHandlers($lst.find(".manbrew__filtertools"),list);const createButtons=(src,$row)=>{const $btnViewManage=$(`<button class="btn btn-sm btn-default">View/Manage</button>`).on("click",(()=>{showSourceManager(src.json,src._all)}));const $btnDeleteAll=$(`<button class="btn btn-danger btn-sm"><span class="glyphicon glyphicon-trash"></span></button>`).on("click",(()=>BrewUtil._pRenderBrewScreen_pDeleteSource($brewList,src.json,true,src._all)));$$`<div class="flex-h-right flex-v-center btn-group">
				${$btnViewManage}
				${$btnDeleteAll}
			</div>`.appendTo($row)};const brewSources=MiscUtil.copy(BrewUtil.getJsonSources()).filter((src=>BrewUtil._isSourceRelevantForCurrentPage(src.json)));brewSources.sort(((a,b)=>SortUtil.ascSort(a.full,b.full)));brewSources.forEach(((src,i)=>{const validAuthors=(!src.authors?[]:!(src.authors instanceof Array)?[]:src.authors).join(", ");const isGroup=src._unknown||src._all;const $row=$(`<li class="row manbrew__row lst--border">\n\t\t\t\t<span class="col-5 manbrew__col--tall source manbrew__source">${isGroup?"<i>":""}${src.full}${isGroup?"</i>":""}</span>\n\t\t\t\t<span class="col-4 manbrew__col--tall authors">${validAuthors}</span>\n\t\t\t\t<${src.url?"a":"span"} class="col-1 manbrew__col--tall text-center" ${src.url?`href="${src.url}" target="_blank" rel="noopener noreferrer"`:""}>${src.url?"View Source":""}</${src.url?"a":"span"}>\n\t\t\t\t<span class="hidden">${src.abbreviation}</span>\n\t\t\t</li>`);createButtons(src,$row);const listItem=new ListItem(i,$row,src.full,{authors:validAuthors,abbreviation:src.abbreviation});list.addItem(listItem)}));const createGroupRow=(fullText,modeProp)=>{const $row=$(`<div class="row manbrew__row flex-h-right">\n\t\t\t\t<div class="manbrew__col--tall source manbrew__source text-right"><i class="mr-3">${fullText}</i></div>\n\t\t\t</div>`);createButtons({[modeProp]:true},$row);$ulGroup.append($row)};createGroupRow("Entries From All Sources","_all");createGroupRow("Entries Without Sources","_unknown");list.init();$iptSearch.focus()},_isSourceRelevantForCurrentPage(source){const cats=["trait",...BrewUtil.getPageProps()];return!!cats.find((cat=>!!(BrewUtil.homebrew[cat]||[]).some((entry=>(entry.inherits?entry.inherits.source:entry.source)===source))))},getPageProps(page){page=BrewUtil._PAGE||page||UrlUtil.getCurrentPage();const _PG_SPELLS=["spell","domain"];const _PG_BESTIARY=["creature"];switch(page){case UrlUtil.PG_VARIANTRULES:return["variantrule"];case UrlUtil.PG_TABLES:return["table","tableGroup"];case UrlUtil.PG_BOOKS:return["book","bookData"];case UrlUtil.PG_ANCESTRIES:return["ancestry","versatileHeritage","heritage"];case UrlUtil.PG_BACKGROUNDS:return["background"];case UrlUtil.PG_CLASSES:return["class","subclass","classFeature","subclassFeature"];case UrlUtil.PG_ARCHETYPES:return["archetype"];case UrlUtil.PG_FEATS:return["feat"];case UrlUtil.PG_COMPANIONS_FAMILIARS:return["companion","familiar","eidolon"];case UrlUtil.PG_ADVENTURES:return["adventure","adventureData"];case UrlUtil.PG_HAZARDS:return["hazard"];case UrlUtil.PG_ACTIONS:return["action"];case UrlUtil.PG_BESTIARY:return _PG_BESTIARY;case UrlUtil.PG_CONDITIONS:return["condition"];case UrlUtil.PG_ITEMS:return["item","baseitem","group"];case UrlUtil.PG_SPELLS:return _PG_SPELLS;case UrlUtil.PG_AFFLICTIONS:return["disease","curse"];case UrlUtil.PG_ABILITIES:return["ability"];case UrlUtil.PG_DEITIES:return["deity","domain"];case UrlUtil.PG_LANGUAGES:return["language"];case UrlUtil.PG_EVENTS:return["event"];case UrlUtil.PG_PLACES:return["place"];case UrlUtil.PG_ORGANIZATIONS:return["organization"];case UrlUtil.PG_CREATURETEMPLATE:return["creatureTemplate"];case UrlUtil.PG_RITUALS:return["ritual"];case UrlUtil.PG_OPTIONAL_FEATURES:return["optionalfeature"];case UrlUtil.PG_VEHICLES:return["vehicle"];case UrlUtil.PG_RELICGIFTS:return["relicGift","relic","gift"];case UrlUtil.PG_TRAITS:return["trait"];case UrlUtil.PG_MAKE_BREW:return[..._PG_SPELLS,..._PG_BESTIARY,"makebrewCreatureTrait"];case UrlUtil.PG_MANAGE_BREW:case UrlUtil.PG_DEMO_RENDER:return BrewUtil._STORABLE;default:throw new Error(`No homebrew properties defined for category ${page}`)}},dirToProp(dir){if(!dir)return"";else if(BrewUtil._STORABLE.includes(dir))return dir;else{switch(dir){case"collection":return dir;case"magicvariant":return"variant";case"makebrew":return"makebrewCreatureTrait"}throw new Error(`Directory was not mapped to a category: "${dir}"`)}},_pRenderBrewScreen_getDisplayCat(cat,isManager){if(cat==="variantrule")return"Variant Rule";if(cat==="optionalfeature")return"Optional Feature";if(cat==="adventure")return isManager?"Adventure Contents/Info":"Adventure";if(cat==="adventureData")return"Adventure Text";if(cat==="book")return isManager?"Book Contents/Info":"Book";if(cat==="bookData")return"Book Text";if(cat==="baseitem")return"Base Item";if(cat==="classFeature")return"Class Feature";if(cat==="versatileHeritage")return"Versatile Heritage";if(cat==="subclassFeature")return"Subclass Feature";return cat.uppercaseFirst()},handleLoadbrewClick:async(ele,jsonUrl,name)=>{const $ele=$(ele);if(!$ele.hasClass("rd__wrp-loadbrew--ready"))return;const cached=$ele.html();const cachedTitle=$ele.title();$ele.title("");$ele.removeClass("rd__wrp-loadbrew--ready").html(`${name}<span class="glyphicon glyphicon-refresh rd__loadbrew-icon rd__loadbrew-icon--active"></span>`);jsonUrl=jsonUrl.unescapeQuotes();const data=await DataUtil.loadJSON(`${jsonUrl}?${(new Date).getTime()}`);await BrewUtil.pDoHandleBrewJson(data,BrewUtil._PAGE||UrlUtil.getCurrentPage());$ele.html(`${name}<span class="glyphicon glyphicon-saved rd__loadbrew-icon"></span>`);setTimeout((()=>$ele.html(cached).addClass("rd__wrp-loadbrew--ready").title(cachedTitle)),500)},async _pDoRemove(arrName,uniqueId,isChild){function getIndex(arrName,uniqueId,isChild){return BrewUtil.homebrew[arrName].findIndex((it=>isChild?it.parentUniqueId:it.uniqueId===uniqueId))}const index=getIndex(arrName,uniqueId,isChild);if(~index){const toRemove=BrewUtil.homebrew[arrName][index];BrewUtil.homebrew[arrName].splice(index,1);if(BrewUtil._lists){BrewUtil._lists.forEach((l=>l.removeItemByData(isChild?"parentuniqueId":"uniqueId",uniqueId)))}return toRemove}},_getPDeleteFunction(category){switch(category){case"variantrule":case"table":case"tableGroup":case"ancestry":case"heritage":case"versatileHeritage":case"background":case"class":case"classFeature":case"subclassFeature":case"archetype":case"feat":case"companion":case"familiar":case"eidolon":case"hazard":case"action":case"creature":case"condition":case"item":case"baseitem":case"spell":case"disease":case"curse":case"ability":case"organization":case"creatureTemplate":case"deity":case"language":case"place":case"ritual":case"vehicle":case"relicGift":case"trait":case"group":case"domain":case"skill":case"optionalfeature":return BrewUtil._genPDeleteGenericBrew(category);case"subclass":return BrewUtil._pDeleteSubclassBrew;case"adventure":case"book":return BrewUtil._genPDeleteGenericBookBrew(category);case"adventureData":case"bookData":return()=>{};default:throw new Error(`No homebrew delete function defined for category ${category}`)}},async _pDeleteSubclassBrew(uniqueId){let sc;let index=0;for(;index<BrewUtil.homebrew.subclass.length;++index){if(BrewUtil.homebrew.subclass[index].uniqueId===uniqueId){sc=BrewUtil.homebrew.subclass[index];break}}},_genPDeleteGenericBrew(category){return async uniqueId=>{await BrewUtil._pDoRemove(category,uniqueId)}},_genPDeleteGenericBookBrew(category){return async uniqueId=>{await BrewUtil._pDoRemove(category,uniqueId);await BrewUtil._pDoRemove(`${category}Data`,uniqueId,true)}},manageBrew:()=>{const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isHeight100:true,isWidth100:true,title:`Manage Homebrew`,isUncappedHeight:true,$titleSplit:BrewUtil._$getBtnDeleteAll(true),isHeaderBorder:true});BrewUtil._pRenderBrewScreen($modalInner,{isModal:true,doClose:doClose})},async pAddEntry(prop,obj){BrewUtil._mutUniqueId(obj);(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).push(obj);BrewUtil._persistHomebrewDebounced();return BrewUtil.homebrew[prop].length-1},async pRemoveEntry(prop,obj){const ix=(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).findIndex((it=>it.uniqueId===obj.uniqueId));if(~ix){BrewUtil.homebrew[prop].splice(ix,1);BrewUtil._persistHomebrewDebounced()}else throw new Error(`Could not find object with ID "${obj.uniqueId}" in "${prop}" list`)},getEntryIxByEntry(prop,obj){return(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).findIndex((it=>it.name===obj.name&&it.source===obj.source))},async pUpdateEntryByIx(prop,ix,obj){if(~ix&&ix<BrewUtil.homebrew[prop].length){BrewUtil._mutUniqueId(obj);BrewUtil.homebrew[prop].splice(ix,1,obj);BrewUtil._persistHomebrewDebounced()}else throw new Error(`Index "${ix}" was not valid!`)},_mutUniqueId(obj){delete obj.uniqueId;obj.uniqueId=CryptUtil.md5(JSON.stringify(obj))},_STORABLE:["variantrule","table","tableGroup","book","bookData","ancestry","heritage","versatileHeritage","background","class","subclass","classFeature","subclassFeature","archetype","feat","companion","familiar","eidolon","adventure","adventureData","hazard","action","creature","condition","item","baseitem","spell","disease","curse","ability","deity","language","place","ritual","vehicle","relicGift","trait","group","domain","skill","optionalfeature","organization","creatureTemplate"],async pDoHandleBrewJson(json,page,pFuncRefresh){page=BrewUtil._PAGE||page;await BrewUtil._lockHandleBrewJson.pLock();try{return BrewUtil._pDoHandleBrewJson(json,page,pFuncRefresh)}finally{BrewUtil._lockHandleBrewJson.unlock()}},async _pDoHandleBrewJson(json,page,pFuncRefresh){page=BrewUtil._PAGE||page;function storePrep(arrName){if(json[arrName]!=null&&!(json[arrName]instanceof Array))return;if(json[arrName]){json[arrName].forEach((it=>BrewUtil._mutUniqueId(it)))}else json[arrName]=[]}BrewUtil._STORABLE.forEach(storePrep);const bookPairs=[["adventure","adventureData"],["book","bookData"]];bookPairs.forEach((([bookMetaKey,bookDataKey])=>{if(json[bookMetaKey]&&json[bookDataKey]){json[bookMetaKey].forEach((book=>{const data=json[bookDataKey].find((it=>it.id===book.id));if(data){data.parentUniqueId=book.uniqueId}}))}}));async function pCheckAndAdd(prop){if(!BrewUtil.homebrew[prop])BrewUtil.homebrew[prop]=[];if(!(json[prop]instanceof Array))return[];if(IS_DEPLOYED||IS_VTT){const areNew=[];const existingIds=BrewUtil.homebrew[prop].map((it=>it.uniqueId));json[prop].forEach((it=>{if(!existingIds.find((id=>it.uniqueId===id))){BrewUtil.homebrew[prop].push(it);areNew.push(it)}}));return areNew}else{const existing={};BrewUtil.homebrew[prop].forEach((it=>{existing[it.source]=existing[it.source]||{};existing[it.source][it.name]=it.uniqueId}));const pDeleteFn=BrewUtil._getPDeleteFunction(prop);await Promise.all(json[prop].map((async it=>{const itSource=it.inherits&&it.inherits.source?it.inherits.source:it.source;if(existing[itSource]&&existing[itSource][it.name]){await pDeleteFn(existing[itSource][it.name])}BrewUtil.homebrew[prop].push(it)})));return json[prop]}}function checkAndAddMetaGetNewSources(){const areNew=[];if(json._meta){if(!BrewUtil.homebrewMeta)BrewUtil.homebrewMeta={sources:[]};Object.keys(json._meta).forEach((k=>{switch(k){case"dateAdded":case"dateLastModified":break;case"sources":{const existing=BrewUtil.homebrewMeta.sources.map((src=>src.json));json._meta.sources.forEach((src=>{if(!existing.find((it=>it===src.json))){BrewUtil.homebrewMeta.sources.push(src);areNew.push(src)}}));break}default:{BrewUtil.homebrewMeta[k]=BrewUtil.homebrewMeta[k]||{};Object.assign(BrewUtil.homebrewMeta[k],json._meta[k]);break}}}))}return areNew}let sourcesToAdd=json._meta?json._meta.sources:[];const toAdd={};BrewUtil._STORABLE.filter((k=>json[k]instanceof Array)).forEach((k=>toAdd[k]=json[k]));BrewUtil.homebrew=BrewUtil.homebrew||{};sourcesToAdd=checkAndAddMetaGetNewSources();await Promise.all(BrewUtil._STORABLE.map((async k=>toAdd[k]=await pCheckAndAdd(k))));BrewUtil._persistHomebrewDebounced();StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta);BrewUtil._resetSourceCache();switch(page){case UrlUtil.PG_VARIANTRULES:case UrlUtil.PG_TABLES:case UrlUtil.PG_BOOK:case UrlUtil.PG_BOOKS:case UrlUtil.PG_ANCESTRIES:case UrlUtil.PG_BACKGROUNDS:case UrlUtil.PG_CLASSES:case UrlUtil.PG_ARCHETYPES:case UrlUtil.PG_FEATS:case UrlUtil.PG_COMPANIONS_FAMILIARS:case UrlUtil.PG_ADVENTURE:case UrlUtil.PG_ADVENTURES:case UrlUtil.PG_HAZARDS:case UrlUtil.PG_ACTIONS:case UrlUtil.PG_BESTIARY:case UrlUtil.PG_CONDITIONS:case UrlUtil.PG_ITEMS:case UrlUtil.PG_SPELLS:case UrlUtil.PG_AFFLICTIONS:case UrlUtil.PG_ABILITIES:case UrlUtil.PG_DEITIES:case UrlUtil.PG_LANGUAGES:case UrlUtil.PG_PLACES:case UrlUtil.PG_EVENTS:case UrlUtil.PG_ORGANIZATIONS:case UrlUtil.PG_CREATURETEMPLATE:case UrlUtil.PG_RITUALS:case UrlUtil.PG_VEHICLES:case UrlUtil.PG_RELICGIFTS:case UrlUtil.PG_OPTIONAL_FEATURES:case UrlUtil.PG_TRAITS:await(BrewUtil._pHandleBrew||handleBrew)(MiscUtil.copy(toAdd));break;case UrlUtil.PG_MANAGE_BREW:case UrlUtil.PG_DEMO_RENDER:case VeCt.PG_NONE:break;default:throw new Error(`No homebrew add function defined for category ${page}`)}if(pFuncRefresh)await pFuncRefresh();if(BrewUtil._filterBoxes&&BrewUtil._sourceFilters){BrewUtil._filterBoxes.forEach(((filterBox,idx)=>{const cur=filterBox.getValues();if(cur.Source){const toSet=JSON.parse(JSON.stringify(cur.Source));if(toSet._totals.yes||toSet._totals.no){sourcesToAdd.forEach((src=>toSet[src.json]=1));filterBox.setFromValues({Source:toSet})}}filterBox.fireChangeEvent()}))}},makeBrewButton:id=>{$(`#${id}`).on("click",(()=>BrewUtil.manageBrew()))},_getBrewCategories(){return Object.keys(BrewUtil.homebrew).filter((it=>!it.startsWith("_")))},_buildSourceCache(){function doBuild(){if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.sources){BrewUtil.homebrewMeta.sources.forEach((src=>BrewUtil._sourceCache[src.json.toLowerCase()]={...src}))}}if(!BrewUtil._sourceCache){BrewUtil._sourceCache={};if(!BrewUtil.homebrewMeta){const temp=StorageUtil.syncGet(VeCt.STORAGE_HOMEBREW_META)||{};temp.sources=temp.sources||[];BrewUtil.homebrewMeta=temp;doBuild()}else{doBuild()}}},_resetSourceCache(){BrewUtil._sourceCache=null},removeJsonSource(source){if(!source)return;source=source.toLowerCase();BrewUtil._resetSourceCache();const ix=BrewUtil.homebrewMeta.sources.findIndex((it=>it.json.toLowerCase()===source));if(~ix)BrewUtil.homebrewMeta.sources.splice(ix,1);StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},getJsonSources(){BrewUtil._buildSourceCache();return BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.sources?BrewUtil.homebrewMeta.sources:[]},hasSourceJson(source){if(!source)return false;source=source.toLowerCase();BrewUtil._buildSourceCache();return!!BrewUtil._sourceCache[source]},sourceJsonToFull(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].full||source:source},sourceJsonToAbv(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].abbreviation||source:source},sourceJsonToDate(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].dateReleased||source:source},sourceJsonToUrl(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].url||source:source},sourceJsonToSource(source){if(!source)return null;source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source]:null},sourceJsonToStyle(source){if(!source)return"";source=source.toLowerCase();const color=BrewUtil.sourceJsonToColor(source);if(color)return`style="color: #${color}; border-color: #${color}; text-decoration-color: #${color};"`;return""},sourceJsonToColor(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();if(BrewUtil._sourceCache[source]&&BrewUtil._sourceCache[source].color){const validColor=BrewUtil.getValidColor(BrewUtil._sourceCache[source].color);if(validColor.length)return validColor;return""}else return""},getValidColor(color){return color.replace(/[^a-fA-F0-9]/g,"").slice(0,8)},addSource(sourceObj){BrewUtil._resetSourceCache();const exists=BrewUtil.homebrewMeta.sources.some((it=>it.json===sourceObj.json));if(exists)throw new Error(`Source "${sourceObj.json}" already exists!`);(BrewUtil.homebrewMeta.sources=BrewUtil.homebrewMeta.sources||[]).push(sourceObj);StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},updateSource(sourceObj){BrewUtil._resetSourceCache();const ix=BrewUtil.homebrewMeta.sources.findIndex((it=>it.json===sourceObj.json));if(!~ix)throw new Error(`Source "${sourceObj.json}" does not exist!`);const json=BrewUtil.homebrewMeta.sources[ix].json;BrewUtil.homebrewMeta.sources[ix]={...sourceObj,json:json};StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},_getActiveVetoolsSources(){if(BrewUtil.homebrew===null)throw new Error(`Homebrew was not initialized!`);const allActiveSources=new Set;Object.keys(BrewUtil.homebrew).forEach((k=>BrewUtil.homebrew[k].forEach((it=>it.source&&allActiveSources.add(it.source)))));return Object.keys(Parser.SOURCE_JSON_TO_FULL).map((k=>({json:k,full:Parser.SOURCE_JSON_TO_FULL[k],abbreviation:Parser.SOURCE_JSON_TO_ABV[k],dateReleased:Parser.SOURCE_JSON_TO_DATE[k]}))).sort(((a,b)=>SortUtil.ascSort(a.full,b.full))).filter((it=>allActiveSources.has(it.json)))},async pGetSearchIndex(){BrewUtil._buildSourceCache();const indexer=new Omnidexer(Omnisearch.highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];for(const IX_DEF of INDEX_DEFINITIONS){for(const arbiter of IX_DEF){if(!(BrewUtil.homebrew[arbiter.brewProp||arbiter.listProp]||[]).length)continue;if(arbiter.pFnPreProcBrew){const toProc=await arbiter.pFnPreProcBrew.bind(arbiter)(BrewUtil.homebrew);await indexer.pAddToIndex(arbiter,toProc)}else{await indexer.pAddToIndex(arbiter,BrewUtil.homebrew)}}}}return Omnidexer.decompressIndex(indexer.getIndex())},async pGetAdditionalSearchIndices(highestId,addiProp){BrewUtil._buildSourceCache();const indexer=new Omnidexer(highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];await Promise.all(INDEX_DEFINITIONS.map((IXDEF=>Promise.all(IXDEF.filter((ti=>ti.additionalIndexes&&(BrewUtil.homebrew[ti.listProp]||[]).length)).map((ti=>Promise.all(Object.entries(ti.additionalIndexes).filter((([prop])=>prop===addiProp)).map((async([prop,pGetIndex])=>{const toIndex=await pGetIndex(indexer,{[ti.listProp]:BrewUtil.homebrew[ti.listProp]});toIndex.forEach((add=>indexer.pushToIndex(add)))})))))))))}return Omnidexer.decompressIndex(indexer.getIndex())},async pGetAlternateSearchIndices(highestId,altProp){BrewUtil._buildSourceCache();const indexer=new Omnidexer(highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];for(const IXDEF of INDEX_DEFINITIONS){const filteredIxDef=IXDEF.filter((ti=>ti.alternateIndexes&&(BrewUtil.homebrew[ti.listProp]||[]).length));for(const ti of filteredIxDef){const filteredAltIndexes=Object.entries(ti.alternateIndexes).filter((([prop])=>prop===altProp));for(const tuple of filteredAltIndexes){const[prop,pGetIndex]=tuple;await indexer.pAddToIndex(ti,BrewUtil.homebrew,{alt:ti.alternateIndexes[prop]})}}}}return Omnidexer.decompressIndex(indexer.getIndex())},__pPersistHomebrewDebounced:null,_persistHomebrewDebounced(){if(BrewUtil.__pPersistHomebrewDebounced==null){BrewUtil.__pPersistHomebrewDebounced=MiscUtil.debounce((()=>BrewUtil._pCleanSaveBrew()),125)}BrewUtil.__pPersistHomebrewDebounced()}};CryptUtil={_md5cycle:(x,k)=>{let a=x[0];let b=x[1];let c=x[2];let d=x[3];a=CryptUtil._ff(a,b,c,d,k[0],7,-680876936);d=CryptUtil._ff(d,a,b,c,k[1],12,-389564586);c=CryptUtil._ff(c,d,a,b,k[2],17,606105819);b=CryptUtil._ff(b,c,d,a,k[3],22,-1044525330);a=CryptUtil._ff(a,b,c,d,k[4],7,-176418897);d=CryptUtil._ff(d,a,b,c,k[5],12,1200080426);c=CryptUtil._ff(c,d,a,b,k[6],17,-1473231341);b=CryptUtil._ff(b,c,d,a,k[7],22,-45705983);a=CryptUtil._ff(a,b,c,d,k[8],7,1770035416);d=CryptUtil._ff(d,a,b,c,k[9],12,-1958414417);c=CryptUtil._ff(c,d,a,b,k[10],17,-42063);b=CryptUtil._ff(b,c,d,a,k[11],22,-1990404162);a=CryptUtil._ff(a,b,c,d,k[12],7,1804603682);d=CryptUtil._ff(d,a,b,c,k[13],12,-40341101);c=CryptUtil._ff(c,d,a,b,k[14],17,-1502002290);b=CryptUtil._ff(b,c,d,a,k[15],22,1236535329);a=CryptUtil._gg(a,b,c,d,k[1],5,-165796510);d=CryptUtil._gg(d,a,b,c,k[6],9,-1069501632);c=CryptUtil._gg(c,d,a,b,k[11],14,643717713);b=CryptUtil._gg(b,c,d,a,k[0],20,-373897302);a=CryptUtil._gg(a,b,c,d,k[5],5,-701558691);d=CryptUtil._gg(d,a,b,c,k[10],9,38016083);c=CryptUtil._gg(c,d,a,b,k[15],14,-660478335);b=CryptUtil._gg(b,c,d,a,k[4],20,-405537848);a=CryptUtil._gg(a,b,c,d,k[9],5,568446438);d=CryptUtil._gg(d,a,b,c,k[14],9,-1019803690);c=CryptUtil._gg(c,d,a,b,k[3],14,-187363961);b=CryptUtil._gg(b,c,d,a,k[8],20,1163531501);a=CryptUtil._gg(a,b,c,d,k[13],5,-1444681467);d=CryptUtil._gg(d,a,b,c,k[2],9,-51403784);c=CryptUtil._gg(c,d,a,b,k[7],14,1735328473);b=CryptUtil._gg(b,c,d,a,k[12],20,-1926607734);a=CryptUtil._hh(a,b,c,d,k[5],4,-378558);d=CryptUtil._hh(d,a,b,c,k[8],11,-2022574463);c=CryptUtil._hh(c,d,a,b,k[11],16,1839030562);b=CryptUtil._hh(b,c,d,a,k[14],23,-35309556);a=CryptUtil._hh(a,b,c,d,k[1],4,-1530992060);d=CryptUtil._hh(d,a,b,c,k[4],11,1272893353);c=CryptUtil._hh(c,d,a,b,k[7],16,-155497632);b=CryptUtil._hh(b,c,d,a,k[10],23,-1094730640);a=CryptUtil._hh(a,b,c,d,k[13],4,681279174);d=CryptUtil._hh(d,a,b,c,k[0],11,-358537222);c=CryptUtil._hh(c,d,a,b,k[3],16,-722521979);b=CryptUtil._hh(b,c,d,a,k[6],23,76029189);a=CryptUtil._hh(a,b,c,d,k[9],4,-640364487);d=CryptUtil._hh(d,a,b,c,k[12],11,-421815835);c=CryptUtil._hh(c,d,a,b,k[15],16,530742520);b=CryptUtil._hh(b,c,d,a,k[2],23,-995338651);a=CryptUtil._ii(a,b,c,d,k[0],6,-198630844);d=CryptUtil._ii(d,a,b,c,k[7],10,1126891415);c=CryptUtil._ii(c,d,a,b,k[14],15,-1416354905);b=CryptUtil._ii(b,c,d,a,k[5],21,-57434055);a=CryptUtil._ii(a,b,c,d,k[12],6,1700485571);d=CryptUtil._ii(d,a,b,c,k[3],10,-1894986606);c=CryptUtil._ii(c,d,a,b,k[10],15,-1051523);b=CryptUtil._ii(b,c,d,a,k[1],21,-2054922799);a=CryptUtil._ii(a,b,c,d,k[8],6,1873313359);d=CryptUtil._ii(d,a,b,c,k[15],10,-30611744);c=CryptUtil._ii(c,d,a,b,k[6],15,-1560198380);b=CryptUtil._ii(b,c,d,a,k[13],21,1309151649);a=CryptUtil._ii(a,b,c,d,k[4],6,-145523070);d=CryptUtil._ii(d,a,b,c,k[11],10,-1120210379);c=CryptUtil._ii(c,d,a,b,k[2],15,718787259);b=CryptUtil._ii(b,c,d,a,k[9],21,-343485551);x[0]=CryptUtil._add32(a,x[0]);x[1]=CryptUtil._add32(b,x[1]);x[2]=CryptUtil._add32(c,x[2]);x[3]=CryptUtil._add32(d,x[3])},_cmn:(q,a,b,x,s,t)=>{a=CryptUtil._add32(CryptUtil._add32(a,q),CryptUtil._add32(x,t));return CryptUtil._add32(a<<s|a>>>32-s,b)},_ff:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b&c|~b&d,a,b,x,s,t),_gg:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b&d|c&~d,a,b,x,s,t),_hh:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b^c^d,a,b,x,s,t),_ii:(a,b,c,d,x,s,t)=>CryptUtil._cmn(c^(b|~d),a,b,x,s,t),_md51:s=>{let n=s.length;let state=[1732584193,-271733879,-1732584194,271733878];let i;for(i=64;i<=s.length;i+=64){CryptUtil._md5cycle(state,CryptUtil._md5blk(s.substring(i-64,i)))}s=s.substring(i-64);let tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<s.length;i++)tail[i>>2]|=s.charCodeAt(i)<<(i%4<<3);tail[i>>2]|=128<<(i%4<<3);if(i>55){CryptUtil._md5cycle(state,tail);for(i=0;i<16;i++)tail[i]=0}tail[14]=n*8;CryptUtil._md5cycle(state,tail);return state},_md5blk:s=>{let md5blks=[];for(let i=0;i<64;i+=4){md5blks[i>>2]=s.charCodeAt(i)+(s.charCodeAt(i+1)<<8)+(s.charCodeAt(i+2)<<16)+(s.charCodeAt(i+3)<<24)}return md5blks},_hex_chr:"0123456789abcdef".split(""),_rhex:n=>{let s="";for(let j=0;j<4;j++){s+=CryptUtil._hex_chr[n>>j*8+4&15]+CryptUtil._hex_chr[n>>j*8&15]}return s},_add32:(a,b)=>a+b&4294967295,hex:x=>{for(let i=0;i<x.length;i++){x[i]=CryptUtil._rhex(x[i])}return x.join("")},hex2Dec(hex){return parseInt(`0x${hex}`)},md5:s=>CryptUtil.hex(CryptUtil._md51(s)),hashCode(obj){if(typeof obj==="string"){if(!obj)return 0;let h=0;for(let i=0;i<obj.length;++i)h=31*h+obj.charCodeAt(i);return h}else if(typeof obj==="number")return obj;else throw new Error(`No hashCode implementation for ${obj}`)},uid(){if(RollerUtil.isCrypto()){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16)))}else{let d=Date.now();if(typeof performance!=="undefined"&&typeof performance.now==="function"){d+=performance.now()}return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){const r=(d+Math.random()*16)%16|0;d=Math.floor(d/16);return(c==="x"?r:r&3|8).toString(16)}))}}};CollectionUtil={ObjectSet:class ObjectSet{constructor(){this.map=new Map;this[Symbol.iterator]=this.values}add(item){this.map.set(item._toIdString(),item)}values(){return this.map.values()}},setEq(a,b){if(a.size!==b.size)return false;for(const it of a)if(!b.has(it))return false;return true},setDiff(set1,set2){return new Set([...set1].filter((it=>!set2.has(it))))},deepEquals(a,b){if(CollectionUtil._eq_sameValueZeroEqual(a,b))return true;if(a&&b&&typeof a==="object"&&typeof b==="object"){if(CollectionUtil._eq_isPlainObject(a)&&CollectionUtil._eq_isPlainObject(b))return CollectionUtil._eq_areObjectsEqual(a,b);const arrayA=Array.isArray(a);const arrayB=Array.isArray(b);if(arrayA||arrayB)return arrayA===arrayB&&CollectionUtil._eq_areArraysEqual(a,b);const setA=a instanceof Set;const setB=b instanceof Set;if(setA||setB)return setA===setB&&CollectionUtil.setEq(a,b);return CollectionUtil._eq_areObjectsEqual(a,b)}return false},_eq_sameValueZeroEqual:(a,b)=>a===b||a!==a&&b!==b,_eq_isPlainObject:value=>value.constructor===Object||value.constructor==null,_eq_areObjectsEqual(a,b){const keysA=Object.keys(a);const{length:length}=keysA;if(Object.keys(b).length!==length)return false;for(let i=0;i<length;i++){if(!b.hasOwnProperty(keysA[i]))return false;if(!CollectionUtil.deepEquals(a[keysA[i]],b[keysA[i]]))return false}return true},_eq_areArraysEqual(a,b){const{length:length}=a;if(b.length!==length)return false;for(let i=0;i<length;i++)if(!CollectionUtil.deepEquals(a[i],b[i]))return false;return true}};Array.prototype.last=Array.prototype.last||function(arg){if(arg!==undefined)this[this.length-1]=arg;else return this[this.length-1]};Array.prototype.filterIndex=Array.prototype.filterIndex||function(fnCheck){const out=[];this.forEach(((it,i)=>{if(fnCheck(it))out.push(i)}));return out};Array.prototype.equals=Array.prototype.equals||function(array2){const array1=this;if(!array1&&!array2)return true;else if(!array1&&array2||array1&&!array2)return false;let temp=[];if(!array1[0]||!array2[0])return false;if(array1.length!==array2.length)return false;let key;for(let i=0;i<array1.length;i++){key=`${typeof array1[i]}~${array1[i]}`;if(temp[key])temp[key]++;else temp[key]=1}for(let i=0;i<array2.length;i++){key=`${typeof array2[i]}~${array2[i]}`;if(temp[key]){if(temp[key]===0)return false;else temp[key]--}else return false}return true};Array.prototype.partition=Array.prototype.partition||function(fnIsValid){return this.reduce((([pass,fail],elem)=>fnIsValid(elem)?[[...pass,elem],fail]:[pass,[...fail,elem]]),[[],[]])};Array.prototype.getNext=Array.prototype.getNext||function(curVal){let ix=this.indexOf(curVal);if(!~ix)throw new Error("Value was not in array!");if(++ix>=this.length)ix=0;return this[ix]};Array.prototype.shuffle=Array.prototype.shuffle||function(){for(let i=0;i<1e4;++i)this.sort((()=>Math.random()-.5));return this};Array.prototype.mergeMap=Array.prototype.mergeMap||function(fnMap){return this.map(((...args)=>fnMap(...args))).reduce(((a,b)=>Object.assign(a,b)),{})};Array.prototype.pSerialAwaitMap=Array.prototype.pSerialAwaitMap||async function(fnMap){const out=[];const len=this.length;for(let i=0;i<len;++i)out.push(await fnMap(this[i],i));return out};Array.prototype.unique=Array.prototype.unique||function(fnGetProp){const seen=new Set;return this.filter(((...args)=>{const val=fnGetProp?fnGetProp(...args):args[0];if(seen.has(val))return false;seen.add(val);return true}))};Array.prototype.findDuplicates=Array.prototype.findDuplicates||function(){const array=this.filter(((e,i,a)=>a.indexOf(e)!==i));return array.length?array:false};Array.prototype.zip=Array.prototype.zip||function(otherArray){const out=[];const len=Math.max(this.length,otherArray.length);for(let i=0;i<len;++i){out.push([this[i],otherArray[i]])}return out};Array.prototype.nextWrap=Array.prototype.nextWrap||function(item){const ix=this.indexOf(item);if(~ix){if(ix+1<this.length)return this[ix+1];else return this[0]}else return this.last()};Array.prototype.prevWrap=Array.prototype.prevWrap||function(item){const ix=this.indexOf(item);if(~ix){if(ix-1>=0)return this[ix-1];else return this.last()}else return this[0]};Array.prototype.sum=Array.prototype.sum||function(){let tmp=0;const len=this.length;for(let i=0;i<len;++i)tmp+=this[i];return tmp};Array.prototype.mean=Array.prototype.mean||function(){return this.sum()/this.length};Array.prototype.meanAbsoluteDeviation=Array.prototype.meanAbsoluteDeviation||function(){const mean=this.mean();return(this.map((num=>Math.abs(num-mean)))||[]).mean()};function PrintModeView(opts){opts=opts||{};const{hashKey:hashKey,$openBtn:$openBtn,noneVisibleMsg:noneVisibleMsg,pageTitle:pageTitle,popTblGetNumShown:popTblGetNumShown,isFlex:isFlex,state:state,stateKey:stateKey}=opts;if(hashKey&&stateKey)throw new Error;this.hashKey=hashKey;this.stateKey=stateKey;this.state=state;this.$openBtn=$openBtn;this.noneVisibleMsg=noneVisibleMsg;this.popTblGetNumShown=popTblGetNumShown;this.active=false;this._$body=null;this._$wrpBook=null;this._$wrpRenderedContent=null;this._$wrpNoneShown=null;this._doRenderContent=null;this.$openBtn.off("click").on("click",(()=>{if(this.stateKey){this.state[this.stateKey]=true}else{Hist.cleanSetHash(`${window.location.hash}${HASH_PART_SEP}${this.hashKey}${HASH_SUB_KV_SEP}true`)}}));this._doHashTeardown=()=>{if(this.stateKey){this.state[this.stateKey]=false}else{Hist.cleanSetHash(window.location.hash.replace(`${this.hashKey}${HASH_SUB_KV_SEP}true`,""))}};this._renderContent=async($wrpContent,$dispName,$wrpControlsToPass)=>{this._$wrpRenderedContent=this._$wrpRenderedContent?this._$wrpRenderedContent.empty():$$`<div class="prntv__scroller h-100 overflow-y-auto ${isFlex?"flex":""}">${$wrpContent}</div>`.appendTo(this._$wrpBook);const numShown=await this.popTblGetNumShown($wrpContent,$dispName,$wrpControlsToPass);if(numShown){if(this._$wrpNoneShown){this._$wrpNoneShown.remove();this._$wrpNoneShown=null}}else{if(!this._$wrpNoneShown){const $btnClose=$(`<button class="btn btn-default">Close</button>`).click((()=>this._doHashTeardown()));this._$wrpNoneShown=$$`<div class="w-100 flex-col no-shrink prntv__footer mb-3">
					<div class="mb-2 flex-vh-center"><span class="initial-message">${this.noneVisibleMsg}</span></div>
					<div class="flex-vh-center">${$btnClose}</div>
				</div>`.appendTo(this._$wrpBook)}}};this.pOpen=async()=>{if(this.active)return;this.active=true;document.title=`${pageTitle} - Pf2eTools`;this._$body=$(`body`);this._$wrpBook=$(`<div class="prntv"></div>`);this._$body.css("overflow","hidden");this._$body.addClass("prntv-active");const $btnClose=$(`<span class="delete-icon glyphicon glyphicon-remove"></span>`).click((()=>this._doHashTeardown()));const $dispName=$(`<div></div>`);$$`<div class="prntv__spacer-name split-v-center no-shrink">${$dispName}${$btnClose}</div>`.appendTo(this._$wrpBook);const $wrpControls=$(`<div class="w-100 flex-col prntv__wrp-controls"></div>`).appendTo(this._$wrpBook);let $wrpControlsToPass=$wrpControls;if(opts.hasPrintColumns){$wrpControls.addClass("px-2 mt-2");const injectPrintCss=cols=>{$(`#prntv__print-style`).remove();$(`<style media="print" id="prntv__print-style">.prntv__wrp { column-count: ${cols}; }</style>`).appendTo($(document.body))};const lastColumns=StorageUtil.syncGetForPage(PrintModeView._PRINT_VIEW_COLUMNS_K);const $selColumns=$(`<select class="form-control input-sm">\n\t\t\t\t<option value="0">Two (book style)</option>\n\t\t\t\t<option value="1">One</option>\n\t\t\t</select>`).change((()=>{const val=Number($selColumns.val());if(val===0)injectPrintCss(2);else injectPrintCss(1);StorageUtil.syncSetForPage(PrintModeView._PRINT_VIEW_COLUMNS_K,val)}));if(lastColumns!=null)$selColumns.val(lastColumns);$selColumns.change();$wrpControlsToPass=$$`<div class="w-100 flex">
				<div class="flex-vh-center"><div class="mr-2 no-wrap help--subtle" title="Applied when printing the page.">Print columns:</div>${$selColumns}</div>
			</div>`.appendTo($wrpControls)}const $wrpContent=$(`<div class="prntv__wrp p-2"></div>`);await this._renderContent($wrpContent,$dispName,$wrpControlsToPass);this._pRenderContent=()=>this._renderContent($wrpContent,$dispName,$wrpControlsToPass);this._$wrpBook.append(`<style media="print">.pf2-trait { border-color: #ccc; }</style>`);this._$body.append(this._$wrpBook)};this.teardown=()=>{if(this.active){this._$body.css("overflow","");this._$body.removeClass("prntv-active");this._$wrpBook.remove();this.active=false;this._$wrpRenderedContent=null;this._$wrpNoneShown=null;this._pRenderContent=null}};this.pHandleSub=sub=>{if(this.stateKey)return;const bookViewHash=sub.find((it=>it.startsWith(this.hashKey)));if(bookViewHash&&UrlUtil.unpackSubHash(bookViewHash)[this.hashKey][0]==="true")return this.pOpen();else this.teardown()}}PrintModeView._PRINT_VIEW_COLUMNS_K="printViewColumns";ExcludeUtil={isInitialised:false,_excludes:null,async pInitialise(){ExcludeUtil.pSave=MiscUtil.throttle(ExcludeUtil._pSave,50);try{ExcludeUtil._excludes=await StorageUtil.pGet(VeCt.STORAGE_EXCLUDES)||[];ExcludeUtil._excludes=ExcludeUtil._excludes.filter((it=>it.hash))}catch(e){JqueryUtil.doToast({content:"Error when loading content blacklist! Purged blacklist data. (See the log for more information.)",type:"danger"});try{await StorageUtil.pRemove(VeCt.STORAGE_EXCLUDES)}catch(e){setTimeout((()=>{throw e}))}ExcludeUtil._excludes=null;window.location.hash="";setTimeout((()=>{throw e}))}ExcludeUtil.isInitialised=true},getList(){return ExcludeUtil._excludes||[]},async pSetList(toSet){ExcludeUtil._excludes=toSet;await ExcludeUtil.pSave()},_excludeCount:0,isExcluded(hash,category,source,opts){if(!ExcludeUtil._excludes||!ExcludeUtil._excludes.length)return false;if(!source)throw new Error(`Entity had no source!`);opts=opts||{};source=source.source||source;const out=!!ExcludeUtil._excludes.find((row=>(row.source==="*"||row.source===source)&&(row.category==="*"||row.category===category)&&(row.hash==="*"||row.hash===hash)));if(out&&!opts.isNoCount)++ExcludeUtil._excludeCount;return out},checkShowAllExcluded(list,$pagecontent){if(!list.length&&ExcludeUtil._excludeCount||list.length>0&&list.length===ExcludeUtil._excludeCount){$pagecontent.html(`\n\t\t\t\t<div class="initial-message">(Content <a href="blacklist.html">blacklisted</a>)</div>\n\t\t\t`)}},addExclude(displayName,hash,category,source){if(!ExcludeUtil._excludes.find((row=>row.source===source&&row.category===category&&row.hash===hash))){ExcludeUtil._excludes.push({displayName:displayName,hash:hash,category:category,source:source});ExcludeUtil.pSave();return true}return false},removeExclude(hash,category,source){const ix=ExcludeUtil._excludes.findIndex((row=>row.source===source&&row.category===category&&row.hash===hash));if(~ix){ExcludeUtil._excludes.splice(ix,1);ExcludeUtil.pSave()}},async _pSave(){return StorageUtil.pSet(VeCt.STORAGE_EXCLUDES,ExcludeUtil._excludes)},async pSave(){},resetExcludes(){ExcludeUtil._excludes=[];ExcludeUtil.pSave()}};EncounterUtil={async pGetInitialState(){if(await EncounterUtil._pHasSavedStateLocal()){if(await EncounterUtil._hasSavedStateUrl()){return{type:"url",data:EncounterUtil._getSavedStateUrl()}}else{return{type:"local",data:await EncounterUtil._pGetSavedStateLocal()}}}else return null},_hasSavedStateUrl(){return window.location.hash.length&&Hist.getSubHash(EncounterUtil.SUB_HASH_PREFIX)!=null},_getSavedStateUrl(){let out=null;try{out=JSON.parse(decodeURIComponent(Hist.getSubHash(EncounterUtil.SUB_HASH_PREFIX)))}catch(e){setTimeout((()=>{throw e}))}Hist.setSubhash(EncounterUtil.SUB_HASH_PREFIX,null);return out},async _pHasSavedStateLocal(){return!!StorageUtil.pGet(VeCt.STORAGE_ENCOUNTER)},async _pGetSavedStateLocal(){try{return await StorageUtil.pGet(VeCt.STORAGE_ENCOUNTER)}catch(e){JqueryUtil.doToast({content:"Error when loading encounters! Purged encounter data. (See the log for more information.)",type:"danger"});await StorageUtil.pRemove(VeCt.STORAGE_ENCOUNTER);setTimeout((()=>{throw e}))}},async pDoSaveState(toSave){StorageUtil.pSet(VeCt.STORAGE_ENCOUNTER,toSave)},async pGetSavedState(){const saved=await StorageUtil.pGet(EncounterUtil.SAVED_ENCOUNTER_SAVE_LOCATION);return saved||{}},getEncounterName(encounter){if(encounter.l&&encounter.l.items&&encounter.l.items.length){const largestCount=encounter.l.items.sort(((a,b)=>SortUtil.ascSort(Number(b.c),Number(a.c))))[0];const name=decodeURIComponent(largestCount.h.split(HASH_LIST_SEP)[0]).toTitleCase();return`Encounter with ${name} ×${largestCount.c}`}else return"(Unnamed Encounter)"}};EncounterUtil.SUB_HASH_PREFIX="encounter";EncounterUtil.SAVED_ENCOUNTER_SAVE_LOCATION="ENCOUNTER_SAVED_STORAGE";RuneItemUtil={_hasSavedStateUrl(){return window.location.hash.length&&Hist.getSubHash(RuneItemUtil.SUB_HASH_PREFIX)!=null},_getSavedStateUrl(){let out=null;try{out=JSON.parse(decodeURIComponent(Hist.getSubHash(RuneItemUtil.SUB_HASH_PREFIX)))}catch(e){setTimeout((()=>{throw e}))}Hist.setSubhash(RuneItemUtil.SUB_HASH_PREFIX,null);return out},async _pHasSavedStateLocal(){return!!StorageUtil.pGet(VeCt.STORAGE_RUNEITEM)},async _pGetSavedStateLocal(){try{return await StorageUtil.pGet(VeCt.STORAGE_RUNEITEM)}catch(e){JqueryUtil.doToast({content:"Error when loading runeitems! Purged runeitems data. (See the log for more information.)",type:"danger"});await StorageUtil.pRemove(VeCt.STORAGE_RUNEITEM);setTimeout((()=>{throw e}))}},async pDoSaveState(toSave){StorageUtil.pSet(VeCt.STORAGE_RUNEITEM,toSave)},async pGetSavedState(){const saved=await StorageUtil.pGet(RuneItemUtil.SAVED_RUNEITEM_SAVE_LOCATION);return saved||{}}};RuneItemUtil.SUB_HASH_PREFIX="runeitem";RuneItemUtil.SAVED_RUNEITEM_SAVE_LOCATION="RUNEITEM_SAVED_STORAGE";ExtensionUtil={ACTIVE:false,_doSend(type,data){const detail=MiscUtil.copy({type:type,data:data});window.dispatchEvent(new CustomEvent("rivet.send",{detail:detail}))},async pDoSendStats(evt,ele){const $parent=$(ele).closest(`th.rnd-name`);const page=$parent.attr("data-page");const source=$parent.attr("data-source");const hash=$parent.attr("data-hash");const extensionData=$parent.attr("data-extension");if(page&&source&&hash){let toSend=await Renderer.hover.pCacheAndGet(page,source,hash);if(extensionData){switch(page){case UrlUtil.PG_BESTIARY:{toSend=await scaleCreature.scale(toSend,Number(extensionData))}}}ExtensionUtil._doSend("entity",{page:page,entity:toSend,isTemp:!!evt.shiftKey})}},doSendRoll(data){ExtensionUtil._doSend("roll",data)}};if(typeof window!=="undefined")window.addEventListener("rivet.active",(()=>ExtensionUtil.ACTIVE=true));VeLock=function(){this._lockMeta=null;this.pLock=async()=>{while(this._lockMeta)await this._lockMeta.lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));this._lockMeta={lock:lock,unlock:unlock}};this.unlock=()=>{const lockMeta=this._lockMeta;if(lockMeta){this._lockMeta=null;lockMeta.unlock()}}};BrewUtil._lockHandleBrewJson=new VeLock;;
"use strict";class Prx{static addHook(prop,hook){this.px._hooks[prop]=this.px._hooks[prop]||[];this.px._hooks[prop].push(hook)}static addHookAll(hook){this.px._hooksAll.push(hook)}static toString(){return JSON.stringify(this,((k,v)=>k==="px"?undefined:v))}static copy(){return JSON.parse(Prx.toString.bind(this)())}static get(toProxy){toProxy.px={addHook:Prx.addHook.bind(toProxy),addHookAll:Prx.addHookAll.bind(toProxy),toString:Prx.toString.bind(toProxy),copy:Prx.copy.bind(toProxy),_hooksAll:[],_hooks:{}};return new Proxy(toProxy,{set:(object,prop,value)=>{object[prop]=value;toProxy.px._hooksAll.forEach((hook=>hook(prop,value)));if(toProxy.px._hooks[prop])toProxy.px._hooks[prop].forEach((hook=>hook(prop,value)));return true},deleteProperty:(object,prop)=>{delete object[prop];toProxy.px._hooksAll.forEach((hook=>hook(prop,null)));if(toProxy.px._hooks[prop])toProxy.px._hooks[prop].forEach((hook=>hook(prop,null)));return true}})}}class ProxyBase{constructor(){this.__hooks={};this.__hooksAll={};this.__hooksTmp=null;this.__hooksAllTmp=null}_getProxy(hookProp,toProxy){return new Proxy(toProxy,{set:(object,prop,value)=>{if(object[prop]===value)return true;object[prop]=value;if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hook=>hook(prop,value)));if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])this.__hooks[hookProp][prop].forEach((hook=>hook(prop,value)));return true},deleteProperty:(object,prop)=>{if(!(prop in object))return true;delete object[prop];if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hook=>hook(prop,null)));if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])this.__hooks[hookProp][prop].forEach((hook=>hook(prop,null)));return true}})}_getDeepProxy(hookProp,toProxy){const handler={get:(object,prop)=>{if(prop==="__isProxy")return true;const value=object[prop];if(value===undefined)return;if(value===null)return null;if(typeof value==="object"&&!value.__isProxy)object[prop]=new Proxy(value,handler);return object[prop]},set:(object,prop,value)=>{if(object[prop]===value)return true;object[prop]=value;if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hook=>hook(prop,null)));if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])this.__hooks[hookProp][prop].forEach((hook=>hook(prop,null)));return true}};return new Proxy(toProxy,handler)}_addHook(hookProp,prop,hook){ProxyBase._addHook_to(this.__hooks,hookProp,prop,hook);if(this.__hooksTmp)ProxyBase._addHook_to(this.__hooksTmp,hookProp,prop,hook)}static _addHook_to(obj,hookProp,prop,hook){((obj[hookProp]=obj[hookProp]||{})[prop]=obj[hookProp][prop]||[]).push(hook)}_addHookAll(hookProp,hook){ProxyBase._addHookAll_to(this.__hooksAll,hookProp,hook);if(this.__hooksAllTmp)ProxyBase._addHookAll_to(this.__hooksAllTmp,hookProp,hook)}static _addHookAll_to(obj,hookProp,hook){(obj[hookProp]=obj[hookProp]||[]).push(hook)}_removeHook(hookProp,prop,hook){ProxyBase._removeHook_from(this.__hooks,hookProp,prop,hook);if(this.__hooksTmp)ProxyBase._removeHook_from(this.__hooksTmp,hookProp,prop,hook)}static _removeHook_from(obj,hookProp,prop,hook){if(obj[hookProp]&&obj[hookProp][prop]){const ix=obj[hookProp][prop].findIndex((hk=>hk===hook));if(~ix)obj[hookProp][prop].splice(ix,1)}}_removeHookAll(hookProp,hook){ProxyBase._removeHookAll_from(this.__hooksAll,hookProp,hook);if(this.__hooksAllTmp)ProxyBase._removeHook_from(this.__hooksAllTmp,hookProp,hook)}static _removeHookAll_from(obj,hookProp,hook){if(obj[hookProp]){const ix=obj[hookProp].findIndex((hk=>hk===hook));if(~ix)obj[hookProp].splice(ix,1)}}_resetHooks(hookProp){if(hookProp!==undefined)delete this.__hooks[hookProp];else Object.keys(this.__hooks).forEach((prop=>delete this.__hooks[prop]))}_resetHooksAll(hookProp){if(hookProp!==undefined)delete this.__hooksAll[hookProp];else Object.keys(this.__hooksAll).forEach((prop=>delete this.__hooksAll[prop]))}_saveHookCopiesTo(obj){this.__hooksTmp=obj}_saveHookAllCopiesTo(obj){this.__hooksAllTmp=obj}_proxyAssign(hookProp,proxyProp,underProp,toObj,isOverwrite){const oldKeys=Object.keys(this[proxyProp]);const nuKeys=new Set(Object.keys(toObj));const dirtyKeys=new Set;if(isOverwrite){oldKeys.forEach((k=>{if(!nuKeys.has(k)&&this[underProp]!==undefined){delete this[underProp][k];dirtyKeys.add(k)}}))}nuKeys.forEach((k=>{if(!CollectionUtil.deepEquals(this[underProp][k],toObj[k])){this[underProp][k]=toObj[k];dirtyKeys.add(k)}}));dirtyKeys.forEach((k=>{if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hk=>hk(k,this[underProp][k])));if(this.__hooks[hookProp]&&this.__hooks[hookProp][k])this.__hooks[hookProp][k].forEach((hk=>hk(k,this[underProp][k])))}))}_proxyAssignSimple(hookProp,toObj,isOverwrite){return this._proxyAssign(hookProp,`_${hookProp}`,`__${hookProp}`,toObj,isOverwrite)}}class UiUtil{static strToInt(string,fallbackEmpty=0,opts){return UiUtil._strToNumber(string,fallbackEmpty,opts,true)}static strToNumber(string,fallbackEmpty=0,opts){return UiUtil._strToNumber(string,fallbackEmpty,opts,false)}static _strToNumber(string,fallbackEmpty=0,opts,isInt){opts=opts||{};let out;string=string.trim();if(!string)out=fallbackEmpty;else{const num=UiUtil._parseStrAsNumber(string,isInt);out=isNaN(num)||!isFinite(num)?opts.fallbackOnNaN!==undefined?opts.fallbackOnNaN:0:num}if(opts.max!=null)out=Math.min(out,opts.max);if(opts.min!=null)out=Math.max(out,opts.min);return out}static strToBool(string,fallbackEmpty=null,opts){opts=opts||{};if(!string)return fallbackEmpty;string=string.trim().toLowerCase();if(!string)return fallbackEmpty;return string==="true"?true:string==="false"?false:opts.fallbackOnNaB}static intToBonus(int){return`${int>=0?"+":""}${int}`}static getEntriesAsText(entryArray){if(!entryArray||!entryArray.length)return"";const lines=JSON.stringify(entryArray,null,2).replace(/^\s*\[/,"").replace(/]\s*$/,"").split("\n").filter((it=>it.trim())).map((it=>{const trim=it.replace(/^\s\s/,"");const mQuotes=/^"(.*?)",?$/.exec(trim);if(mQuotes)return mQuotes[1];else return`  ${trim}`}));let out="";const len=lines.length;for(let i=0;i<len;++i){out+=lines[i];if(i<len-1){out+="\n";if(!lines[i].startsWith("  "))out+="\n"}}return out}static getTextAsEntries(text){try{const lines=[];text.split("\n").filter((it=>it.trim())).forEach((it=>{if(/^\s/.exec(it))lines.push(it);else lines.push(`"${it.replace(/"/g,`\\"`)}",`)}));if(lines.length)lines[lines.length-1]=lines.last().replace(/^(.*?),?$/,"$1");return JSON.parse(`[${lines.join("")}]`)}catch(e){const lines=text.split("\n").filter((it=>it.trim()));const slice=lines.join(" \\ ").substring(0,30);JqueryUtil.doToast({content:`Could not parse entries! Error was: ${e.message}<br>Text was: ${slice}${slice.length===30?"...":""}`,type:"danger"});return lines}}static getShowModal(opts){opts=opts||{};UiUtil._initModalEscapeHandler();UiUtil._initModalMouseupHandlers();$(document.activeElement).blur();const pHandleCloseClick=async(isDataEntered,...args)=>{if(opts.cbClose)await opts.cbClose(isDataEntered,...args);if(opts.isIndestructible)$overlay.detach();else $overlay.remove();doTeardown()};const doTeardown=()=>{UiUtil._popFromModalStack(modalStackMeta);if(!UiUtil._MODAL_STACK.length)document.body.classList.remove(`ui-modal__body-active`)};const doOpen=()=>{$overlay.appendTo(document.body);document.body.classList.add(`ui-modal__body-active`)};const $overlay=$(`<div class="ui-modal__overlay">`);if(opts.zIndex!=null)$overlay.css({zIndex:opts.zIndex});if(opts.overlayColor!=null)$overlay.css({backgroundColor:opts.overlayColor});const $overlayBlind=opts.isFullscreenModal?$(`<div class="ui-modal__overlay-blind w-100 h-100 flex-col"></div>`).appendTo($overlay):null;const $scroller=$(`<div class="ui-modal__scroller flex-col"></div>`);const modalWindowClasses=[opts.isWidth100?`w-100`:"",opts.isHeight100?"h-100":"",opts.isUncappedHeight?"ui-modal__inner--uncap-height":"",opts.isUncappedWidth?"ui-modal__inner--uncap-width":"",opts.isMinHeight0?`ui-modal__inner--no-min-height`:"",opts.isMaxWidth640p?`ui-modal__inner--max-width-640p`:"",opts.isFullscreenModal?`ui-modal__inner--mode-fullscreen my-0 pt-0`:"",opts.hasFooter?`pb-0`:""].filter(Boolean);const $btnCloseModal=opts.isFullscreenModal?$(`<button class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-remove"></span></button>`).click((()=>pHandleCloseClick(false))):null;const $modalFooter=opts.hasFooter?$(`<div class="no-shrink w-100 flex-col ui-modal__footer ${opts.isFullscreenModal?`ui-modal__footer--fullscreen mt-1`:""}"></div>`):null;const $modal=$$`<div class="ui-modal__inner flex-col dropdown-menu ${modalWindowClasses.join(" ")}">
			${!opts.isEmpty&&opts.title?$$`<div class="split-v-center no-shrink ${opts.isHeaderBorder?`ui-modal__header--border`:""} ${opts.isFullscreenModal?`ui-modal__header--fullscreen mb-1`:""}">
				${opts.title?`<h4 class="my-2">${opts.title.escapeQuotes()}</h4>`:""}${opts.$titleSplit||""}${$btnCloseModal}
			</div>`:null}

			${!opts.isEmpty?$scroller:null}

			${$modalFooter}
		</div>`.appendTo(opts.isFullscreenModal?$overlayBlind:$overlay);$overlay.mouseup((evt=>{if(evt.target!==$overlay[0])return;if(evt.target!==UiUtil._MODAL_LAST_MOUSEDOWN)return;if(opts.isPermanent)return;evt.stopPropagation();evt.preventDefault();return pHandleCloseClick(false)}));if(!opts.isClosed)doOpen();const modalStackMeta={isPermanent:opts.isPermanent,pHandleCloseClick:pHandleCloseClick,doTeardown:doTeardown};if(!opts.isClosed)UiUtil._pushToModalStack(modalStackMeta);const out={$modal:$modal,$modalInner:$scroller,$modalFooter:$modalFooter,doClose:pHandleCloseClick,doTeardown:doTeardown};if(opts.isIndestructible||opts.isClosed){out.doOpen=()=>{UiUtil._pushToModalStack(modalStackMeta);doOpen()}}return out}static _pushToModalStack(modalStackMeta){if(!UiUtil._MODAL_STACK.includes(modalStackMeta)){UiUtil._MODAL_STACK.push(modalStackMeta)}}static _popFromModalStack(modalStackMeta){const ixStack=UiUtil._MODAL_STACK.indexOf(modalStackMeta);if(~ixStack)UiUtil._MODAL_STACK.splice(ixStack,1)}static _initModalEscapeHandler(){if(UiUtil._MODAL_STACK)return;UiUtil._MODAL_STACK=[];document.addEventListener("keydown",(evt=>{if(evt.which!==27)return;if(!UiUtil._MODAL_STACK.length)return;if(EventUtil.isInInput(evt))return;const outerModalMeta=UiUtil._MODAL_STACK.last();if(!outerModalMeta)return;evt.stopPropagation();if(!outerModalMeta.isPermanent)return outerModalMeta.pHandleCloseClick(false)}))}static _initModalMouseupHandlers(){document.addEventListener("mousedown",(evt=>{UiUtil._MODAL_LAST_MOUSEDOWN=evt.target}))}static addModalSep($modalInner){$modalInner.append(`<hr class="ui-modal__row-sep">`)}static $getAddModalRow($modalInner,tag="div"){return $(`<${tag} class="ui-modal__row"></${tag}>`).appendTo($modalInner)}static $getAddModalRowHeader($modalInner,headerText,opts){opts=opts||{};const $row=UiUtil.$getAddModalRow($modalInner,"h5").addClass("bold");if(opts.$eleRhs)$$`<div class="split flex-v-center w-100 pr-1"><span>${headerText}</span>${opts.$eleRhs}</div>`.appendTo($row);else $row.text(headerText);if(opts.helpText)$row.title(opts.helpText);return $row}static $getAddModalRowCb($modalInner,labelText,objectWithProp,propName,helpText){const $row=UiUtil.$getAddModalRow($modalInner,"label").addClass(`ui-modal__row--cb`);if(helpText)$row.title(helpText);$row.append(`<span>${labelText}</span>`);const $cb=$(`<input type="checkbox">`).appendTo($row).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).prop("checked",objectWithProp[propName]).on("change",(()=>objectWithProp[propName]=$cb.prop("checked")));return $cb}static $getAddModalRowSel($modalInner,labelText,objectWithProp,propName,values,opts){opts=opts||{};const $row=UiUtil.$getAddModalRow($modalInner,"label").addClass(`ui-modal__row--sel`);if(opts.helpText)$row.title(opts.helpText);$row.append(`<span>${labelText}</span>`);const $sel=$(`<select class="form-control input-xs w-30">`).appendTo($row);values.forEach(((val,i)=>$(`<option value="${i}"></option>`).text(opts.fnDisplay?opts.fnDisplay(val):val).appendTo($sel)));const ix=values.indexOf(objectWithProp[propName]);$sel.val(`${~ix?ix:0}`).change((()=>objectWithProp[propName]=values[$sel.val()]));return $sel}static _parseStrAsNumber(str,isInt){const wrpTree=Renderer.dice.lang.getTree3(str);if(!wrpTree)return NaN;const out=wrpTree.tree.evl({});if(!isNaN(out)&&isInt)return Math.round(out);return out}static bindTypingEnd({$ipt:$ipt,fnKeyup:fnKeyup,fnKeypress:fnKeypress,fnKeydown:fnKeydown,fnClick:fnClick}={}){let timerTyping;$ipt.on("keyup search paste",(evt=>{clearTimeout(timerTyping);timerTyping=setTimeout((()=>{fnKeyup(evt)}),UiUtil.TYPE_TIMEOUT_MS)})).on("keypress",(e=>{if(fnKeypress)fnKeypress(e)})).on("keydown",(evt=>{if(fnKeydown)fnKeydown(evt);clearTimeout(timerTyping)})).on("click",(()=>{if(fnClick)fnClick()}))}static async pDoForceFocus(ele,{timeout:timeout=250}={}){if(!ele)return;ele.focus();const forceFocusStart=Date.now();while(Date.now()<forceFocusStart+timeout&&document.activeElement!==ele){await MiscUtil.pDelay(33);ele.focus()}}}UiUtil.SEARCH_RESULTS_CAP=75;UiUtil.TYPE_TIMEOUT_MS=100;UiUtil._MODAL_STACK=null;UiUtil._MODAL_LAST_MOUSEDOWN=null;class ListUiUtil{static handleSelectClick(list,item,evt,opts){opts=opts||{};evt.preventDefault();evt.stopPropagation();if(evt&&evt.shiftKey&&list.__firstListSelection){if(list.__lastListSelection===item){const cb=this._getCb(item,opts);this._updateCb(item,opts,!cb.checked)}else if(list.__firstListSelection===item&&list.__lastListSelection){const ix1=list.visibleItems.indexOf(list.__firstListSelection);const ix2=list.visibleItems.indexOf(list.__lastListSelection);const[ixStart,ixEnd]=[ix1,ix2].sort(SortUtil.ascSort);for(let i=ixStart;i<=ixEnd;++i){const it=list.visibleItems[i];this._updateCb(it,opts,false)}this._updateCb(item,opts)}else{const ix1=list.visibleItems.indexOf(list.__firstListSelection);const ix2=list.visibleItems.indexOf(item);const ix2Prev=list.__lastListSelection?list.visibleItems.indexOf(list.__lastListSelection):null;const[ixStart,ixEnd]=[ix1,ix2].sort(SortUtil.ascSort);for(let i=ixStart;i<=ixEnd;++i){const it=list.visibleItems[i];this._updateCb(it,opts)}if(ix2Prev!=null){if(ix2Prev>ixEnd){for(let i=ixEnd+1;i<=ix2Prev;++i){const it=list.visibleItems[i];this._updateCb(it,opts,false)}}else if(ix2Prev<ixStart){for(let i=ix2Prev;i<ixStart;++i){const it=list.visibleItems[i];this._updateCb(it,opts,false)}}}}list.__lastListSelection=item}else{const cbMaster=this._getCb(item,opts);if(cbMaster){cbMaster.checked=!cbMaster.checked;if(opts.fnOnSelectionChange)opts.fnOnSelectionChange(item,cbMaster.checked);if(!opts.isNoHighlightSelection){if(cbMaster.checked)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}}else{if(!opts.isNoHighlightSelection){item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}}list.__firstListSelection=item;list.__lastListSelection=null}}static handleSelectClickRadio(list,item,evt){evt.preventDefault();evt.stopPropagation();list.items.forEach((it=>{if(it===item){it.data.cbSel.checked=true;it.ele.classList.add("list-multi-selected")}else{it.data.cbSel.checked=false;it.ele.classList.remove("list-multi-selected")}}))}static _getCb(item,opts){return opts.fnGetCb?opts.fnGetCb(item):item.data.cbSel}static _updateCb(item,opts,toVal=true){const cbSlave=this._getCb(item,opts);if(cbSlave){cbSlave.checked=toVal;if(opts.fnOnSelectionChange)opts.fnOnSelectionChange(item,toVal)}if(!opts.isNoHighlightSelection){if(toVal)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}}static bindSelectAllCheckbox($cbAll,list){$cbAll.change((()=>{const isChecked=$cbAll.prop("checked");list.visibleItems.forEach((item=>{if(item.data.cbSel)item.data.cbSel.checked=isChecked;if(isChecked)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}))}))}static bindPreviewButton(renderFn,allData,item,btnShowHidePreview){btnShowHidePreview.addEventListener("click",(evt=>{const entity=allData[item.ix];const elePreviewWrp=this.getOrAddListItemPreviewLazy(item);this.handleClickBtnShowHideListPreview(evt,renderFn,entity,btnShowHidePreview,elePreviewWrp)}))}static handleClickBtnShowHideListPreview(evt,renderFn,entity,btnShowHidePreview,elePreviewWrp){evt.stopPropagation();const nxtText=btnShowHidePreview.innerHTML.trim()===this.HTML_GLYPHICON_EXPAND?this.HTML_GLYPHICON_CONTRACT:this.HTML_GLYPHICON_EXPAND;elePreviewWrp.classList.toggle("ve-hidden",nxtText===this.HTML_GLYPHICON_EXPAND);btnShowHidePreview.innerHTML=nxtText;const elePreviewWrpInner=elePreviewWrp.lastElementChild;if(elePreviewWrpInner.innerHTML)return;elePreviewWrpInner.addEventListener("click",(evt=>{evt.stopPropagation()}));$(elePreviewWrpInner).empty();$$`<div class="pf2-stat stats">${renderFn(entity)}</div>`.appendTo(elePreviewWrpInner)}static getOrAddListItemPreviewLazy(item){let elePreviewWrp;if(item.ele.children.length===1){elePreviewWrp=e_({tag:"div",clazz:"ve-hidden flex",children:[e_({tag:"div",clazz:"col-0-5"}),e_({tag:"div",clazz:"col-11-5 ui-list__wrp-preview py-2 pr-2"})]}).appendTo(item.ele)}else elePreviewWrp=item.ele.lastElementChild;return elePreviewWrp}static bindPreviewAllButton($btnAll,list){$btnAll.click((async()=>{const nxtHtml=$btnAll.html()===ListUiUtil.HTML_GLYPHICON_EXPAND?ListUiUtil.HTML_GLYPHICON_CONTRACT:ListUiUtil.HTML_GLYPHICON_EXPAND;if(nxtHtml===ListUiUtil.HTML_GLYPHICON_CONTRACT&&list.visibleItems.length>500){const isSure=await InputUiUtil.pGetUserBoolean({title:"Are You Sure?",htmlDescription:`You are about to expand ${list.visibleItems.length} rows. This may seriously degrade performance.<br>Are you sure you want to continue?`});if(!isSure)return}$btnAll.html(nxtHtml);list.visibleItems.forEach((listItem=>{if(listItem.data.btnShowHidePreview.innerHTML!==nxtHtml)listItem.data.btnShowHidePreview.click()}))}))}}ListUiUtil.HTML_GLYPHICON_EXPAND=`[+]`;ListUiUtil.HTML_GLYPHICON_CONTRACT=`[‒]`;class TabUiUtil{static decorate(obj){obj.__tabMetas={};obj._resetTabs=function(tabGroup){tabGroup=tabGroup||"_default";(obj.__tabMetas[tabGroup]||[]).filter(Boolean).forEach((tab=>tab.fnCleanup()));obj.__tabMetas[tabGroup]=[]};obj._setActiveTab=function(tab,tabGroup){tabGroup=tabGroup||"_default";const activeProp=`activeTab__${tabGroup}`;const tabMeta=obj.__tabMetas[tabGroup];const ix=tabMeta.indexOf(tab);if(~ix){const _proxyProp=`_${tab.proxyProp}`;obj[_proxyProp][activeProp]=ix}};obj._hasPrevTab=function(proxyProp,tabGroup){return obj.__hasTab(proxyProp,tabGroup,-1)};obj._hasNextTab=function(proxyProp,tabGroup){return obj.__hasTab(proxyProp,tabGroup,1)};obj.__hasTab=function(proxyProp,tabGroup,offset){tabGroup=tabGroup||"_default";const activeProp=`activeTab__${tabGroup}`;const _proxyProp=`_${proxyProp}`;const ixActive=obj[_proxyProp][activeProp];return!!(obj.__tabMetas[tabGroup]&&obj.__tabMetas[tabGroup][ixActive+offset])};obj._doSwitchToPrevTab=function(proxyProp,tabGroup){return obj.__doSwitchToTab(proxyProp,tabGroup,-1)};obj._doSwitchToNextTab=function(proxyProp,tabGroup){return obj.__doSwitchToTab(proxyProp,tabGroup,1)};obj.__doSwitchToTab=function(proxyProp,tabGroup,offset){if(!obj.__hasTab(proxyProp,tabGroup,offset))return;tabGroup=tabGroup||"_default";const activeProp=`activeTab__${tabGroup}`;const _proxyProp=`_${proxyProp}`;obj[_proxyProp][activeProp]=obj[_proxyProp][activeProp]+offset};obj._addHookActiveTab=function(proxyProp,hk,opts){opts=opts||{};const tabGroup=opts.tabGroup||"_default";const activeProp=`activeTab__${tabGroup}`;this._addHook(proxyProp,activeProp,hk)};obj._getTab=function(ix,name,proxyProp,opts){const tabGroup=opts.tabGroup||"_default";const activeProp=`activeTab__${tabGroup}`;const _proxyProp=`_${proxyProp}`;const __proxyProp=`__${proxyProp}`;obj[__proxyProp][activeProp]=obj[__proxyProp][activeProp]||0;const $btnTab=$(`<button class="btn btn-default ui-tab__btn-tab-head ${opts.btnCss?opts.btnCss:""}">${name}</button>`).click((()=>obj[_proxyProp][activeProp]=ix));const $wrpTab=$(`<div class="ui-tab__wrp-tab-body ve-hidden ${opts.hasBorder?"ui-tab__wrp-tab-body--border":""} ${opts.hasBackground?"ui-tab__wrp-tab-body--background":""}"></div>`);const hkActiveTab=(prop,ixActive,prevIxActive)=>{$btnTab.toggleClass("ui-tab__btn-tab-head--active",ixActive===ix);$wrpTab.toggleVe(ixActive===ix);if(opts.cbTabChange){if(prevIxActive===ix&&ixActive!==ix)opts.cbTabChange()}};obj._addHook(proxyProp,activeProp,hkActiveTab);hkActiveTab(activeProp,obj[_proxyProp][activeProp]);const tab={ix:ix,$btnTab:$btnTab,$wrpTab:$wrpTab,proxyProp:proxyProp,fnCleanup:()=>{obj._removeHook(proxyProp,activeProp,hkActiveTab)}};(obj.__tabMetas[tabGroup]=obj.__tabMetas[tabGroup]||[])[ix]=tab;return tab}}}class SearchUiUtil{static async pDoGlobalInit(){elasticlunr.clearStopWords()}static _isNoHoverCat(cat){return SearchUiUtil.NO_HOVER_CATEGORIES.has(cat)}static async pGetContentIndices(options){options=options||{};const availContent={};const data=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index.json`));const additionalData={};if(options.additionalIndices){await Promise.all(options.additionalIndices.map((async add=>{additionalData[add]=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index-${add}.json`));const maxId=additionalData[add].last().id;const brewIndex=await BrewUtil.pGetAdditionalSearchIndices(maxId,add);if(brewIndex.length)additionalData[add]=additionalData[add].concat(brewIndex)})))}const alternateData={};if(options.alternateIndices){await Promise.all(options.alternateIndices.map((async alt=>{alternateData[alt]=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index-alt-${alt}.json`));const maxId=alternateData[alt].last().id;const brewIndex=await BrewUtil.pGetAlternateSearchIndices(maxId,alt);if(brewIndex.length)alternateData[alt]=alternateData[alt].concat(brewIndex)})))}const fromDeepIndex=d=>d.d;availContent.ALL=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(availContent.ALL);let ixMax=0;const initIndexForFullCat=doc=>{if(!availContent[doc.cf]){availContent[doc.cf]=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(availContent[doc.cf])}};const handleDataItem=(d,isAlternate)=>{if(SearchUiUtil._isNoHoverCat(d.c)||fromDeepIndex(d))return;d.cf=d.c===Parser.CAT_ID_CREATURE?"Creature":Parser.pageCategoryToFull(d.c);if(isAlternate)d.cf=`alt_${d.cf}`;initIndexForFullCat(d);if(!isAlternate)availContent.ALL.addDoc(d);availContent[d.cf].addDoc(d);ixMax=Math.max(ixMax,d.id)};data.forEach((d=>handleDataItem(d)));Object.values(additionalData).forEach((arr=>arr.forEach((d=>handleDataItem(d)))));Object.values(alternateData).forEach((arr=>arr.forEach((d=>handleDataItem(d,true)))));Omnisearch.highestId=Math.max(ixMax,Omnisearch.highestId);const brewIndex=await BrewUtil.pGetSearchIndex();brewIndex.forEach((d=>{if(SearchUiUtil._isNoHoverCat(d.c)||fromDeepIndex(d))return;d.cf=Parser.pageCategoryToFull(d.c);d.cf=d.c===Parser.CAT_ID_CREATURE?"Creature":Parser.pageCategoryToFull(d.c);initIndexForFullCat(d);availContent.ALL.addDoc(d);availContent[d.cf].addDoc(d)}));return availContent}}SearchUiUtil.NO_HOVER_CATEGORIES=new Set([Parser.CAT_ID_ADVENTURE,Parser.CAT_ID_BOOK,Parser.CAT_ID_QUICKREF,Parser.CAT_ID_PAGE]);class SearchWidget{static getSearchNoResults(){return`<div class="ui-search__message"><i>No results.</i></div>`}static getSearchLoading(){return`<div class="ui-search__message"><i>•••</i></div>`}static getSearchEnter(){return`<div class="ui-search__message"><i>Enter a search.</i></div>`}static bindAutoSearch($iptSearch,opts){UiUtil.bindTypingEnd({$ipt:$iptSearch,fnKeyup:()=>{opts.fnSearch&&opts.fnSearch()},fnKeypress:evt=>{if(evt.which===13){opts.flags.doClickFirst=true;opts.fnSearch&&opts.fnSearch()}},fnKeydown:evt=>{if(opts.flags.isWait){opts.flags.isWait=false;opts.fnShowWait&&opts.fnShowWait()}else{switch(evt.which){case 40:{if(opts.$ptrRows&&opts.$ptrRows._[0]){evt.preventDefault();opts.$ptrRows._[0].focus()}break}case 13:{if(opts.$ptrRows&&opts.$ptrRows._[0]){evt.preventDefault();opts.$ptrRows._[0].click()}break}}}},fnClick:()=>{if(opts.fnSearch&&$iptSearch.val()&&$iptSearch.val().trim().length)opts.fnSearch()}})}static bindRowHandlers({result:result,$row:$row,$ptrRows:$ptrRows,fnHandleClick:fnHandleClick}){return $row.keydown((evt=>{switch(evt.which){case 13:{return fnHandleClick(result)}case 38:{evt.preventDefault();const ixRow=$ptrRows._.indexOf($row);const $prev=$ptrRows._[ixRow-1];if($prev)$prev.focus();else $ptrRows.focus();break}case 40:{evt.preventDefault();const ixRow=$ptrRows._.indexOf($row);const $nxt=$ptrRows._[ixRow+1];if($nxt)$nxt.focus();break}}})).click((()=>fnHandleClick(result)))}static docToPageSourceHash(doc){const page=UrlUtil.categoryToHoverPage(doc.c);const source=doc.s;const hash=doc.u;return{page:page,source:source,hash:hash}}constructor(indexes,cbSearch,options){options=options||{};this._indexes=indexes;this._cat=options.defaultCategory||"ALL";this._cbSearch=cbSearch;this._fnFilterResults=options.fnFilterResults||null;this._searchOptions=options.searchOptions||null;this._fnTransform=options.fnTransform||null;this._flags={doClickFirst:false,isWait:false};this._$ptrRows={_:[]};this._$selCat=null;this._$iptSearch=null;this._$wrpResults=null;this._$rendered=null}static pDoGlobalInit(){if(!SearchWidget.P_LOADING_CONTENT){SearchWidget.P_LOADING_CONTENT=(async()=>{Object.assign(SearchWidget.CONTENT_INDICES,await SearchUiUtil.pGetContentIndices({additionalIndices:["item"],alternateIndices:["spell"]}))})()}return SearchWidget.P_LOADING_CONTENT}__getSearchOptions(){return this._searchOptions||{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true}}__$getRow(r){return $(`<div class="ui-search__row" tabindex="0">\n\t\t\t<span>${r.doc.n}</span>\n\t\t\t<span>${r.doc.s?`<i title="${Parser.sourceJsonToFull(r.doc.s)}">${Parser.sourceJsonToAbv(r.doc.s)}${r.doc.p?` p${r.doc.p}`:""}</i>`:""}</span>\n\t\t</div>`)}static __getAllTitle(){return"All Categories"}static __getCatOptionText(it){return it}get $wrpSearch(){if(!this._$rendered)this._render();return this._$rendered}__showMsgInputRequired(){this._flags.isWait=true;this._$wrpResults.empty().append(SearchWidget.getSearchEnter())}__showMsgWait(){this._$wrpResults.empty().append(SearchWidget.getSearchLoading())}__showMsgNoResults(){this._flags.isWait=true;this._$wrpResults.empty().append(SearchWidget.getSearchNoResults())}__doSearch(){const searchInput=this._$iptSearch.val().trim();const index=this._indexes[this._cat];const results=index.search(searchInput,this.__getSearchOptions());const{toProcess:toProcess,resultCount:resultCount}=(()=>{if(results.length){if(this._fnFilterResults){const filtered=results.filter((it=>this._fnFilterResults(it.doc)));return{toProcess:filtered.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:filtered.length}}else{return{toProcess:results.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:results.length}}}else{if(searchInput.trim()){return{toProcess:[],resultCount:0}}if(this._fnFilterResults){const filtered=Object.values(index.documentStore.docs).filter((it=>this._fnFilterResults(it))).map((it=>({doc:it})));return{toProcess:filtered.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:filtered.length}}else{return{toProcess:Object.values(index.documentStore.docs).slice(0,UiUtil.SEARCH_RESULTS_CAP).map((it=>({doc:it}))),resultCount:Object.values(index.documentStore.docs).length}}}})();this._$wrpResults.empty();this._$ptrRows._=[];if(resultCount){const handleClick=r=>{if(this._fnTransform)this._cbSearch(this._fnTransform(r.doc));else this._cbSearch(r.doc)};if(this._flags.doClickFirst){handleClick(toProcess[0]);this._flags.doClickFirst=false;return}const res=toProcess.slice(0,UiUtil.SEARCH_RESULTS_CAP);res.forEach((r=>{const $row=this.__$getRow(r).appendTo(this._$wrpResults);SearchWidget.bindRowHandlers({result:r,$row:$row,$ptrRows:this._$ptrRows,fnHandleClick:handleClick});this._$ptrRows._.push($row)}));if(resultCount>UiUtil.SEARCH_RESULTS_CAP){const diff=resultCount-UiUtil.SEARCH_RESULTS_CAP;this._$wrpResults.append(`<div class="ui-search__row ui-search__row--readonly">...${diff} more result${diff===1?" was":"s were"} hidden. Refine your search!</div>`)}}else{if(!searchInput.trim())this.__showMsgInputRequired();else this.__showMsgNoResults()}}_render(){if(!this._$rendered){this._$rendered=$(`<div class="ui-search__wrp-output"></div>`);const $wrpControls=$(`<div class="ui-search__wrp-controls"></div>`).appendTo(this._$rendered);this._$selCat=$(`<select class="form-control ui-search__sel-category">\n\t\t\t\t<option value="ALL">${SearchWidget.__getAllTitle()}</option>\n\t\t\t\t${Object.keys(this._indexes).sort().filter((it=>it!=="ALL")).map((it=>`<option value="${it}">${SearchWidget.__getCatOptionText(it)}</option>`)).join("")}\n\t\t\t</select>`).appendTo($wrpControls).toggle(Object.keys(this._indexes).length!==1).on("change",(()=>{this._cat=this._$selCat.val();this.__doSearch()}));this._$iptSearch=$(`<input class="ui-search__ipt-search search form-control" autocomplete="off" placeholder="Search...">`).appendTo($wrpControls);this._$wrpResults=$(`<div class="ui-search__wrp-results"></div>`).appendTo(this._$rendered);let lastSearchTerm="";SearchWidget.bindAutoSearch(this._$iptSearch,{flags:this._flags,fnSearch:this.__doSearch.bind(this),fnShowWait:this.__showMsgWait.bind(this),$ptrRows:this._$ptrRows});this._$iptSearch.keydown((evt=>{if(evt.key==="Escape")this._$iptSearch.blur();if(evt.which!==13){if(lastSearchTerm==="")this.__showMsgWait();lastSearchTerm=this._$iptSearch.val()}}));this.__doSearch()}}doFocus(){this._$iptSearch.focus()}static async pGetUserAdventureSearch(opts){await SearchWidget.pLoadCustomIndex("entity_Adventures",`${Renderer.get().baseUrl}data/adventures.json`,"adventure",Parser.CAT_ID_ADVENTURE,UrlUtil.PG_ADVENTURE,"adventures");return SearchWidget.pGetUserEntitySearch("Select Adventure","entity_Adventures",opts)}static async pGetUserEntitySearch(title,indexName,opts){opts=opts||{};return new Promise((resolve=>{const searchOpts={defaultCategory:indexName};if(opts.fnFilterResults)searchOpts.fnFilterResults=opts.fnFilterResults;if(opts.fnTransform)searchOpts.fnTransform=opts.fnTransform;const searchWidget=new SearchWidget({[indexName]:SearchWidget.CONTENT_INDICES[indexName]},(docOrTransformed=>{doClose(false);resolve(docOrTransformed)}),searchOpts);const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:title,cbClose:doResolve=>{searchWidget.$wrpSearch.detach();if(doResolve)resolve(null)}});$modalInner.append(searchWidget.$wrpSearch);searchWidget.doFocus()}))}static async pLoadCustomIndex(contentIndexName,dataSource,jsonProp,catId,page,errorName){if(SearchWidget.P_LOADING_INDICES[contentIndexName])await SearchWidget.P_LOADING_INDICES[contentIndexName];else{const doClose=SearchWidget._showLoadingModal();try{SearchWidget.P_LOADING_INDICES[contentIndexName]=SearchWidget.CONTENT_INDICES[contentIndexName]=await SearchWidget._pGetIndex(dataSource,jsonProp,catId,page);SearchWidget.P_LOADING_INDICES[contentIndexName]=null}catch(e){JqueryUtil.doToast({type:"danger",content:`Could not load ${errorName}! ${VeCt.STR_SEE_CONSOLE}`});throw e}finally{doClose()}}}static async _pGetIndex(dataSource,prop,catId,page){const index=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));const[featJson,homebrew]=await Promise.all([typeof dataSource==="string"?DataUtil.loadJSON(dataSource):dataSource(),BrewUtil.pAddBrewData()]);featJson[prop].concat(homebrew[prop]||[]).forEach(((it,i)=>index.addDoc({id:i,c:catId,cf:Parser.pageCategoryToFull(catId),h:1,n:it.name,p:it.page,s:it.source,u:UrlUtil.URL_TO_HASH_BUILDER[page](it)})));return index}static _showLoadingModal(){const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isPermanent:true});$(`<div class="flex-vh-center w-100 h-100"><span class="dnd-font italic ve-muted">Loading...</span></div>`).appendTo($modalInner);return doClose}}SearchWidget.P_LOADING_CONTENT=null;SearchWidget.CONTENT_INDICES={};SearchWidget.P_LOADING_INDICES={};class InputUiUtil{static async pGetUserNumber(opts){opts=opts||{};let defaultVal=opts.default!==undefined?opts.default:null;if(opts.storageKey_default){const prev=await(opts.isGlobal_default?StorageUtil.pGet(opts.storageKey_default):StorageUtil.pGetForPage(opts.storageKey_default));if(prev!=null)defaultVal=prev}return new Promise((resolve=>{const $iptNumber=$(`<input class="form-control mb-2 text-right" ${opts.min?`min="${opts.min}"`:""} ${opts.max?`max="${opts.max}"`:""}>`).keydown((evt=>{if(evt.key==="Escape"){$iptNumber.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));if(defaultVal!==undefined)$iptNumber.val(defaultVal);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter a Number",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptNumber.val();if(!raw.trim())return resolve(null);let num=UiUtil.strToInt(raw);if(opts.min)num=Math.max(opts.min,num);if(opts.max)num=Math.min(opts.max,num);if(opts.int)num=Math.round(num);if(opts.storageKey_default){opts.isGlobal_default?StorageUtil.pSet(opts.storageKey_default,num):StorageUtil.pSetForPage(opts.storageKey_default,num)}resolve(num)}});if(opts.$elePre)opts.$elePre.appendTo($modalInner);$iptNumber.appendTo($modalInner);if(opts.$elePost)opts.$elePost.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptNumber.focus();$iptNumber.select()}))}static async pGetUserBoolean(opts){opts=opts||{};if(opts.storageKey){const prev=await(opts.isGlobal?StorageUtil.pGet(opts.storageKey):StorageUtil.pGetForPage(opts.storageKey));if(prev!=null)return prev}return new Promise((resolve=>{const $btnTrueRemember=opts.textYesRemember?$(`<button class="btn btn-primary flex-v-center mr-3"><span class="glyphicon glyphicon-ok mr-2"></span><span>${opts.textYesRemember}</span></button>`).click((()=>{doClose(true,true);if(opts.fnRemember){opts.fnRemember(true)}else{opts.isGlobal?StorageUtil.pSet(opts.storageKey,true):StorageUtil.pSetForPage(opts.storageKey,true)}})):null;const $btnTrue=$(`<button class="btn btn-primary flex-v-center mr-3"><span class="glyphicon glyphicon-ok mr-2"></span><span>${opts.textYes||"OK"}</span></button>`).click((()=>doClose(true,true)));const $btnFalse=$(`<button class="btn btn-default btn-sm flex-v-center"><span class="glyphicon glyphicon-remove mr-2"></span><span>${opts.textNo||"Cancel"}</span></button>`).click((()=>doClose(true,false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Choose",isMinHeight0:true,cbClose:(isDataEntered,value)=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);if(value==null)throw new Error(`Callback must receive a value!`);resolve(value)}});if(opts.htmlDescription&&opts.htmlDescription.trim())$$`<div class="flex w-100 mb-1">${opts.htmlDescription}</div>`.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right py-1 px-1">${$btnTrueRemember}${$btnTrue}${$btnFalse}${$btnSkip}</div>`.appendTo($modalInner);$btnTrue.focus();$btnTrue.select()}))}static pGetUserEnum(opts){opts=opts||{};return new Promise((resolve=>{const $selEnum=$(`<select class="form-control mb-2"><option value="-1" disabled>${opts.placeholder||"Select..."}</option></select>`);if(opts.isAllowNull)$(`<option value="-1"></option>`).text(opts.fnDisplay?opts.fnDisplay(null,-1):"(None)").appendTo($selEnum);opts.values.forEach(((v,i)=>$(`<option value="${i}"></option>`).text(opts.fnDisplay?opts.fnDisplay(v,i):v).appendTo($selEnum)));if(opts.default!=null)$selEnum.val(opts.default);else $selEnum[0].selectedIndex=0;const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select an Option",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const ix=Number($selEnum.val());if(!~ix)return resolve(null);if(opts.fnGetExtraState){const out={extraState:opts.fnGetExtraState()};if(opts.isResolveItem)out.item=opts.values[ix];else out.ix=ix;resolve(out)}else resolve(opts.isResolveItem?opts.values[ix]:ix)}});$selEnum.appendTo($modalInner);if(opts.$elePost)opts.$elePost.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$selEnum.focus()}))}static pGetUserMultipleChoice(opts){return new Promise((resolve=>{const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const prop="formData";const initialState={};if(opts.defaults)opts.defaults.forEach((ix=>initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsActive(prop,ix)]=true));if(opts.required){opts.required.forEach((ix=>{initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsActive(prop,ix)]=true;initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsRequired(prop,ix)]=true}))}const comp=BaseComponent.fromObject(initialState);let title=opts.title;if(!title){if(opts.count!=null)title=`Choose ${Parser.numberToText(opts.count).uppercaseFirst()}`;else if(opts.min!=null&&opts.max!=null)title=`Choose Between ${Parser.numberToText(opts.min).uppercaseFirst()} and ${Parser.numberToText(opts.max).uppercaseFirst()} Options`;else if(opts.min!=null)title=`Choose At Least ${Parser.numberToText(opts.min).uppercaseFirst()}`;else title=`Choose At Most ${Parser.numberToText(opts.max).uppercaseFirst()}`}const{$ele:$wrpList,propIsAcceptable:propIsAcceptable}=ComponentUiUtil.getMetaWrpMultipleChoice(comp,prop,opts);$wrpList.addClass(`mb-1`);const hkIsAcceptable=()=>$btnOk.attr("disabled",!comp._state[propIsAcceptable]);comp._addHookBase(propIsAcceptable,hkIsAcceptable);hkIsAcceptable();const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({...opts.modalOpts||{},title:title,isMinHeight0:true,isUncappedHeight:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const ixs=ComponentUiUtil.getMetaWrpMultipleChoice_getSelectedIxs(comp,prop);if(!opts.isResolveItems)resolve(ixs);else if(opts.values)resolve(ixs.map((ix=>opts.values[ix])));else if(opts.valueGroups){const allValues=opts.valueGroups.map((it=>it.values)).flat();resolve(ixs.map((ix=>allValues[ix])))}}});if(opts.htmlDescription)$modalInner.append(opts.htmlDescription);$wrpList.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right no-shrink pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$wrpList.focus()}))}static pGetUserIcon(opts){opts=opts||{};return new Promise((resolve=>{let lastIx=opts.default!=null?opts.default:-1;const onclicks=[];const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select an Option",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);return resolve(~lastIx?lastIx:null)}});$$`<div class="flex flex-wrap flex-h-center mb-2">${opts.values.map(((v,i)=>{const $btn=$$`<div class="m-2 btn ${v.buttonClass||"btn-default"} ui__btn-xxl-square flex-col flex-h-center">
					${v.iconClass?`<div class="ui-icn__wrp-icon ${v.iconClass} mb-1"></div>`:""}
					${v.iconContent?v.iconContent:""}
					<div class="whitespace-normal w-100">${v.name}</div>
				</div>`.click((()=>{lastIx=i;onclicks.forEach((it=>it()))})).toggleClass(v.buttonClassActive||"active",opts.default===i);if(v.buttonClassActive&&opts.default===i){$btn.removeClass("btn-default").addClass(v.buttonClassActive)}onclicks.push((()=>{$btn.toggleClass(v.buttonClassActive||"active",lastIx===i);if(v.buttonClassActive)$btn.toggleClass("btn-default",lastIx!==i)}));return $btn}))}</div>`.appendTo($modalInner);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}static pGetUserString(opts){opts=opts||{};return new Promise((resolve=>{const $iptStr=$(`<input class="form-control mb-2" type="text">`).val(opts.default).keydown((async evt=>{if(evt.key==="Escape"){$iptStr.blur();return}if(opts.autocomplete){await MiscUtil.pDelay(17);if($modalInner.find(`.typeahead.dropdown-menu`).is(":visible"))return}if(evt.which===13)doClose(true);evt.stopPropagation()}));if(opts.isCode)$iptStr.addClass("code");if(opts.autocomplete&&opts.autocomplete.length)$iptStr.typeahead({source:opts.autocomplete});const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Text",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptStr.val();return resolve(raw)}});$iptStr.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptStr.focus();$iptStr.select()}))}static pGetUserText(opts){opts=opts||{};return new Promise((resolve=>{const $iptStr=$(`<textarea class="form-control mb-2 resize-vertical w-100" ${opts.disabled?"disabled":""}></textarea>`).val(opts.default);if(opts.isCode)$iptStr.addClass("code");const $btnOk=$(`<button class="btn btn-primary mr-2">${opts.buttonText||"OK"}</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Text",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptStr.val();if(!raw.trim())return resolve(null);else return resolve(raw)}});$iptStr.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptStr.focus();$iptStr.select()}))}static pGetUserColor(opts){opts=opts||{};return new Promise((resolve=>{const $iptRgb=$(`<input class="form-control mb-2" ${opts.default!=null?`value="${opts.default}"`:""} type="color">`);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Choose Color",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptRgb.val();if(!raw.trim())return resolve(null);else return resolve(raw)}});$iptRgb.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptRgb.focus();$iptRgb.select()}))}static pGetUserDirection(opts){const X=0;const Y=1;const DEG_CIRCLE=360;opts=opts||{};const step=Math.max(2,Math.min(DEG_CIRCLE,opts.step||DEG_CIRCLE));const stepDeg=DEG_CIRCLE/step;function getAngle(p1,p2){return Math.atan2(p2[Y]-p1[Y],p2[X]-p1[X])*180/Math.PI}return new Promise((resolve=>{let active=false;let curAngle=Math.min(DEG_CIRCLE,opts.default)||0;const $arm=$(`<div class="ui-dir__arm"></div>`);const handleAngle=()=>$arm.css({transform:`rotate(${curAngle+180}deg)`});handleAngle();const $pad=$$`<div class="ui-dir__face">${$arm}</div>`.on("mousedown touchstart",(evt=>{active=true;handleEvent(evt)}));const $document=$(document);const evtId=`ui_user_dir_${CryptUtil.uid()}`;$document.on(`mousemove.${evtId} touchmove${evtId}`,(evt=>{handleEvent(evt)})).on(`mouseup.${evtId} touchend${evtId} touchcancel${evtId}`,(evt=>{evt.preventDefault();evt.stopPropagation();active=false}));const handleEvent=evt=>{if(!active)return;const coords=[EventUtil.getClientX(evt),EventUtil.getClientY(evt)];const{top:top,left:left}=$pad.offset();const center=[left+$pad.width()/2,top+$pad.height()/2];curAngle=getAngle(center,coords)+90;if(step!==DEG_CIRCLE)curAngle=Math.round(curAngle/stepDeg)*stepDeg;else curAngle=Math.round(curAngle);handleAngle()};const BTN_STEP_SIZE=26;const BORDER_PAD=16;const CONTROLS_RADIUS=(92+BTN_STEP_SIZE+BORDER_PAD)/2;const $padOuter=opts.stepButtons?(()=>{const steps=opts.stepButtons;const SEG_ANGLE=360/steps.length;const $btns=[];for(let i=0;i<steps.length;++i){const theta=SEG_ANGLE*i*(Math.PI/180)-1.5708;const x=CONTROLS_RADIUS*Math.cos(theta);const y=CONTROLS_RADIUS*Math.sin(theta);$btns.push($(`<button class="btn btn-default btn-xxs absolute">${steps[i]}</button>`).css({top:y+CONTROLS_RADIUS-BTN_STEP_SIZE/2,left:x+CONTROLS_RADIUS-BTN_STEP_SIZE/2,width:BTN_STEP_SIZE,height:BTN_STEP_SIZE,zIndex:1002}).click((()=>{curAngle=SEG_ANGLE*i;handleAngle()})))}const $wrpInner=$$`<div class="flex-vh-center relative">${$btns}${$pad}</div>`.css({width:CONTROLS_RADIUS*2,height:CONTROLS_RADIUS*2});return $$`<div class="flex-vh-center">${$wrpInner}</div>`.css({width:CONTROLS_RADIUS*2+BTN_STEP_SIZE+BORDER_PAD,height:CONTROLS_RADIUS*2+BTN_STEP_SIZE+BORDER_PAD})})():null;const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select Direction",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);$document.off(`mousemove.${evtId} touchmove${evtId} mouseup.${evtId} touchend${evtId} touchcancel${evtId}`);if(!isDataEntered)return resolve(null);if(curAngle<0)curAngle+=360;return resolve(curAngle)}});$$`<div class="flex-vh-center mb-3">
				${$padOuter||$pad}
			</div>`.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}static pGetUserDice(opts){opts=opts||{};return new Promise((resolve=>{const comp=BaseComponent.fromObject({num:opts.default&&opts.default.num||1,faces:opts.default&&opts.default.faces||6,bonus:opts.default&&opts.default.bonus||null});comp.render=function($parent){$parent.empty();const $iptNum=ComponentUiUtil.$getIptInt(this,"num",0,{$ele:$(`<input class="form-control input-xs form-control--minimal text-center mr-1">`)}).appendTo($parent).keydown((evt=>{if(evt.key==="Escape"){$iptNum.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));const $selFaces=ComponentUiUtil.$getSelEnum(this,"faces",{values:Renderer.dice.DICE}).addClass("mr-2").addClass("text-center").css("textAlignLast","center");const $iptBonus=$(`<input class="form-control input-xs form-control--minimal text-center">`).change((()=>this._state.bonus=UiUtil.strToInt($iptBonus.val(),null,{fallbackOnNaN:null}))).keydown((evt=>{if(evt.key==="Escape"){$iptBonus.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));const hook=()=>$iptBonus.val(this._state.bonus!=null?UiUtil.intToBonus(this._state.bonus):this._state.bonus);comp._addHookBase("bonus",hook);hook();$$`<div class="flex-vh-center">${$iptNum}<div class="mr-1">d</div>${$selFaces}${$iptBonus}</div>`.appendTo($parent)};comp.getAsString=function(){return`${this._state.num}d${this._state.faces}${this._state.bonus?UiUtil.intToBonus(this._state.bonus):""}`};const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Dice",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);return resolve(comp.getAsString())}});comp.render($modalInner);$$`<div class="flex-v-center flex-h-center pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}}class DragReorderUiUtil{static $getDragPad(opts){opts=opts||{};const getComponentById=id=>opts.componentsParent[opts.componentsProp].find((it=>it.id===id));const dragMeta={};const doDragCleanup=()=>{dragMeta.on=false;dragMeta.$wrap.remove();dragMeta.$dummies.forEach(($d=>$d.remove()));$(document.body).off(`mouseup.drag__stop`)};const doDragRender=()=>{if(dragMeta.on)doDragCleanup();$(document.body).on(`mouseup.drag__stop`,(()=>{if(dragMeta.on)doDragCleanup()}));dragMeta.on=true;dragMeta.$wrap=$(`<div class="flex-col ui-drag__wrp-drag-block"></div>`).appendTo(opts.$parent);dragMeta.$dummies=[];const ids=opts.componentsParent[opts.componentsProp].map((it=>it.id));ids.forEach((id=>{const $dummy=$(`<div class="w-100 ${id===opts.componentId?"ui-drag__wrp-drag-dummy--highlight":"ui-drag__wrp-drag-dummy--lowlight"}"></div>`).height(getComponentById(id).height).mouseup((()=>{if(dragMeta.on)doDragCleanup()})).appendTo(dragMeta.$wrap);dragMeta.$dummies.push($dummy);if(id!==opts.componentId){$dummy.mouseenter((()=>{const cachedPos=getComponentById(id).pos;getComponentById(id).pos=getComponentById(opts.componentId).pos;getComponentById(opts.componentId).pos=cachedPos;doDragRender()}))}}))};return $(`<div class="m${opts.marginSide||"l"}-2 ui-drag__patch" title="Drag to Reorder">\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t</div>`).mousedown((()=>doDragRender()))}static $getDragPadOpts($fnGetRow,opts){if(!opts.$parent||!opts.swapRowPositions||!opts.$children&&!opts.$getChildren)throw new Error("Missing required option(s)!");const dragMeta={};const doDragCleanup=()=>{dragMeta.on=false;dragMeta.$wrap.remove();dragMeta.$dummies.forEach(($d=>$d.remove()));$(document.body).off(`mouseup.drag__stop`)};const doDragRender=()=>{if(dragMeta.on)doDragCleanup();$(document.body).on(`mouseup.drag__stop`,(()=>{if(dragMeta.on)doDragCleanup()}));dragMeta.on=true;dragMeta.$wrap=$(`<div class="flex-col ui-drag__wrp-drag-block"></div>`).appendTo(opts.$parent);dragMeta.$dummies=[];const $children=opts.$getChildren?opts.$getChildren():opts.$children;const ixRow=$children.indexOf($fnGetRow());$children.forEach((($child,i)=>{const dimensions={w:$child.outerWidth(true),h:$child.outerHeight(true)};const $dummy=$(`<div class="${i===ixRow?"ui-drag__wrp-drag-dummy--highlight":"ui-drag__wrp-drag-dummy--lowlight"}"></div>`).width(dimensions.w).height(dimensions.h).mouseup((()=>{if(dragMeta.on)doDragCleanup()})).appendTo(dragMeta.$wrap);dragMeta.$dummies.push($dummy);if(i!==ixRow){$dummy.mouseenter((()=>{opts.swapRowPositions(i,ixRow);doDragRender()}))}}))};return $(`<div class="mr-2 ui-drag__patch" title="Drag to Reorder">\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t</div>`).mousedown((()=>doDragRender()))}static $getDragPad2($fnGetRow,$parent,parent){const{swapRowPositions:swapRowPositions,$children:$children,$getChildren:$getChildren}=parent;const nxtOpts={$parent:$parent,swapRowPositions:swapRowPositions,$children:$children,$getChildren:$getChildren};return this.$getDragPadOpts($fnGetRow,nxtOpts)}}class SourceUiUtil{static _getValidOptions(options){if(!options)throw new Error(`No options were specified!`);if(!options.$parent||!options.cbConfirm||!options.cbConfirmExisting||!options.cbCancel)throw new Error(`Missing options!`);options.mode=options.mode||"add";return options}static render(options){options=SourceUiUtil._getValidOptions(options);options.$parent.empty();options.mode=options.mode||"select";const isEditMode=options.mode==="edit";let jsonDirty=false;const $iptName=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptName.blur()})).change((()=>{if(!jsonDirty&&!isEditMode)$iptJson.val($iptName.val().replace(/[^-_a-zA-Z]/g,""));$iptName.removeClass("form-control--error")}));if(options.source)$iptName.val(options.source.full);const $iptAbv=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptAbv.blur()})).change((()=>{$iptAbv.removeClass("form-control--error")}));if(options.source)$iptAbv.val(options.source.abbreviation);const $iptJson=$(`<input class="form-control ui-source__ipt-named" ${isEditMode?"disabled":""}>`).keydown((evt=>{if(evt.key==="Escape")$iptJson.blur()})).change((()=>{jsonDirty=true;$iptJson.removeClass("form-control--error")}));if(options.source)$iptJson.val(options.source.json);const $iptUrl=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptUrl.blur()}));if(options.source)$iptUrl.val(options.source.url);const $iptAuthors=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptAuthors.blur()}));if(options.source)$iptAuthors.val((options.source.authors||[]).join(", "));const $iptConverters=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptConverters.blur()}));if(options.source)$iptConverters.val((options.source.convertedBy||[]).join(", "));const $btnOk=$(`<button class="btn btn-primary">OK</button>`).click((()=>{let incomplete=false;[$iptName,$iptAbv,$iptJson].forEach(($ipt=>{const val=$ipt.val();if(!val||!val.trim())(incomplete=true)&&$ipt.addClass("form-control--error")}));if(incomplete)return;const jsonVal=$iptJson.val().trim();if(!isEditMode&&BrewUtil.hasSourceJson(jsonVal)){$iptJson.addClass("form-control--error");JqueryUtil.doToast({content:`The JSON identifier "${jsonVal}" already exists!`,type:"danger"});return}const source={json:jsonVal,abbreviation:$iptAbv.val().trim(),full:$iptName.val().trim(),url:$iptUrl.val().trim(),authors:$iptAuthors.val().trim().split(",").map((it=>it.trim())).filter(Boolean),convertedBy:$iptConverters.val().trim().split(",").map((it=>it.trim())).filter(Boolean)};options.cbConfirm(source,options.mode!=="edit")}));const $btnCancel=options.isRequired&&!isEditMode?null:$(`<button class="btn btn-default ml-2">Cancel</button>`).click((()=>options.cbCancel()));const $btnUseExisting=$(`<button class="btn btn-default">Use an Existing Source</button>`).click((()=>{$stageInitial.hide();$stageExisting.show();[$iptName,$iptAbv,$iptJson].forEach(($ipt=>$ipt.removeClass("form-control--error")))}));const $stageInitial=$$`<div class="h-100 w-100 flex-vh-center"><div>
			<h3 class="text-center">${isEditMode?"Edit Homebrew Source":"Add a Homebrew Source"}</h3>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="The name or title for the homebrew you wish to create. This could be the name of a book or PDF; for example, 'Bestiary 1'">Title</span>
				${$iptName}
			</div></div>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="An abbreviated form of the title. This will be shown in lists on the site, and in the top-right corner of statblocks or data entries; for example, 'B1'">Abbreviation</span>
				${$iptAbv}
			</div></div>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="This will be used to identify your homebrew universally, so should be unique to you and you alone">JSON Identifier</span>
				${$iptJson}
			</div></div>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A link to the original homebrew, e.g. a GM Binder page">Source URL</span>
				${$iptUrl}
			</div></div>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A comma-separated list of authors, e.g. 'John Doe, Joe Bloggs'">Author(s)</span>
				${$iptAuthors}
			</div></div>
			<div class="row ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A comma-separated list of people who converted the homebrew to Pf2eTools' format, e.g. 'John Doe, Joe Bloggs'">Converted By</span>
				${$iptConverters}
			</div></div>
			<div class="text-center mb-2">${$btnOk}${$btnCancel}</div>

			${!isEditMode&&BrewUtil.homebrewMeta.sources&&BrewUtil.homebrewMeta.sources.length?$$`<div class="flex-vh-center mb-3 mt-3"><span class="ui-source__divider"></span>or<span class="ui-source__divider"></span></div>
			<div class="flex-vh-center">${$btnUseExisting}</div>`:""}
		</div></div>`.appendTo(options.$parent);const $selExisting=$$`<select class="form-control input-sm">
			<option disabled>Select</option>
			${(BrewUtil.homebrewMeta.sources||[]).sort(((a,b)=>SortUtil.ascSortLower(a.full,b.full))).map((s=>`<option value="${s.json.escapeQuotes()}">${s.full.escapeQuotes()}</option>`))}
		</select>`.change((()=>$selExisting.removeClass("form-control--error")));$selExisting[0].selectedIndex=0;const $btnConfirmExisting=$(`<button class="btn btn-default btn-sm">Confirm</button>`).click((()=>{if($selExisting[0].selectedIndex!==0){const sourceJson=$selExisting.val();const source=BrewUtil.sourceJsonToSource(sourceJson);options.cbConfirmExisting(source);$selExisting[0].selectedIndex=0;$stageExisting.hide();$stageInitial.show()}else $selExisting.addClass("form-control--error")}));const $btnBackExisting=$(`<button class="btn btn-default btn-sm mr-2">Back</button>`).click((()=>{$selExisting[0].selectedIndex=0;$stageExisting.hide();$stageInitial.show()}));const $stageExisting=$$`<div class="h-100 w-100 flex-vh-center" style="display: none;"><div>
			<h3 class="text-center">Select a Homebrew Source</h3>
			<div class="row mb-2"><div class="col-12 flex-vh-center">${$selExisting}</div></div>
			<div class="row"><div class="col-12 flex-vh-center">${$btnBackExisting}${$btnConfirmExisting}</div></div>
		</div></div>`.appendTo(options.$parent)}}class BaseComponent extends ProxyBase{constructor(){super();this.__locks={};this.__rendered={};this.__state={...this._getDefaultState()};this._state=this._getProxy("state",this.__state)}_addHookBase(prop,hook){this._addHook("state",prop,hook)}_removeHookBase(prop,hook){this._removeHook("state",prop,hook)}_setState(toState){this._proxyAssign("state","_state","__state",toState,true)}_getState(){return MiscUtil.copy(this.__state)}getPod(){this.__pod=this.__pod||{get:prop=>this._state[prop],set:(prop,val)=>this._state[prop]=val,delete:prop=>delete this._state[prop],addHook:(prop,hook)=>this._addHookBase(prop,hook),addHookAll:hook=>this._addHookAll("state",hook),removeHook:(prop,hook)=>this._removeHookBase(prop,hook),triggerCollectionUpdate:prop=>this._triggerCollectionUpdate(prop),setState:state=>this._setState(state),getState:()=>this._getState(),assign:(toObj,isOverwrite)=>this._proxyAssign("state","_state","__state",toObj,isOverwrite),pLock:lockName=>this._pLock(lockName),unlock:lockName=>this._unlock(lockName),component:this};return this.__pod}_getDefaultState(){return{}}getBaseSaveableState(){return{state:MiscUtil.copy(this.__state)}}setBaseSaveableStateFrom(toLoad){toLoad.state&&Object.assign(this._state,toLoad.state)}_getRenderedCollection(opts){opts=opts||{};const renderedLookupProp=opts.namespace?`${opts.namespace}.${opts.prop}`:opts.prop;return this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{}}_renderCollection(opts){opts=opts||{};const rendered=this._getRenderedCollection(opts);const toDelete=new Set(Object.keys(rendered));(this._state[opts.prop]||[]).forEach(((it,i)=>{if(it.id==null)throw new Error(`Collection item did not have an ID!`);const meta=rendered[it.id];toDelete.delete(it.id);if(meta){if(opts.isDiffMode){const nxtHash=CryptUtil.md5(JSON.stringify(it));if(nxtHash!==meta.__hash){meta.__hash=nxtHash}else return}meta.data=it;opts.fnUpdateExisting(meta,it,i)}else{const meta=opts.fnGetNew(it,i);if(meta==null)return;meta.data=it;if(!meta.$wrpRow)throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(opts.isDiffMode)meta.hash=CryptUtil.md5(JSON.stringify(it));rendered[it.id]=meta}}));toDelete.forEach((id=>{const meta=rendered[id];meta.$wrpRow.remove();delete rendered[id];if(opts.fnDeleteExisting)opts.fnDeleteExisting(meta)}))}async _pRenderCollection(opts){opts=opts||{};const rendered=this._getRenderedCollection(opts);const entities=this._state[opts.prop];return this._pRenderCollection_doRender(rendered,entities,opts)}async _pRenderCollection_doRender(rendered,entities,opts){opts=opts||{};const toDelete=new Set(Object.keys(rendered));for(let i=0;i<entities.length;++i){const it=entities[i];if(!it.id)throw new Error(`Collection item did not have an ID!`);const meta=rendered[it.id];toDelete.delete(it.id);if(meta){if(opts.isDiffMode){const nxtHash=CryptUtil.md5(JSON.stringify(it));if(nxtHash!==meta.__hash)meta.__hash=nxtHash;else continue}const nxtMeta=await opts.pFnUpdateExisting(meta,it);if(opts.isMultiRender)rendered[it.id]=nxtMeta}else{const meta=await opts.pFnGetNew(it);if(meta==null)continue;if(opts.isMultiRender&&meta.some((it=>!it.$wrpRow)))throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(!opts.isMultiRender&&!meta.$wrpRow)throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(opts.isDiffMode)meta.__hash=CryptUtil.md5(JSON.stringify(it));rendered[it.id]=meta}}for(const id of toDelete){const meta=rendered[id];if(opts.isMultiRender)meta.forEach((it=>it.$wrpRow.remove()));else meta.$wrpRow.remove();if(opts.additionalCaches)opts.additionalCaches.forEach((it=>delete it[id]));delete rendered[id];if(opts.pFnDeleteExisting)await opts.pFnDeleteExisting(meta)}}_detachCollection(prop,namespace=null){const renderedLookupProp=namespace?`${namespace}.${prop}`:prop;const rendered=this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{};Object.values(rendered).forEach((it=>it.$wrpRow.detach()))}_resetCollectionRenders(prop,namespace=null){const renderedLookupProp=namespace?`${namespace}.${prop}`:prop;const rendered=this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{};Object.values(rendered).forEach((it=>it.$wrpRow.remove()));delete this.__rendered[renderedLookupProp]}render(){throw new Error("Unimplemented!")}getSaveableState(){return{...this.getBaseSaveableState()}}setStateFrom(toLoad){this.setBaseSaveableStateFrom(toLoad)}async _pLock(lockName){while(this.__locks[lockName])await this.__locks[lockName].lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));this.__locks[lockName]={lock:lock,unlock:unlock}}_unlock(lockName){const lockMeta=this.__locks[lockName];if(lockMeta){delete this.__locks[lockName];lockMeta.unlock()}}_triggerCollectionUpdate(prop){if(!this._state[prop])return;this._state[prop]=[...this._state[prop]]}static _toCollection(array){if(array)return array.map((it=>({id:CryptUtil.uid(),entity:it})))}static _fromCollection(array){if(array)return array.map((it=>it.entity))}static fromObject(obj,...noModCollections){const comp=new this;Object.entries(MiscUtil.copy(obj)).forEach((([k,v])=>{if(v==null)comp.__state[k]=v;else if(noModCollections.includes(k))comp.__state[k]=v;else if(typeof v==="object"&&v instanceof Array)comp.__state[k]=BaseComponent._toCollection(v);else comp.__state[k]=v}));return comp}static fromObjectNoMod(obj){return this.fromObject(obj,...Object.keys(obj))}toObject(){const cpy=MiscUtil.copy(this.__state);Object.entries(cpy).forEach((([k,v])=>{if(v!=null&&v instanceof Array&&v.every((it=>it&&it.id)))cpy[k]=BaseComponent._fromCollection(v)}));return cpy}}class CompLayer extends ProxyBase{constructor(component,layerName,data){super();this._name=layerName;this.__data=data;this.data=this._getProxy("data",this.__data);this._addHookAll("data",(prop=>component.updateLayersActive(prop)))}getSaveableState(){return{name:this._name,data:MiscUtil.copy(this.__data)}}static fromSavedState(component,savedState){return new CompLayer(component,savedState.name,savedState.data)}}const MixinComponentHistory=compClass=>class extends compClass{constructor(){super(...arguments);this._histStackUndo=[];this._histStackRedo=[];this._isHistDisabled=true;this._histPropBlacklist=new Set;this._histPropWhitelist=null;this._histInitialState=null}set isHistDisabled(val){this._isHistDisabled=val}addBlacklistProps(...props){props.forEach((p=>this._histPropBlacklist.add(p)))}addWhitelistProps(...props){this._histPropWhitelist=this._histPropWhitelist||new Set;props.forEach((p=>this._histPropWhitelist.add(p)))}initHistory(){this._histInitialState=MiscUtil.copy(this._state);this._isHistDisabled=false;this._addHookAll("state",(prop=>{if(this._isHistDisabled)return;if(this._histPropBlacklist.has(prop))return;if(this._histPropWhitelist&&!this._histPropWhitelist.has(prop))return;this.recordHistory()}))}recordHistory(){const stateCopy=MiscUtil.copy(this._state);this._histPropBlacklist.forEach((prop=>delete stateCopy[prop]));if(this._histPropWhitelist)Object.keys(stateCopy).filter((k=>!this._histPropWhitelist.has(k))).forEach((k=>delete stateCopy[k]));this._histStackUndo.push(stateCopy);this._histStackRedo=[]}_histAddExcludedProperties(stateCopy){Object.entries(this._state).forEach((([k,v])=>{if(this._histPropBlacklist.has(k))return stateCopy[k]=v;if(this._histPropWhitelist&&!this._histPropWhitelist.has(k))stateCopy[k]=v}))}undo(){if(this._histStackUndo.length){const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const curState=this._histStackUndo.pop();this._histStackRedo.push(curState);const toApply=MiscUtil.copy(this._histStackUndo.last()||this._histInitialState);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}else{const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const toApply=MiscUtil.copy(this._histInitialState);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}}redo(){if(!this._histStackRedo.length)return;const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const toApplyRaw=this._histStackRedo.pop();this._histStackUndo.push(toApplyRaw);const toApply=MiscUtil.copy(toApplyRaw);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}};class ComponentUiUtil{static trackHook(hooks,prop,hook){hooks[prop]=hooks[prop]||[];hooks[prop].push(hook)}static $getIptInt(component,prop,fallbackEmpty=0,opts){return ComponentUiUtil._$getIptNumeric(component,prop,UiUtil.strToInt,fallbackEmpty,opts)}static $getIptNumber(component,prop,fallbackEmpty=0,opts){return ComponentUiUtil._$getIptNumeric(component,prop,UiUtil.strToNumber,fallbackEmpty,opts)}static _$getIptNumeric(component,prop,fnConvert,fallbackEmpty=0,opts){opts=opts||{};opts.offset=opts.offset||0;const $ipt=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal text-right">`)).disableSpellcheck().keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).change((()=>{const raw=$ipt.val().trim();if(opts.isAllowNull&&!raw)return component._state[prop]=null;if(raw.startsWith("=")){component._state[prop]=fnConvert(raw.slice(1),fallbackEmpty,opts)-opts.offset}else{const mUnary=/^[-+/*^]/.exec(raw);if(mUnary){const cur=component._state[prop];let proc=raw;proc=proc.slice(1).trim();const mod=fnConvert(proc,fallbackEmpty,opts);const full=`${cur}${mUnary[0]}${mod}`;component._state[prop]=fnConvert(full,fallbackEmpty,opts)-opts.offset}else{component._state[prop]=fnConvert(raw,fallbackEmpty,opts)-opts.offset}}}));const hook=()=>{if(opts.isAllowNull&&component._state[prop]==null){return $ipt.val(null)}const num=(component._state[prop]||0)+opts.offset;$ipt.val(opts.padLength?`${num}`.padStart(opts.padLength,"0"):num)};if(opts.hookTracker)ComponentUiUtil.trackHook(opts.hookTracker,prop,hook);component._addHookBase(prop,hook);hook();if(opts.asMeta)return this._getIptDecoratedMeta(component,prop,$ipt,hook,opts);else return $ipt}static $getIptStr(component,prop,opts){opts=opts||{};if((opts.decorationLeft||opts.decorationRight)&&!opts.asMeta)throw new Error(`Input must be created with "asMeta" option`);const $ipt=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).disableSpellcheck();UiUtil.bindTypingEnd({$ipt:$ipt,fnKeyup:()=>{const nxtVal=opts.isNoTrim?$ipt.val():$ipt.val().trim();component._state[prop]=opts.isAllowNull&&!nxtVal?null:nxtVal}});if(opts.autocomplete&&opts.autocomplete.length)$ipt.typeahead({source:opts.autocomplete});const hook=()=>{if(component._state[prop]==null)$ipt.val(null);else{if($ipt.val().trim()!==component._state[prop])$ipt.val(component._state[prop])}};component._addHookBase(prop,hook);hook();if(opts.asMeta)return this._getIptDecoratedMeta(component,prop,$ipt,hook,opts);else return $ipt}static $getIptStr2(component,prop,opts){opts=opts||{};if((opts.decorationLeft||opts.decorationRight)&&!opts.asMeta)throw new Error(`Input must be created with "asMeta" option`);const $ipt=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).keydown((evt=>{try{if(evt.key==="Escape")$ipt.blur()}catch(e){}})).disableSpellcheck().change((()=>{const nxtVal=opts.isNoTrim?$ipt.val():$ipt.val().trim();component._state[prop]=opts.isAllowNull&&!nxtVal?null:nxtVal}));if(opts.autocomplete&&opts.autocomplete.length)$ipt.typeahead({source:opts.autocomplete});const hook=()=>{if(component._state[prop]==null)$ipt.val(null);else{if($ipt.val().trim()!==component._state[prop])$ipt.val(component._state[prop])}};component._addHookBase(prop,hook);hook();if(opts.asMeta)return this._getIptDecoratedMeta(component,prop,$ipt,hook,opts);else return $ipt}static _getIptDecoratedMeta(component,prop,$ipt,hook,opts){const out={$ipt:$ipt,unhook:()=>component._removeHookBase(prop,hook)};if(opts.decorationLeft||opts.decorationRight){let $decorLeft;let $decorRight;if(opts.decorationLeft){$ipt.addClass(`ui-ideco__ipt ui-ideco__ipt--left`);$decorLeft=ComponentUiUtil._$getDecor(component,prop,$ipt,opts.decorationLeft,"left",opts)}if(opts.decorationRight){$ipt.addClass(`ui-ideco__ipt ui-ideco__ipt--right`);$decorRight=ComponentUiUtil._$getDecor(component,prop,$ipt,opts.decorationRight,"right",opts)}out.$wrp=$$`<div class="relative w-100">${$ipt}${$decorLeft}${$decorRight}</div>`}return out}static _$getDecor(component,prop,$ipt,decorType,side,opts){switch(decorType){case"search":{return $(`<div class="ui-ideco__wrp ui-ideco__wrp--${side} no-events flex-vh-center"><span class="glyphicon glyphicon-search" type="submit"></span></div>`)}case"clear":{return $(`<div class="ui-ideco__wrp ui-ideco__wrp--${side} flex-vh-center clickable" title="Clear"><span class="glyphicon glyphicon-remove"></span></div>`).click((()=>$ipt.val("").change().keydown().keyup()))}case"ticker":{const isValidValue=val=>{if(opts.max!=null&&val>opts.max)return false;if(opts.min!=null&&val<opts.min)return false;return true};const handleClick=delta=>{const nxt=component._state[prop]+delta;if(!isValidValue(nxt))return;component._state[prop]=nxt;$ipt.focus()};const $btnUp=$(`<button class="btn btn-default ui-ideco__btn-ticker bold no-select">+</button>`).click((()=>handleClick(1)));const $btnDown=$(`<button class="btn btn-default ui-ideco__btn-ticker bold no-select">‒</button>`).click((()=>handleClick(-1)));return $$`<div class="ui-ideco__wrp ui-ideco__wrp--${side} flex-vh-center flex-col">
					${$btnUp}
					${$btnDown}
				</div>`}case"spacer":{return""}default:throw new Error(`Unimplemented!`)}}static $getIptEntries(component,prop,opts){opts=opts||{};const $ipt=(opts.$ele||$(`<textarea class="form-control input-xs form-control--minimal resize-vertical"></textarea>`)).keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).change((()=>component._state[prop]=UiUtil.getTextAsEntries($ipt.val().trim())));const hook=()=>$ipt.val(UiUtil.getEntriesAsText(component._state[prop]));hook();return $ipt}static $getIptColor(component,prop,opts){opts=opts||{};const $ipt=(opts.$ele||$(`<input class="form-control input-xs form-control--minimal ui__ipt-color" type="color">`)).change((()=>component._state[prop]=$ipt.val()));const hook=()=>$ipt.val(component._state[prop]);component._addHookBase(prop,hook);hook();return $ipt}static $getBtnBool(component,prop,opts){opts=opts||{};if(opts.html)opts.$ele=$(opts.html);const activeClass=opts.activeClass||"active";const stateName=opts.stateName||"state";const stateProp=opts.stateProp||"_state";const $btn=(opts.$ele||$(`<button class="btn btn-xs btn-default">${opts.text||"Toggle"}</button>`)).click((()=>component[stateProp][prop]=!component[stateProp][prop])).contextmenu((evt=>{evt.preventDefault();component[stateProp][prop]=!component[stateProp][prop]}));const hook=()=>{$btn.toggleClass(activeClass,opts.isInverted?!component[stateProp][prop]:!!component[stateProp][prop]);if(opts.activeTitle||opts.inactiveTitle)$btn.title(component[stateProp][prop]?opts.activeTitle||"":opts.inactiveTitle||"");if(opts.activeText||opts.inactiveText)$btn.text(component[stateProp][prop]?opts.activeText||"Toggle":opts.inactiveText||"Toggle");if(opts.fnHookPost)opts.fnHookPost(component[stateProp][prop])};component._addHook(stateName,prop,hook);hook();return $btn}static $getCbBool(component,prop,opts){opts=opts||{};const $cb=(opts.$ele||$(`<input type="checkbox">`)).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).change((()=>component._state[prop]=$cb.prop("checked")));const hook=()=>$cb.prop("checked",!!component._state[prop]);component._addHookBase(prop,hook);hook();return opts.asMeta?{$cb:$cb,unhook:()=>component._removeHookBase(prop,hook)}:$cb}static $getSelSearchable(comp,prop,opts){opts=opts||{};const $iptDisplay=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).addClass("ui-sel2__ipt-display pr-1").attr("tabindex","-1").click((()=>$iptSearch.focus().select())).disableSpellcheck();const handleSearchChange=()=>{const cleanTerm=this._$getSelSearchable_getSearchString($iptSearch.val());metaOptions.forEach((it=>{it.isVisible=it.searchTerm.includes(cleanTerm);it.$ele.toggleVe(it.isVisible)}))};const handleSearchChangeDebounced=MiscUtil.debounce(handleSearchChange,30);const $iptSearch=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).addClass("absolute ui-sel2__ipt-search").keydown((evt=>{switch(evt.key){case"Escape":evt.stopPropagation();return $iptSearch.blur();case"ArrowDown":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible));if(!visibleMetaOptions.length)return;visibleMetaOptions[0].$ele.focus();break}case"Enter":{const visibleMetaOptions=metaOptions.filter((it=>it.isVisible));if(!visibleMetaOptions.length)return;comp._state[prop]=visibleMetaOptions[0].value;break}default:handleSearchChangeDebounced()}})).change((()=>handleSearchChangeDebounced())).click((()=>$iptSearch.focus().select())).disableSpellcheck();const $wrpChoices=$(`<div class="absolute ui-sel2__wrp-options overflow-y-scroll"></div>`);const $wrp=$$`<div class="flex relative ui-sel2__wrp w-100">
			${$iptDisplay}
			${$iptSearch}
			${$wrpChoices}
		</div>`;const procValues=opts.isAllowNull?[null,...opts.values]:opts.values;const metaOptions=procValues.map(((v,i)=>{const display=v==null?opts.displayNullAs||"—":opts.fnDisplay?opts.fnDisplay(v):v;const $ele=$(`<div class="flex-v-center py-1 px-1 clickable ui-sel2__disp-option ${v==null?`italic`:""}" tabindex="${i}">${display}</div>`).click((()=>{comp._state[prop]=v;$(document.activeElement).blur()})).keydown((evt=>{switch(evt.key){case"Escape":evt.stopPropagation();return $ele.blur();case"ArrowDown":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible));if(!visibleMetaOptions.length)return;const ixCur=visibleMetaOptions.indexOf(out);const nxt=visibleMetaOptions[ixCur+1];if(nxt)nxt.$ele.focus();break}case"ArrowUp":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible));if(!visibleMetaOptions.length)return;const ixCur=visibleMetaOptions.indexOf(out);const prev=visibleMetaOptions[ixCur-1];if(prev)return prev.$ele.focus();$iptSearch.focus();break}case"Enter":{comp._state[prop]=v;$iptSearch.focus();break}}})).appendTo($wrpChoices);const out={value:v,isVisible:true,searchTerm:this._$getSelSearchable_getSearchString(display),$ele:$ele};return out}));const hk=()=>{if(comp._state[prop]==null)$iptDisplay.addClass("italic").val(opts.displayNullAs||"—");else $iptDisplay.removeClass("italic").val(opts.fnDisplay?opts.fnDisplay(comp._state[prop]):comp._state[prop]);metaOptions.forEach((it=>it.$ele.removeClass("active")));const metaActive=metaOptions.find((it=>it.value==null?comp._state[prop]==null:it.value===comp._state[prop]));if(metaActive)metaActive.$ele.addClass("active")};comp._addHookBase(prop,hk);hk();return opts.asMeta?{$wrp:$wrp,unhook:()=>comp._removeHookBase(prop,hk)}:$wrp}static _$getSelSearchable_getSearchString(str){if(str==null)return"";return str.trim().toLowerCase().replace(/\s+/g," ")}static $getSelEnum(component,prop,opts){opts=opts||{};const $sel=(opts.$ele||$(opts.html||`<select class="form-control input-xs"></select>`)).change((()=>{const ix=Number($sel.val());if(~ix)component._state[prop]=opts.values[ix];else{if(opts.isAllowNull)component._state[prop]=null;else component._state[prop]=opts.values[0]}}));if(opts.isAllowNull)$(`<option/>`,{value:-1,text:opts.displayNullAs||"—"}).appendTo($sel);opts.values.forEach(((it,i)=>$(`<option/>`,{value:i,text:opts.fnDisplay?opts.fnDisplay(it):it}).appendTo($sel)));const hook=()=>{const searchFor=component._state[prop]===undefined?null:component._state[prop];const ix=opts.values.indexOf(searchFor);$sel.val(`${ix}`)};component._addHookBase(prop,hook);hook();return opts.asMeta?{$sel:$sel,unhook:()=>component._removeHookBase(prop,hook)}:$sel}static $getPickEnum(component,prop,opts){opts=opts||{};const initialVals=opts.values.mergeMap((v=>({[v]:component._state[prop]&&component._state[prop].includes(v)})));const menu=ContextUtil.getMenu(opts.values.map((it=>new ContextUtil.Action(opts.fnDisplay?opts.fnDisplay(it):it,(()=>pickComp.getPod().set(it,true))))));const pickComp=BaseComponent.fromObject(initialVals);pickComp.render=function($parent){$parent.empty();Object.entries(this._state).forEach((([k,v])=>{if(v===false)return;const $btnRemove=$(`<button class="btn btn-danger ui-pick__btn-remove">×</button>`).click((()=>this._state[k]=false));$$`<div class="flex mx-1 mb-1 ui-pick__disp-pill"><div class="px-1 ui-pick__disp-text flex-v-center">${opts.fnDisplay?opts.fnDisplay(k):k}</div>${$btnRemove}</div>`.appendTo($parent)}))};const $btnAdd=$(`<button class="btn btn-xxs btn-default ui-pick__btn-add mb-1">+</button>`).click((evt=>ContextUtil.pOpenMenu(evt,menu)));const $wrpPills=$(`<div class="flex flex-wrap w-100"></div>`);const $wrp=$$`<div class="flex-v-center">${$btnAdd}${$wrpPills}</div>`;pickComp._addHookAll("state",(()=>{component._state[prop]=Object.keys(pickComp._state).filter((k=>pickComp._state[k]));pickComp.render($wrpPills)}));pickComp.render($wrpPills);return $wrp}static $getCbsEnum(component,prop,opts){opts=opts||{};const $wrp=$(`<div class="flex-col w-100"></div>`);const metas=opts.values.map((it=>{const $cb=$(`<input type="checkbox">`).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).change((()=>{let didUpdate=false;const ix=(component._state[prop]||[]).indexOf(it);if(~ix)component._state[prop].splice(ix,1);else{if(component._state[prop])component._state[prop].push(it);else{didUpdate=true;component._state[prop]=[it]}}if(!didUpdate)component._state[prop]=[...component._state[prop]]}));$$`<label class="split-v-center my-1 stripe-odd ${opts.isIndent?"ml-4":""}"><div class="no-wrap flex-v-center">${opts.fnDisplay?opts.fnDisplay(it):it}</div>${$cb}</label>`.appendTo($wrp);return{$cb:$cb,value:it}}));const hook=()=>metas.forEach((meta=>meta.$cb.prop("checked",component._state[prop]&&component._state[prop].includes(meta.value))));component._addHookBase(prop,hook);hook();return opts.asMeta?{$wrp:$wrp,unhook:()=>component._removeHookBase(prop,hook)}:$wrp}static getMetaWrpMultipleChoice(comp,prop,opts){opts=opts||{};this._getMetaWrpMultipleChoice_doValidateOptions(opts);const rowMetas=[];const $eles=[];const ixsSelectionOrder=[];const propIsAcceptable=this.getMetaWrpMultipleChoice_getPropIsAcceptable(prop);const propPulse=this.getMetaWrpMultipleChoice_getPropPulse(prop);const propIxMax=this._getMetaWrpMultipleChoice_getPropValuesLength(prop);const valueGroups=opts.valueGroups||[{values:opts.values}];let ixValue=0;valueGroups.forEach(((group,i)=>{if(i!==0)$eles.push($(`<hr class="w-100 hr-1 hr--dotted">`));if(group.name)$eles.push($(`<div class="flex-v-center row py-1"><span class="mr-2">‒</span><span>${group.name}</span></div>`));if(group.text)$eles.push($(`<div class="flex-v-center row py-1"><div class="ml-1 mr-3"></div><i>${group.text}</i></div>`));group.values.forEach((v=>{const ixValueFrozen=ixValue;const propIsActive=this.getMetaWrpMultipleChoice_getPropIsActive(prop,ixValueFrozen);const propIsRequired=this.getMetaWrpMultipleChoice_getPropIsRequired(prop,ixValueFrozen);if(comp._state[propIsActive]&&!comp._state[propIsRequired])ixsSelectionOrder.push(ixValueFrozen);const $cb=comp._state[propIsRequired]?$(`<input type="checkbox" disabled checked>`):ComponentUiUtil.$getCbBool(comp,propIsActive);const hk=()=>{const ixIx=ixsSelectionOrder.findIndex((it=>it===ixValueFrozen));if(~ixIx)ixsSelectionOrder.splice(ixIx,1);if(comp._state[propIsActive])ixsSelectionOrder.push(ixValueFrozen);const activeRows=rowMetas.filter((it=>comp._state[it.propIsActive]));if(opts.count!=null){if(activeRows.length>opts.count){const ixFirstSelected=ixsSelectionOrder.splice(ixsSelectionOrder.length-2,1)[0];if(ixFirstSelected!=null){const propIsActiveOther=this.getMetaWrpMultipleChoice_getPropIsActive(prop,ixFirstSelected);comp._state[propIsActiveOther]=false;comp._state[propPulse]=!comp._state[propPulse]}return}}let isAcceptable=false;if(opts.count!=null){if(activeRows.length===opts.count)isAcceptable=true}else{if(activeRows.length>=(opts.min||0)&&activeRows.length<=(opts.max||Number.MAX_SAFE_INTEGER))isAcceptable=true}comp._state[propIsAcceptable]=isAcceptable;comp._state[propPulse]=!comp._state[propPulse]};comp._addHookBase(propIsActive,hk);hk();rowMetas.push({$cb:$cb,propIsActive:propIsActive,unhook:()=>comp._removeHookBase(propIsActive,hk)});$eles.push($$`<label class="flex-v-center row py-1 stripe-even">
					<div class="col-1 flex-vh-center">${$cb}</div>
					<div class="col-11 flex-v-center">${opts.fnDisplay?opts.fnDisplay(v,ixValueFrozen):v}</div>
				</label>`);ixValue++}))}));ixsSelectionOrder.sort(((a,b)=>SortUtil.ascSort(a,b)));comp.__state[propIxMax]=ixValue;const unhook=()=>rowMetas.forEach((it=>it.unhook()));return{$ele:$$`<div class="flex-col w-100 overflow-y-auto">${$eles}</div>`,propIsAcceptable:propIsAcceptable,propPulse:propPulse,unhook:unhook,cleanup:()=>{unhook();Object.keys(comp._state).filter((it=>it.startsWith(`${prop}__`))).forEach((it=>delete comp._state[it]))}}}static getMetaWrpMultipleChoice_getPropIsAcceptable(prop){return`${prop}__isAcceptable`}static getMetaWrpMultipleChoice_getPropPulse(prop){return`${prop}__pulse`}static _getMetaWrpMultipleChoice_getPropValuesLength(prop){return`${prop}__length`}static getMetaWrpMultipleChoice_getPropIsActive(prop,ixValue){return`${prop}__isActive_${ixValue}`}static getMetaWrpMultipleChoice_getPropIsRequired(prop,ixValue){return`${prop}__isRequired_${ixValue}`}static getMetaWrpMultipleChoice_getSelectedIxs(comp,prop){const out=[];const len=comp._state[this._getMetaWrpMultipleChoice_getPropValuesLength(prop)]||0;for(let i=0;i<len;++i){if(comp._state[this.getMetaWrpMultipleChoice_getPropIsActive(prop,i)])out.push(i)}return out}static getMetaWrpMultipleChoice_getSelectedValues(comp,prop,{values:values,valueGroups:valueGroups}){const selectedIxs=this.getMetaWrpMultipleChoice_getSelectedIxs(comp,prop);if(values)return selectedIxs.map((ix=>values[ix]));const selectedIxsSet=new Set(selectedIxs);const out=[];let ixValue=0;valueGroups.forEach((group=>{group.values.forEach((v=>{if(selectedIxsSet.has(ixValue))out.push(v);ixValue++}))}));return out}static _getMetaWrpMultipleChoice_doValidateOptions(opts){if(Number(!!opts.values)+Number(!!opts.valueGroups)!==1)throw new Error(`Exactly one of "values" and "valueGroups" must be specified!`);if(opts.count!=null&&(opts.min!=null||opts.max!=null))throw new Error(`Chooser must be either in "count" mode or "min/max" mode!`);if(opts.count==null&&opts.min==null&&opts.max==null)opts.count=1}static $getSliderRange(comp,opts){opts=opts||{};const slider=new ComponentUiUtil.RangeSlider({comp:comp,...opts});return slider.$get()}}ComponentUiUtil.RangeSlider=class{constructor({comp:comp,propMin:propMin,propMax:propMax,propCurMin:propCurMin,propCurMax:propCurMax,fnDisplay:fnDisplay}){this._comp=comp;this._propMin=propMin;this._propMax=propMax;this._propCurMin=propCurMin;this._propCurMax=propCurMax;this._fnDisplay=fnDisplay;this._isSingle=!this._propCurMax;const compCpyState={[this._propMin]:this._comp._state[this._propMin],[this._propCurMin]:this._comp._state[this._propCurMin],[this._propMax]:this._comp._state[this._propMax]};if(!this._isSingle)compCpyState[this._propCurMax]=this._comp._state[this._propCurMax];this._compCpy=BaseComponent.fromObject(compCpyState);this._comp._addHook("state",this._propMin,(()=>this._compCpy._state[this._propMin]=this._comp._state[this._propMin]));this._comp._addHook("state",this._propCurMin,(()=>this._compCpy._state[this._propCurMin]=this._comp._state[this._propCurMin]));this._comp._addHook("state",this._propMax,(()=>this._compCpy._state[this._propMax]=this._comp._state[this._propMax]));if(!this._isSingle)this._comp._addHook("state",this._propCurMax,(()=>this._compCpy._state[this._propCurMax]=this._comp._state[this._propCurMax]));this._cacheRendered=null;this._dispTrackOuter=null;this._dispTrackInner=null;this._thumbLow=null;this._thumbHigh=null;this._dragMeta=null}$get(){const out=this.get();return $(out)}get(){this.constructor._init();this.constructor._ALL_SLIDERS.add(this);if(this._cacheRendered)return this._cacheRendered;const dispValueLeft=this._isSingle?this._getSpcSingleValue():this._getDispValue({isVisible:true,side:"left"});const dispValueRight=this._getDispValue({isVisible:true,side:"right"});this._dispTrackInner=this._isSingle?null:e_({tag:"div",clazz:"ui-slidr__track-inner h-100 absolute"});this._thumbLow=this._getThumb();this._thumbHigh=this._isSingle?null:this._getThumb();this._dispTrackOuter=e_({tag:"div",clazz:`relative w-100 ui-slidr__track-outer`,children:[this._dispTrackInner,this._thumbLow,this._thumbHigh].filter(Boolean)});const wrpTrack=e_({tag:"div",clazz:`flex-v-center w-100 h-100 ui-slidr__wrp-track clickable`,mousedown:evt=>{const thumb=this._getClosestThumb(evt);this._handleMouseDown(evt,thumb)},children:[this._dispTrackOuter]});const wrpTop=e_({tag:"div",clazz:"flex-v-center w-100 ui-slidr__wrp-top",children:[dispValueLeft,wrpTrack,dispValueRight].filter(Boolean)});const wrpPips=e_({tag:"div",clazz:`w-100 flex relative clickable h-100 ui-slidr__wrp-pips`,mousedown:evt=>{const thumb=this._getClosestThumb(evt);this._handleMouseDown(evt,thumb)}});const wrpBottom=e_({tag:"div",clazz:"w-100 flex-vh-center ui-slidr__wrp-bottom",children:[this._isSingle?this._getSpcSingleValue():this._getDispValue({side:"left"}),wrpPips,this._getDispValue({side:"right"})].filter(Boolean)});const hkChangeValue=()=>{const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const curMin=this._compCpy._state[this._propCurMin];const pctMin=(curMin-min)/(max-min)*100;this._thumbLow.style.left=`calc(${pctMin}% - ${this.constructor._W_THUMB_PX/2}px)`;const toDisplayLeft=this._fnDisplay?`${this._fnDisplay(curMin)}`.qq():curMin;if(!this._isSingle)dispValueLeft.html(toDisplayLeft);if(!this._isSingle){this._dispTrackInner.style.left=`${pctMin}%`;const curMax=this._compCpy._state[this._propCurMax];const pctMax=(curMax-min)/(max-min)*100;this._dispTrackInner.style.right=`${100-pctMax}%`;this._thumbHigh.style.left=`calc(${pctMax}% - ${this.constructor._W_THUMB_PX/2}px)`;dispValueRight.html(this._fnDisplay?`${this._fnDisplay(curMax)}`.qq():curMax)}else{dispValueRight.html(toDisplayLeft)}};const hkChangeLimit=()=>{const pips=[];const numPips=this._compCpy._state[this._propMax]-this._compCpy._state[this._propMin];let pipIncrement=1;if(numPips>ComponentUiUtil.RangeSlider._MAX_PIPS)pipIncrement=Math.ceil(numPips/ComponentUiUtil.RangeSlider._MAX_PIPS);let i,len;for(i=this._compCpy._state[this._propMin],len=this._compCpy._state[this._propMax]+1;i<len;i+=pipIncrement){pips.push(this._getWrpPip({isMajor:i===this._compCpy._state[this._propMin]||i===len-1,value:i}))}if(i!==this._compCpy._state[this._propMax])pips.push(this._getWrpPip({isMajor:true,value:this._compCpy._state[this._propMax]}));wrpPips.empty();e_({ele:wrpPips,children:pips});hkChangeValue()};this._compCpy._addHook("state",this._propMin,hkChangeLimit);this._compCpy._addHook("state",this._propMax,hkChangeLimit);this._compCpy._addHook("state",this._propCurMin,hkChangeValue);if(!this._isSingle)this._compCpy._addHook("state",this._propCurMax,hkChangeValue);hkChangeLimit();const wrp=e_({tag:"div",clazz:"flex-col w-100 ui-slidr__wrp",children:[wrpTop,wrpBottom]});return this._cacheRendered=wrp}destroy(){this.constructor._ALL_SLIDERS.delete(this);if(this._cacheRendered)this._cacheRendered.remove()}_getDispValue({isVisible:isVisible,side:side}){return e_({tag:"div",clazz:`overflow-hidden ui-slidr__disp-value no-shrink no-grow flex-vh-center bold no-select ${isVisible?`ui-slidr__disp-value--visible`:""} ui-slidr__disp-value--${side}`})}_getSpcSingleValue(){return e_({tag:"div",clazz:`px-2`})}_getThumb(){const thumb=e_({tag:"div",clazz:"ui-slidr__thumb absolute clickable",mousedown:evt=>this._handleMouseDown(evt,thumb)}).attr("draggable",true);return thumb}_getWrpPip({isMajor:isMajor,value:value}={}){const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const pctValue=(value-min)/(max-min)*100;const posLeft=`${pctValue}%`;const styleLeft=`left: ${posLeft};`;const pip=e_({tag:"div",clazz:`ui-slidr__pip ${isMajor?`ui-slidr__pip--major`:`absolute`}`});const dispLabel=e_({tag:"div",clazz:"absolute ui-slidr__pip-label flex-vh-center ve-small no-wrap",html:isMajor?this._fnDisplay?`${this._fnDisplay(value)}`.qq():value:""});return e_({tag:"div",clazz:"flex-col flex-vh-center absolute no-select",children:[pip,dispLabel],style:styleLeft})}_getRelativeValue(evt,{trackOriginX:trackOriginX,trackWidth:trackWidth}){const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const xEvt=EventUtil.getClientX(evt)-trackOriginX;const rawVal=min+Math.round(xEvt/trackWidth*(max-min));return Math.min(max,Math.max(min,rawVal))}_getClosestThumb(evt){if(this._isSingle)return this._thumbLow;const{x:trackOriginX,width:trackWidth}=this._dispTrackOuter.getBoundingClientRect();const value=this._getRelativeValue(evt,{trackOriginX:trackOriginX,trackWidth:trackWidth});if(value<this._compCpy._state[this._propCurMin])return this._thumbLow;if(value>this._compCpy._state[this._propCurMax])return this._thumbHigh;const{distToMin:distToMin,distToMax:distToMax}=this._getDistsToCurrentMinAndMax(value);if(distToMax<distToMin)return this._thumbHigh;return this._thumbLow}_getDistsToCurrentMinAndMax(value){if(this._isSingle)throw new Error(`Can not get distance to max value for singleton slider!`);const distToMin=Math.abs(this._compCpy._state[this._propCurMin]-value);const distToMax=Math.abs(this._compCpy._state[this._propCurMax]-value);return{distToMin:distToMin,distToMax:distToMax}}_handleClick(evt,value){evt.stopPropagation();evt.preventDefault();if(value<this._compCpy._state[this._propCurMin])this._compCpy._state[this._propCurMin]=value;if(value>this._compCpy._state[this._propCurMax])this._compCpy._state[this._propCurMax]=value;const{distToMin:distToMin,distToMax:distToMax}=this._getDistsToCurrentMinAndMax(value);if(distToMax<distToMin)this._compCpy._state[this._propCurMax]=value;else this._compCpy._state[this._propCurMin]=value}_handleMouseDown(evt,thumb){evt.preventDefault();evt.stopPropagation();const{x:trackOriginX,width:trackWidth}=this._dispTrackOuter.getBoundingClientRect();thumb.addClass(`ui-slidr__thumb--hover`);this._dragMeta={trackOriginX:trackOriginX,trackWidth:trackWidth,thumb:thumb};this._handleMouseMove(evt)}_handleMouseUp(){const wasActive=this._doDragCleanup();if(wasActive){const nxtState={[this._propMin]:this._compCpy._state[this._propMin],[this._propMax]:this._compCpy._state[this._propMax],[this._propCurMin]:this._compCpy._state[this._propCurMin]};if(!this._isSingle)nxtState[this._propCurMax]=this._compCpy._state[this._propCurMax];this._comp._proxyAssignSimple("state",nxtState)}}_handleMouseMove(evt){if(!this._dragMeta)return;const val=this._getRelativeValue(evt,this._dragMeta);if(this._dragMeta.thumb===this._thumbLow){if(val>this._compCpy._state[this._propCurMax])return;this._compCpy._state[this._propCurMin]=val}else if(this._dragMeta.thumb===this._thumbHigh){if(val<this._compCpy._state[this._propCurMin])return;this._compCpy._state[this._propCurMax]=val}}_doDragCleanup(){const isActive=this._dragMeta!=null;if(this._dragMeta?.thumb)this._dragMeta.thumb.removeClass(`ui-slidr__thumb--hover`);this._dragMeta=null;return isActive}static _init(){if(this._isInit)return;document.addEventListener("mousemove",(evt=>{for(const slider of this._ALL_SLIDERS){slider._handleMouseMove(evt)}}));document.addEventListener("mouseup",(evt=>{for(const slider of this._ALL_SLIDERS){slider._handleMouseUp(evt)}}))}};ComponentUiUtil.RangeSlider._isInit=false;ComponentUiUtil.RangeSlider._ALL_SLIDERS=new Set;ComponentUiUtil.RangeSlider._W_THUMB_PX=16;ComponentUiUtil.RangeSlider._W_LABEL_PX=24;ComponentUiUtil.RangeSlider._MAX_PIPS=40;if(typeof module!=="undefined"){module.exports={ProxyBase:ProxyBase,UiUtil:UiUtil,ListUiUtil:ListUiUtil,TabUiUtil:TabUiUtil,SearchUiUtil:SearchUiUtil,SearchWidget:SearchWidget,InputUiUtil:InputUiUtil,DragReorderUiUtil:DragReorderUiUtil,SourceUiUtil:SourceUiUtil,BaseComponent:BaseComponent,ComponentUiUtil:ComponentUiUtil}};
"use strict";if(typeof require!=="undefined"){require("../js/utils.js");require("../js/render.js");require("../js/render-dice.js")}class Omnidexer{constructor(id=0){this._index=[];this.id=id;this._metaMap={};this._metaIndices={}}getIndex(){return{x:this._index,m:this._metaMap}}static decompressIndex(indexGroup){const{x:x,m:m}=indexGroup;const props=new Set;const lookup={};Object.keys(m).forEach((k=>{props.add(k);Object.entries(m[k]).forEach((([kk,vv])=>(lookup[k]=lookup[k]||{})[vv]=kk))}));x.forEach((it=>Object.keys(it).filter((k=>props.has(k))).forEach((k=>it[k]=lookup[k][it[k]]||it[k]))));return x}static getProperty(obj,withDots){return withDots.split(".").reduce(((o,i)=>o[i]),obj)}async pAddToIndex(arbiter,json,options){options=options||{};const index=this._index;let id=this.id;const getToAdd=(it,toMerge,i)=>{const src=Omnidexer.getProperty(it,arbiter.source||"source");const hash=arbiter.hashBuilder?arbiter.hashBuilder(it,i):UrlUtil.URL_TO_HASH_BUILDER[arbiter.baseUrl](it);const toAdd={c:arbiter.category,s:this.getMetaId("s",src),id:id++,u:hash,p:Omnidexer.getProperty(it,arbiter.page||"page")};if(it.add_hash)toAdd.a=it.add_hash;if(arbiter.isHover)toAdd.h=1;if(options.alt){if(options.alt.additionalProperties)Object.entries(options.alt.additionalProperties).forEach((([k,getV])=>toAdd[k]=getV(it)))}Object.assign(toAdd,toMerge);return toAdd};const pHandleItem=async(it,i,name)=>{if(it.noDisplay)return;const toAdd=getToAdd(it,{n:name},i);if((options.isNoFilter||!arbiter.include&&!(arbiter.filter&&arbiter.filter(it))||!arbiter.filter&&(!arbiter.include||arbiter.include(it)))&&!arbiter.isOnlyDeep)index.push(toAdd);const primary={it:it,ix:i,parentName:name};const deepItems=await arbiter.pGetDeepIndex(this,primary,it,json);deepItems.forEach((item=>{const toAdd=getToAdd(it,item);if(!arbiter.filter||!arbiter.filter(it))index.push(toAdd)}))};const dataArr=Omnidexer.getProperty(json,arbiter.listProp);if(dataArr){for(let i=0;i<dataArr.length;++i){const it=dataArr[i];const name=Omnidexer.getProperty(it,arbiter.primary||"name");if(it.id)await pHandleItem(it,i,`${it.id}: ${name}`);else await pHandleItem(it,i,name);if(it.alias)it.alias.forEach((a=>pHandleItem(it,i,`${a} (${it.name})`)))}}this.id=id}pushToIndex(item){item.id=this.id++;this._index.push(item)}static arrIncludesOrEquals(checkAgainst,item){return checkAgainst instanceof Array?checkAgainst.includes(item):checkAgainst===item}getMetaId(k,v){this._metaMap[k]=this._metaMap[k]||{};if(this._metaMap[k][v]!=null)return this._metaMap[k][v];else{this._metaIndices[k]=this._metaIndices[k]||0;this._metaMap[k][v]=this._metaIndices[k];const out=this._metaIndices[k];this._metaIndices[k]++;return out}}}class TraitIndexer extends Omnidexer{constructor(){super();this._index={}}async pAddToIndex(arbiter,json,options){options=options||{};const index=this._index;const getToAdd=(it,i)=>{const src=TraitIndexer.getProperty(it,arbiter.source||"source");const hash=arbiter.hashBuilder?arbiter.hashBuilder(it,i):UrlUtil.URL_TO_HASH_BUILDER[arbiter.baseUrl](it);return{n:TraitIndexer.getProperty(it,arbiter.primary||"name"),s:this.getMetaId("s",src),u:hash}};const getAddTo=it=>arbiter.getTraits?arbiter.getTraits(it):[...it.traits||[]];const pHandleItem=async(it,i)=>{if(it.noDisplay)return;const toAdd=getToAdd(it,i);const addTo=getAddTo(it).map((t=>Parser.getTraitName(t).toLowerCase()));const cat=arbiter.category;addTo.forEach((t=>{index[t]=index[t]||{};(index[t][cat]=index[t][cat]||[]).push(toAdd)}))};const dataArr=TraitIndexer.getProperty(json,arbiter.listProp);if(dataArr){for(let i=0;i<dataArr.length;++i){const it=dataArr[i];await pHandleItem(it,i)}}}static decompressIndex(indexGroup){const{x:x,m:m}=indexGroup;const props=new Set;const lookup={};Object.keys(m).forEach((k=>{props.add(k);Object.entries(m[k]).forEach((([kk,vv])=>(lookup[k]=lookup[k]||{})[vv]=kk))}));Object.values(x).forEach((v=>Object.values(v).forEach((a=>a.forEach((it=>Object.keys(it).filter((k=>props.has(k))).forEach((k=>it[k]=lookup[k][it[k]]||it[k]))))))));return x}}class IndexableDirectory{constructor(opts){this.category=opts.category;this.dir=opts.dir;this.indexFile=opts.indexFile;this.primary=opts.primary;this.source=opts.source;this.listProp=opts.listProp;this.brewProp=opts.brewProp;this.baseUrl=opts.baseUrl;this.isHover=opts.isHover;this.alternateIndexes=opts.alternateIndexes;this.isOnlyDeep=opts.isOnlyDeep;this.pFnPreProcBrew=opts.pFnPreProcBrew;this.hashBuilder=opts.hashBuilder;this.getTraits=opts.getTraits}pGetDeepIndex(){return[]}}class IndexableDirectoryAncestries extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_ANCESTRY,dir:"ancestries",primary:"name",source:"source",listProp:"ancestry",baseUrl:"ancestries.html",isHover:true})}}class IndexableDirectoryHeritages extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_HERITAGE,dir:"ancestries",primary:"name",source:"source",listProp:"ancestry",baseUrl:"ancestries.html",isHover:false,isOnlyDeep:true})}pGetDeepIndex(indexer,primary,it){if(!it.heritage)return[];return it.heritage.map((h=>({b:h.name,n:`${h.name} (${primary.parentName})`,s:indexer.getMetaId("s",h.source),u:`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ANCESTRIES](it)}${HASH_PART_SEP}${UrlUtil.getAncestriesPageStatePart({heritage:h})}`,p:h.page})))}}class IndexableDirectoryVeHeritages extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_VE_HERITAGE,dir:"ancestries",primary:"name",source:"source",listProp:"versatileHeritage",baseUrl:"ancestries.html",isHover:false,hashBuilder:it=>`${HASH_BLANK}${HASH_PART_SEP}${UrlUtil.getAncestriesPageStatePart({heritage:it})}`})}}class IndexableDirectoryBackgrounds extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_BACKGROUND,dir:"backgrounds",primary:"name",source:"source",listProp:"background",baseUrl:"backgrounds.html",isHover:true})}}class IndexableDirectoryBestiary extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CREATURE,dir:"bestiary",primary:"name",source:"source",listProp:"creature",baseUrl:"bestiary.html",isHover:true,getTraits:cr=>{const traits=[];if(cr.rarity!=="Common")traits.push(cr.rarity);if(cr.alignment!=null)traits.push(cr.alignment);if(cr.size!=null)traits.push(cr.size);if(cr.traits!=null&&cr.traits.length)traits.push(...cr.traits);return traits}})}}class IndexableDirectoryFeats extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_FEAT,dir:"feats",primary:"name",source:"source",listProp:"feat",baseUrl:"feats.html",isHover:true})}}class IndexableDirectoryItems extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_ITEM,dir:"items",primary:"name",source:"source",listProp:"item",baseUrl:"items.html",isHover:true})}}class IndexableDirectorySpells extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SPELL,dir:"spells",primary:"name",source:"source",listProp:"spell",baseUrl:"spells.html",isHover:true,alternateIndexes:{spell:{additionalProperties:{lvl:spell=>spell.level}}}})}}class IndexableDirectoryClass extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CLASS,dir:"class",primary:"name",source:"source",listProp:"class",baseUrl:"classes.html",isHover:true})}}class IndexableDirectorySubclass extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SUBCLASS,dir:"class",primary:"name",source:"source",listProp:"class",brewProp:"subclass",baseUrl:"classes.html",isHover:true,isOnlyDeep:true,pFnPreProcBrew:IndexableDirectorySubclass._pPreProcessSubclassBrew})}pGetDeepIndex(indexer,primary,it){if(!it.subclasses)return[];return it.subclasses.map((sc=>({b:sc.name,n:`${sc.name} (${primary.parentName})`,s:indexer.getMetaId("s",sc.source),u:`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](it)}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc})}`,p:sc.page})))}static async _pPreProcessSubclassBrew(brew){const classData=await DataUtil.class.loadJSON();const subclasses=MiscUtil.copy(brew.subclass||[]);const sourceToClass={};subclasses.filter((sc=>sc.className)).forEach((sc=>{sc.classSource=sc.classSource||SRC_CRB;((sourceToClass[sc.classSource]=sourceToClass[sc.classSource]||{})[sc.className]=sourceToClass[sc.classSource][sc.className]||[]).push(sc)}));const out=[];Object.entries(sourceToClass).forEach((([source,classToScList])=>{Object.entries(classToScList).forEach((([className,scList])=>{let cls=classData.class.find((it=>it.name.toLowerCase()===className.toLowerCase()&&(it.source||SRC_CRB).toLowerCase()===source.toLowerCase()));if(!cls&&brew.class&&brew.class.length)cls=brew.class.find((it=>it.name.toLowerCase()===className.toLowerCase()&&(it.source||SRC_PHB).toLowerCase()===source.toLowerCase()));if(cls){const cpy=MiscUtil.copy(cls);cpy.subclasses=scList;out.push(cpy)}else{out.push({name:className,source:source,subclasses:scList})}}))}));return{[this.listProp]:out}}}class IndexableDirectoryClassFeature extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CLASS_FEATURE,dir:"class",primary:"name",source:"source",listProp:"classFeature",baseUrl:"classes.html",isOnlyDeep:true,isHover:true})}async pGetDeepIndex(indexer,primary,it,clsJson){const validClasses=clsJson.class.filter((c=>c.source===it.classSource&&c.name===it.className));const cls=validClasses.length?validClasses[0]:null;let ixFeature=-1;if(MiscUtil.isObject(cls)){const featuresLvl=cls.classFeatures.map((f=>typeof f==="string"?f:f.classFeature)).map((f=>DataUtil.class.unpackUidClassFeature(f))).filter((f=>f.level===it.level)).map((f=>f.name));ixFeature=featuresLvl.indexOf(it.name)}ixFeature=ixFeature===-1?0:ixFeature;const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:it.level-1,ixFeature:ixFeature}})}`;return[{n:`${it.className} ${it.level}; ${it.name}`,s:indexer.getMetaId("s",it.source),u:UrlUtil.URL_TO_HASH_BUILDER["classFeature"](it),uh:classPageHash,p:it.page}]}}class IndexableDirectorySubclassFeature extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SUBCLASS_FEATURE,dir:"class",primary:"name",source:"source",listProp:"subclassFeature",baseUrl:"classes.html",isOnlyDeep:true,isHover:true})}async pGetDeepIndex(indexer,primary,it,clsJson){const validClasses=clsJson.class.filter((c=>c.source===it.classSource&&c.name===it.className));const cls=validClasses.length?validClasses[0]:null;let ixFeature=-1;if(MiscUtil.isObject(cls)){const featuresLvl=cls.classFeatures.map((f=>typeof f==="string"?f:f.classFeature)).map((f=>DataUtil.class.unpackUidClassFeature(f))).filter((f=>f.level===it.level)).map((f=>f.name));ixFeature=featuresLvl.indexOf(it.name)}ixFeature=ixFeature===-1?0:ixFeature;const pageStateOpts={subclass:{shortName:it.subclassShortName,source:it.source},feature:{ixLevel:it.level-1,ixFeature:ixFeature}};const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart(pageStateOpts)}`;return[{n:`${it.subclassShortName} ${it.className} ${it.level}; ${it.name}`,s:indexer.getMetaId("s",it.source),u:UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"](it),uh:classPageHash,p:it.page}]}}Omnidexer.TO_INDEX__FROM_INDEX_JSON=[new IndexableDirectoryAncestries,new IndexableDirectoryHeritages,new IndexableDirectoryVeHeritages,new IndexableDirectoryBestiary,new IndexableDirectoryBackgrounds,new IndexableDirectoryFeats,new IndexableDirectoryItems,new IndexableDirectorySpells,new IndexableDirectoryClass,new IndexableDirectorySubclass,new IndexableDirectoryClassFeature,new IndexableDirectorySubclassFeature];class IndexableFile{constructor(opts){this.category=opts.category;this.file=opts.file;this.primary=opts.primary;this.source=opts.source;this.page=opts.page;this.listProp=opts.listProp;this.baseUrl=opts.baseUrl;this.hashBuilder=opts.hashBuilder;this.test_extraIndex=opts.test_extraIndex;this.isHover=opts.isHover;this.filter=opts.filter;this.include=opts.include;this.postLoad=opts.postLoad;this.isOnlyDeep=opts.isOnlyDeep;this.additionalIndexes=opts.additionalIndexes;this.getTraits=opts.getTraits}pGetDeepIndex(){return[]}}class IndexableFileBaseItems extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ITEM,file:"items/baseitems.json",listProp:"baseitem",baseUrl:"items.html",isHover:true})}}class IndexableFileArchetypes extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ARCHETYPE,file:"archetypes.json",listProp:"archetype",baseUrl:"archetypes.html",isHover:true})}}class IndexableFileConditions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_CONDITION,file:"conditions.json",listProp:"condition",baseUrl:"conditions.html",isHover:true})}}class IndexableFileDiseases extends IndexableFile{constructor(){super({category:Parser.CAT_ID_DISEASE,file:"afflictions.json",listProp:"disease",baseUrl:"afflictions.html",isHover:true})}}class IndexableFileCurses extends IndexableFile{constructor(){super({category:Parser.CAT_ID_CURSE,file:"afflictions.json",listProp:"curse",baseUrl:"afflictions.html",isHover:true})}}class IndexableFileVariantRules extends IndexableFile{constructor(){super({category:Parser.CAT_ID_VARIANT_RULE,file:"variantrules.json",listProp:"variantrule",baseUrl:"variantrules.html",isHover:true,include:it=>it.type!=="Subsystem"})}}class IndexableFileSubsystems extends IndexableFile{constructor(){super({category:Parser.CAT_ID_SUBSYSTEM,file:"variantrules.json",listProp:"variantrule",baseUrl:"variantrules.html",isHover:true,include:it=>it.type==="Subsystem"})}}class IndexableFileAdventures extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ADVENTURE,file:"adventures.json",source:"id",listProp:"adventure",baseUrl:"adventure.html"})}}class IndexableFileBooks extends IndexableFile{constructor(){super({category:Parser.CAT_ID_BOOK,file:"books.json",source:"id",listProp:"book",baseUrl:"book.html"})}}class IndexableFileQuickReference extends IndexableFile{constructor(){super({category:Parser.CAT_ID_QUICKREF,file:"generated/bookref-quick.json",listProp:"data.bookref-quick",baseUrl:"quickreference.html",hashBuilder:(it,ix)=>`bookref-quick,${ix}`,isOnlyDeep:true,isHover:true});this._walker=MiscUtil.getWalker()}static getChapterNameMetas(it){const nameMetas=[];const nameCounts={};const walker=MiscUtil.getWalker({isDepthFirst:true});walker.walk(it,{object:obj=>{if(!obj.data||obj.data.quickref==null&&!obj.data.quickrefIndex)return obj;const meta={};const lowName=obj.name.toLowerCase();nameCounts[lowName]=nameCounts[lowName]||0;nameCounts[lowName]++;meta.ixBook=nameCounts[lowName]-1;meta.alias=obj.alias;meta.name=obj.name;meta.source=obj.source;meta.page=obj.page;meta.entry=obj;nameMetas.push(meta);return obj}});return nameMetas}pGetDeepIndex(indexer,primary,it){return it.entries.map((it=>IndexableFileQuickReference.getChapterNameMetas(it).map((nameMeta=>[IndexableFileQuickReference._getDeepDoc(indexer,primary,nameMeta),...(nameMeta.alias||[]).map((alias=>IndexableFileQuickReference._getDeepDoc(indexer,primary,nameMeta,alias)))])).flat())).flat()}static _getDeepDoc(indexer,primary,nameMeta,alias){const hashParts=["bookref-quick",primary.ix,UrlUtil.encodeForHash(nameMeta.name.toLowerCase())];if(nameMeta.ixBook)hashParts.push(nameMeta.ixBook);else hashParts.push(0);return{n:alias||nameMeta.name,u:hashParts.join(HASH_PART_SEP),s:indexer.getMetaId("s",nameMeta.source),p:nameMeta.page}}}class IndexableFileDeities extends IndexableFile{constructor(){super({category:Parser.CAT_ID_DEITY,file:"deities.json",listProp:"deity",baseUrl:"deities.html",isHover:true})}}class IndexableFileOrganizations extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ORGANIZATION,file:"organizations.json",listProp:"organization",baseUrl:"organizations.html",isHover:true})}}class IndexableFileEvents extends IndexableFile{constructor(){super({category:Parser.CAT_ID_EVENT,file:"events.json",listProp:"event",baseUrl:"events.html",isHover:true})}}class IndexableFileRelicGifts extends IndexableFile{constructor(){super({category:Parser.CAT_ID_RELICGIFT,file:"relicgifts.json",listProp:"relicGift",baseUrl:"relicgifts.html",isHover:true})}}class IndexableFilePlaces extends IndexableFile{constructor(){super({category:Parser.CAT_ID_PLACE,file:"places.json",listProp:"place",baseUrl:"places.html",isHover:true})}}class IndexableFileHazards extends IndexableFile{constructor(){super({category:Parser.CAT_ID_HAZARD,file:"hazards.json",listProp:"hazard",baseUrl:"hazards.html",isHover:true})}}class IndexableFileTables extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TABLE,file:"tables.json",listProp:"table",baseUrl:"tables.html",isHover:true})}}class IndexableFileActions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ACTION,file:"actions.json",listProp:"action",baseUrl:"actions.html",isHover:true})}}class IndexableFileVehicles extends IndexableFile{constructor(){super({category:Parser.CAT_ID_VEHICLE,file:"vehicles.json",listProp:"vehicle",baseUrl:"vehicles.html",isHover:true})}}class IndexableFileCreatureAbilities extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ABILITY,file:"abilities.json",listProp:"ability",baseUrl:"abilities.html",isHover:true})}}class IndexableFileLanguages extends IndexableFile{constructor(){super({category:Parser.CAT_ID_LANGUAGE,file:"languages.json",listProp:"language",baseUrl:"languages.html",isHover:true})}pGetDeepIndex(indexer,primary,it){return(it.dialects||[]).map((d=>({n:d})))}}class IndexableFileTraits extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TRAIT,file:"traits.json",listProp:"trait",baseUrl:"traits.html",isHover:true})}}class IndexableFileCompanions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_COMPANION,file:"companionsfamiliars.json",listProp:"companion",baseUrl:"companionsfamiliars.html",isHover:true})}}class IndexableFileFamiliars extends IndexableFile{constructor(){super({category:Parser.CAT_ID_FAMILIAR,file:"companionsfamiliars.json",listProp:"familiar",baseUrl:"companionsfamiliars.html",isHover:true})}}class IndexableFileEidolons extends IndexableFile{constructor(){super({category:Parser.CAT_ID_EIDOLON,file:"companionsfamiliars.json",listProp:"eidolon",baseUrl:"companionsfamiliars.html",isHover:true})}}class IndexableFileRituals extends IndexableFile{constructor(){super({category:Parser.CAT_ID_RITUAL,file:"rituals.json",listProp:"ritual",baseUrl:"rituals.html",isHover:true})}}class IndexableFileOptionalFeatures extends IndexableFile{constructor(){super({category:Parser.CAT_ID_OPTIONAL_FEATURE,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>!["Basic Lesson","Greater Lesson","Major Lesson"].includes(it.type)})}}class IndexableFileOptionalFeaturesLessons extends IndexableFile{constructor(){super({category:Parser.CAT_ID_OPTIONAL_FEATURE,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>["Basic Lesson","Greater Lesson","Major Lesson"].includes(it.type)})}}Omnidexer.TO_INDEX=[new IndexableFileArchetypes,new IndexableFileBaseItems,new IndexableFileConditions,new IndexableFileDiseases,new IndexableFileCurses,new IndexableFileQuickReference,new IndexableFileVariantRules,new IndexableFileSubsystems,new IndexableFileBooks,new IndexableFileDeities,new IndexableFileOrganizations,new IndexableFileEvents,new IndexableFileRelicGifts,new IndexableFilePlaces,new IndexableFileHazards,new IndexableFileTables,new IndexableFileActions,new IndexableFileVehicles,new IndexableFileCreatureAbilities,new IndexableFileLanguages,new IndexableFileTraits,new IndexableFileCompanions,new IndexableFileFamiliars,new IndexableFileEidolons,new IndexableFileAdventures,new IndexableFileRituals,new IndexableFileOptionalFeatures,new IndexableFileOptionalFeaturesLessons];class IndexableSpecial{pGetIndex(){throw new Error(`Unimplemented!`)}}class IndexableSpecialPages extends IndexableSpecial{pGetIndex(){return Object.entries(UrlUtil.PG_TO_NAME).map((([page,name])=>({n:name,c:Parser.CAT_ID_PAGE,u:page})))}}Omnidexer.TO_INDEX__SPECIAL=[new IndexableSpecialPages];if(typeof module!=="undefined"){module.exports.Omnidexer=Omnidexer;module.exports.TraitIndexer=TraitIndexer};
"use strict";class Omnisearch{static init(){if(IS_VTT)return;const $nav=$(`#navbar`);this._$iptSearch=$(`<input class="form-control search omni__input" placeholder="${this._PLACEHOLDER_TEXT}" title="Hotkey: F. Disclaimer: unlikely to search everywhere. Use with caution.">`).disableSpellcheck();const $searchSubmit=$(`<button class="btn btn-default omni__submit" tabindex="-1"><span class="glyphicon glyphicon-search" type="submit"></span></button>`);this._$searchInputWrapper=$$`
			<div class="input-group omni__wrp-input">
				${this._$iptSearch}
				<div class="input-group-btn">
					${$searchSubmit}
				</div>
			</div>
		`.appendTo($nav);this._$searchOutWrapper=$(`<div class="omni__wrp-output"/>`).insertAfter($nav);this._$searchOut=$(`<div class="omni__output"/>`).appendTo(this._$searchOutWrapper);$(window).on("click",(()=>this._$searchOutWrapper.hide()));this._$searchOut.on("click",(e=>{e.stopPropagation();Renderer.hover.cleanTempWindows()}));this._$iptSearch.on("keydown",(evt=>{evt.stopPropagation();Renderer.hover.cleanTempWindows();switch(evt.key){case"Enter":if(evt.ctrlKey){window.location=`${Renderer.get().baseUrl}${UrlUtil.PG_SEARCH}?${this._$iptSearch.val()}`;break}this._clickFirst=true;$searchSubmit.click();break;case"ArrowUp":evt.preventDefault();break;case"ArrowDown":evt.preventDefault();this._$searchOut.find(`a.omni__lnk-name`).first().focus();break;case"Escape":this._$iptSearch.val("");this._$iptSearch.blur()}}));const TYPE_TIMEOUT_MS=100;const handleSubmitClick=evt=>{if(evt)evt.stopPropagation();Renderer.hover.cleanTempWindows();this._pDoSearch()};let typeTimer;this._$iptSearch.on("keyup",(e=>{this._clickFirst=false;if(e.which>=37&&e.which<=40)return;clearTimeout(typeTimer);typeTimer=setTimeout((()=>handleSubmitClick()),TYPE_TIMEOUT_MS)}));this._$iptSearch.on("keydown",(()=>clearTimeout(typeTimer)));this._$iptSearch.on("click",(e=>{e.stopPropagation();Renderer.hover.cleanTempWindows();if(this._$iptSearch.val()&&this._$iptSearch.val().trim().length)handleSubmitClick()}));$searchSubmit.on("click",(evt=>handleSubmitClick(evt)));this._init_initScrollHandler();$(document.body).on("keypress",(evt=>{if(!EventUtil.noModifierKeys(evt)||EventUtil.isInInput(evt))return;if(EventUtil.getKeyIgnoreCapsLock(evt)!=="F")return;evt.preventDefault();this._$iptSearch.select().focus()}))}static _init_initScrollHandler(){const $window=$(window);$window.on("scroll",(evt=>{if(Renderer.hover.isSmallScreen(evt)){this._$iptSearch.attr("placeholder",this._PLACEHOLDER_TEXT);this._$searchInputWrapper.removeClass("omni__wrp-input--scrolled");this._$searchOut.removeClass("omni__output--scrolled")}else{if($window.scrollTop()>50){this._$iptSearch.attr("placeholder","");this._$searchInputWrapper.addClass("omni__wrp-input--scrolled");this._$searchOut.addClass("omni__output--scrolled")}else{this._$iptSearch.attr("placeholder",this._PLACEHOLDER_TEXT);this._$searchInputWrapper.removeClass("omni__wrp-input--scrolled");this._$searchOut.removeClass("omni__output--scrolled")}}}))}static async pGetResults(searchTerm){await this.pInit();const basicTokens=searchTerm.split(/\s+/g);const tokenMetas=[];const filteredBasicTokens=basicTokens.filter((t=>{t=t.toLowerCase().trim();let category=Object.keys(this._CATEGORY_COUNTS).map((k=>k.toLowerCase())).find((k=>`in:${k}`===t||`in:${k}s`===t));if(!category){if(t==="in:creature"||t==="in:creatures")category="bestiary"}const mSource=/^source:(.*)$/.exec(t);const mPage=/^page:\s*(\d+)\s*(-\s*(\d+)\s*)?$/.exec(t);if(category||mSource||mPage){tokenMetas.push({token:t,hasCategory:!!category,hasSource:!!mSource,hasPageRange:!!mPage,category:category,source:mSource?mSource[1].trim():null,pageRange:mPage?[Number(mPage[1]),mPage[3]?Number(mPage[3]):Number(mPage[1])]:null});return false}return true}));let results;const specialTokenMetasCategory=tokenMetas.filter((it=>it.hasCategory));const specialTokenMetasSource=tokenMetas.filter((it=>it.hasSource));const specialTokenMetasPageRange=tokenMetas.filter((it=>it.hasPageRange));if((specialTokenMetasCategory.length===1||specialTokenMetasSource.length>=1||specialTokenMetasPageRange.length>=1)&&specialTokenMetasCategory.length<=1){const categoryTerm=specialTokenMetasCategory.length?specialTokenMetasCategory[0].category.toLowerCase():null;const sourceTerms=specialTokenMetasSource.map((it=>it.source));const pageRanges=specialTokenMetasPageRange.map((it=>it.pageRange));const searchTerm=filteredBasicTokens.join(" ");results=searchTerm?this._searchIndex.search(searchTerm,{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true}):Object.values(this._searchIndex.documentStore.docs).map((it=>({doc:it})));results=results.filter((r=>!categoryTerm||r.doc.cf.toLowerCase()===categoryTerm)).filter((r=>!sourceTerms.length||r.doc.s&&sourceTerms.includes(r.doc.s.toLowerCase()))).filter((r=>!pageRanges.length||r.doc.p&&pageRanges.some((range=>r.doc.p>=range[0]&&r.doc.p<=range[1]))))}else{results=this._searchIndex.search(searchTerm,{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true})}if(!this._state.isShowUnofficial){results=results.filter((r=>!r.doc.s||!SourceUtil.isNonstandardSource(r.doc.s)))}if(!this._state.isShowBlacklisted&&ExcludeUtil.getList().length){results=results.filter((r=>{if(r.doc.c===Parser.CAT_ID_QUICKREF||r.doc.c===Parser.CAT_ID_PAGE)return true;const bCat=Parser.pageCategoryToProp(r.doc.c);return!ExcludeUtil.isExcluded(r.doc.u,bCat,r.doc.s,{isNoCount:true})}))}return results}static async _pDoSearch(){const results=await this.pGetResults(this._$iptSearch.val());this._pDoSearch_renderLinks(results)}static _renderLink_getHoverString(category,url,src){return`onmouseover="Renderer.hover.pHandleLinkMouseOver(event, this, '${UrlUtil.categoryToHoverPage(category)}', '${src}', '${url.replace(/'/g,"\\'")}')" onmouseleave="Renderer.hover.handleLinkMouseLeave(event, this)" onmousemove="Renderer.hover.handleLinkMouseMove(event, this)" ${Renderer.hover.getPreventTouchString()}`}static $getResultLink(r){const href=r.c===Parser.CAT_ID_PAGE?r.u:`${Renderer.get().baseUrl}${UrlUtil.categoryToPage(r.c)}#${r.uh||r.u}`;return $(`<a href="${href}" ${r.h?this._renderLink_getHoverString(r.c,r.u,r.s):""} class="omni__lnk-name">${r.cf}: ${r.n}${r.a?`<span class="text-muted"> (${r.a.toTitleCase()})</span>`:""}</a>`)}static _pDoSearch_renderLinks(results,page=0){let isInitialHooks=true;if(this._$btnToggleUnofficial)this._$btnToggleUnofficial.detach();else{this._$btnToggleUnofficial=$(`<button class="btn btn-default btn-xs mr-2" title="Include unofficial source results" tabindex="-1">Include unofficial</button>`).on("click",(()=>this._state.isShowUnofficial=!this._state.isShowUnofficial));const hkIsUnofficial=()=>{this._$btnToggleUnofficial.toggleClass("active",this._state.isShowUnofficial);this._pDoSearch()};this._state._addHookBase("isShowUnofficial",hkIsUnofficial);hkIsUnofficial()}if(this._$btnToggleBlacklisted)this._$btnToggleBlacklisted.detach();else{this._$btnToggleBlacklisted=$(`<button class="btn btn-default btn-xs mr-2" title="Include blacklisted content results" tabindex="-1">Include Blacklisted</button>`).on("click",(async()=>this._state.isShowBlacklisted=!this._state.isShowBlacklisted));const hkIsBlacklisted=()=>{this._$btnToggleBlacklisted.toggleClass("active",this._state.isShowBlacklisted);if(!isInitialHooks)this._pDoSearch()};this._state._addHookBase("isShowBlacklisted",hkIsBlacklisted);hkIsBlacklisted()}isInitialHooks=false;this._$searchOut.empty();const $btnHelp=$(`<button class="btn btn-default btn-xs" title="Help"><span class="glyphicon glyphicon-info-sign"></span></button>`).click((()=>this.doShowHelp()));this._$searchOut.append($(`<div class="text-right"/>`).append([this._$btnToggleUnofficial,this._$btnToggleBlacklisted,$btnHelp]));const base=page*this._MAX_RESULTS;for(let i=base;i<Math.max(Math.min(results.length,this._MAX_RESULTS+base),base);++i){const r=results[i].doc;const $link=this.$getResultLink(r).keydown((evt=>this.handleLinkKeyDown(evt,$link)));const{s:source,p:page}=r;const ptPageInner=page?`p${page}`:"";const adventureBookSourceHref=SourceUtil.getAdventureBookSourceHref(source,page);const ptPage=ptPageInner&&adventureBookSourceHref?`<a href="${adventureBookSourceHref}">${ptPageInner}</a>`:ptPageInner;const ptSourceInner=source?`<span class="${Parser.sourceJsonToColor(source)}" ${BrewUtil.sourceJsonToStyle(source)} title="${Parser.sourceJsonToFull(source)}">${Parser.sourceJsonToAbv(source)}</span>`:`<span></span>`;const ptSource=ptPage||!adventureBookSourceHref?ptSourceInner:`<a href="${adventureBookSourceHref}">${ptSourceInner}</a>`;$$`<div class="omni__row-result split-v-center stripe-odd">
				${$link}
				<div class="inline-block">
					${ptSource}
					${ptPage}
				</div>
			</div>`.appendTo(this._$searchOut)}this._$searchOutWrapper.css("display","flex");if(results.length>this._MAX_RESULTS){const $pgControls=$(`<div class="omni__wrp-paginate">`);if(page>0){const $prv=$(`<span class="omni__paginate-left has-results-left omni__paginate-ctrl"><span class="glyphicon glyphicon-chevron-left"></span></span>`).on("click",(()=>{page--;this._pDoSearch_renderLinks(results,page)}));$pgControls.append($prv)}else $pgControls.append(`<span class="omni__paginate-left">`);$pgControls.append(`<span class="paginate-count">Page ${page+1}/${Math.ceil(results.length/this._MAX_RESULTS)} (${results.length} results)</span>`);if(results.length-page*this._MAX_RESULTS>this._MAX_RESULTS){const $nxt=$(`<span class="omni__paginate-right has-results-right omni__paginate-ctrl"><span class="glyphicon glyphicon-chevron-right"></span></span>`).on("click",(()=>{page++;this._pDoSearch_renderLinks(results,page)}));$pgControls.append($nxt)}else $pgControls.append(`<span class="omni__paginate-right omni__paginate-ctrl">`);this._$searchOut.append($pgControls)}if(this._clickFirst&&results.length){this._$searchOut.find(`a.omni__lnk-name`).first()[0].click()}if(!results.length){this._$searchOut.append(`<div class="ve-muted"><i>No results found.</i></div>`)}}static async pInit(){this.initState();if(!this._searchIndex){if(this._pLoadSearch)await this._pLoadSearch;else{this._pLoadSearch=this._pDoSearchLoad();await this._pLoadSearch;this._pLoadSearch=null}}}static initState(){if(this._state)return;const saved=StorageUtil.syncGet(this._STORAGE_NAME)||{isShowUnofficial:true,isShowBlacklisted:false};class SearchState extends BaseComponent{get isShowUnofficial(){return this._state.isShowUnofficial}get isShowBlacklisted(){return this._state.isShowBlacklisted}set isShowUnofficial(val){this._state.isShowUnofficial=val}set isShowBlacklisted(val){this._state.isShowBlacklisted=val}}this._state=SearchState.fromObject(saved);this._state._addHookAll("state",(()=>{StorageUtil.syncSet(this._STORAGE_NAME,this._state.toObject())}))}static addHookUnofficial(hk){this._state._addHookBase("isShowUnofficial",hk)}static addHookBlacklisted(hk){this._state._addHookBase("isShowBlacklisted",hk)}static doToggleUnofficial(){this._state.isShowUnofficial=!this._state.isShowUnofficial}static doToggleBlacklisted(){this._state.isShowBlacklisted=!this._state.isShowBlacklisted}static get isShowUnofficial(){return this._state.isShowUnofficial}static get isShowBlacklisted(){return this._state.isShowBlacklisted}static async _pDoSearchLoad(){const data=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index.json`));elasticlunr.clearStopWords();this._searchIndex=elasticlunr((function(){this.addField("n");this.addField("cf");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(this._searchIndex);data.forEach((it=>this._addToIndex(it)));this.highestId=data.last().id;const brewIndex=await BrewUtil.pGetSearchIndex();brewIndex.forEach((it=>this._addToIndex(it)));if(brewIndex.length)this.highestId=brewIndex.last().id;this._adventureBookLookup={};[brewIndex,data].forEach((index=>{index.forEach((it=>{if(it.c===Parser.CAT_ID_ADVENTURE||it.c===Parser.CAT_ID_BOOK)this._adventureBookLookup[it.s.toLowerCase()]=it.c}))}))}static async pAddToIndex(prop,...entries){if(!entries.length)return;await this.pInit();const indexer=new Omnidexer(this.highestId+1);const toIndex={[prop]:entries};const toIndexMultiPart=Omnidexer.TO_INDEX__FROM_INDEX_JSON.filter((it=>it.listProp===prop));for(const it of toIndexMultiPart){await indexer.pAddToIndex(it,toIndex)}const toIndexSingle=Omnidexer.TO_INDEX.filter((it=>it.listProp===prop));for(const it of toIndexSingle){await indexer.pAddToIndex(it,toIndex)}const toAdd=Omnidexer.decompressIndex(indexer.getIndex());toAdd.forEach((it=>this._addToIndex(it)));if(toAdd.length)this.highestId=toAdd.last().id}static _addToIndex(d){d.cf=Parser.pageCategoryToFull(d.c);if(!this._CATEGORY_COUNTS[d.cf])this._CATEGORY_COUNTS[d.cf]=1;else this._CATEGORY_COUNTS[d.cf]++;this._searchIndex.addDoc(d)}static handleLinkKeyDown(e,$ele){Renderer.hover.cleanTempWindows();switch(e.which){case 37:{e.preventDefault();if($(`.has-results-left`).length){const ix=$ele.parent().index()-1;$(`.omni__paginate-left`).click();const $psNext=this._$searchOut.find(`.omni__row-result`);$($psNext[ix]||$psNext[$psNext.length-1]).find(`a.omni__lnk-name`).focus()}break}case 38:{e.preventDefault();if($ele.parent().prev().find(`a.omni__lnk-name`).length){$ele.parent().prev().find(`a.omni__lnk-name`).focus()}else if($(`.has-results-left`).length){$(`.omni__paginate-left`).click();this._$searchOut.find(`a.omni__lnk-name`).last().focus()}else{this._$iptSearch.focus()}break}case 39:{e.preventDefault();if($(`.has-results-right`).length){const ix=$ele.parent().index()-1;$(`.omni__paginate-right`).click();const $psNext=this._$searchOut.find(`.omni__row-result`);$($psNext[ix]||$psNext[$psNext.length-1]).find(`a.omni__lnk-name`).focus()}break}case 40:{e.preventDefault();if($ele.parent().next().find(`a.omni__lnk-name`).length){$ele.parent().next().find(`a.omni__lnk-name`).focus()}else if($(`.has-results-right`).length){$(`.omni__paginate-right`).click();this._$searchOut.find(`a.omni__lnk-name`).first().focus()}break}}}static addScrollTopFloat(){const $btnToTop=$(`<button class="btn btn-sm btn-default" title="To Top"><span class="glyphicon glyphicon-chevron-up"/></button>`).click((()=>MiscUtil.scrollPageTop()));const $wrpTop=$$`<div class="bk__to-top">
			${$btnToTop}
		</div>`.appendTo(document.body);$(window).on("scroll",(()=>{if($(window).scrollTop()>50)$wrpTop.addClass("bk__to-top--scrolled");else $wrpTop.removeClass("bk__to-top--scrolled")}));return $wrpTop}static doShowHelp(){const{$modalInner:$modalInner}=UiUtil.getShowModal({title:"Help",isMinHeight0:true});$modalInner.append(`\n\t\t\t<p>The following search syntax is available:</p>\n\t\t\t<ul>\n\t\t\t\t<li><code>in:&lt;category&gt;</code> where <code>&lt;category&gt;</code> can be &quot;spell&quot;, &quot;item&quot;, &quot;bestiary&quot;, etc.</li>\n\t\t\t\t<li><code>source:&lt;abbreviation&gt;</code> where <code>&lt;abbreviation&gt;</code> is an abbreviated source/book name (&quot;CRB&quot;, &quot;Bst&quot;, etc.)</li>\n\t\t\t\t<li><code>page:&lt;number&gt;</code> or <code>page:&lt;rangeStart&gt;-&lt;rangeEnd&gt;</code></li>\n\t\t\t</ul>\n\t\t`)}}Omnisearch._PLACEHOLDER_TEXT="Search everywhere...";Omnisearch._searchIndex=null;Omnisearch._adventureBookLookup=null;Omnisearch._pLoadSearch=null;Omnisearch._CATEGORY_COUNTS={};Omnisearch.highestId=-1;Omnisearch._$btnToggleUnofficial=null;Omnisearch._$btnToggleBlacklisted=null;Omnisearch._$searchOut=null;Omnisearch._$searchOutWrapper=null;Omnisearch._$searchInputWrapper=null;Omnisearch._$wrpNoResultsFound=null;Omnisearch._clickFirst=false;Omnisearch._MAX_RESULTS=15;Omnisearch._STORAGE_NAME="search";window.addEventListener("load",(()=>Omnisearch.init()));;
function Renderer(){this.wrapperTag="div";this.baseUrl="";this.baseMediaUrls={};this._lazyImages=false;this._firstSection=true;this._isAddHandlers=true;this._headerIndex=1;this._tagExportDict=null;this._trackTitles={enabled:false,titles:{}};this._enumerateTitlesRel={enabled:false,titles:{}};this._hooks={};this._fnPostProcess=null;this._extraSourceClasses=null;this._isInternalLinksDisabled=false;this._fnsGetStyleClasses={};this.setLazyImages=function(bool){if(typeof IntersectionObserver==="undefined")this._lazyImages=false;else this._lazyImages=!!bool;return this};this.setWrapperTag=function(tag){this.wrapperTag=tag;return this};this.setBaseUrl=function(url){this.baseUrl=url;return this};this.setBaseMediaUrl=function(mediaDir,url){this.baseMediaUrls[mediaDir]=url;return this};this.setFirstSection=function(bool){this._firstSection=bool;return this};this.setAddHandlers=function(bool){this._isAddHandlers=bool;return this};this.setFnPostProcess=function(fn){this._fnPostProcess=fn;return this};this.setExtraSourceClasses=function(arr){this._extraSourceClasses=arr;return this};this.resetHeaderIndex=function(){this._headerIndex=1;this._trackTitles.titles={};this._enumerateTitlesRel.titles={};return this};this.doExportTags=function(toObj){this._tagExportDict=toObj;return this};this.resetExportTags=function(){this._tagExportDict=null;return this};this.setInternalLinksDisabled=function(bool){this._isInternalLinksDisabled=bool;return this};this.isInternalLinksDisabled=function(){return!!this._isInternalLinksDisabled};this.setFnGetStyleClasses=function(identifier,fn){this._fnsGetStyleClasses[identifier]=fn;return this};this.setEnumerateTitlesRel=function(bool){this._enumerateTitlesRel.enabled=bool;return this};this._getEnumeratedTitleRel=function(name){if(this._enumerateTitlesRel.enabled&&name){const clean=name.toLowerCase();this._enumerateTitlesRel.titles[clean]=this._enumerateTitlesRel.titles[clean]||0;return`data-title-relative-index="${this._enumerateTitlesRel.titles[clean]++}"`}else return""};this.setTrackTitles=function(bool){this._trackTitles.enabled=bool;return this};this.getTrackedTitles=function(){return MiscUtil.copy(this._trackTitles.titles)};this._handleTrackTitles=function(name){if(this._trackTitles.enabled){this._trackTitles.titles[this._headerIndex]=name}};this.addHook=function(entryType,hookType,fnHook){((this._hooks[entryType]=this._hooks[entryType]||{})[hookType]=this._hooks[entryType][hookType]||[]).push(fnHook)};this.removeHook=function(entryType,hookType,fnHook){const ix=((this._hooks[entryType]=this._hooks[entryType]||{})[hookType]=this._hooks[entryType][hookType]||[]).indexOf(fnHook);if(~ix)this._hooks[entryType][hookType].splice(ix,1)};this._getHooks=function(entryType,hookType){return(this._hooks[entryType]||{})[hookType]||[]};this.recursiveRender=function(entry,textStack,options){if(entry instanceof Array){if(!entry.length){entry=["{@note No entries found.}"]}entry.forEach((nxt=>this.recursiveRender(nxt,textStack,options)));return}if(textStack.length===0)textStack[0]="";else textStack.reverse();const meta={};meta._typeStack=[];this._recursiveRender(entry,textStack,meta,options);if(this._fnPostProcess)textStack[0]=this._fnPostProcess(textStack[0]);textStack.reverse()};this._recursiveRender=function(entry,textStack,meta,options){if(entry==null)return;if(!textStack)throw new Error("Missing stack!");if(!meta)throw new Error("Missing metadata!");options=options||{};if(options.pf2StatFix&&!options.prefix&&!options.suffix){options.prefix=`<p class="pf2-stat__text">`;options.suffix="</p>"}meta._didRenderPrefix=false;meta._didRenderSuffix=false;if(typeof entry==="object"){const type=entry.type==null?"entries":entry.type;meta._typeStack.push(type);switch(type){case"section":case"chapter":case"pf2-h1":this._renderPf2H1(entry,textStack,meta,options);break;case"pf2-h1-flavor":this._renderPf2H1Flavor(entry,textStack,meta,options);break;case"pf2-h2":this._renderPf2H2(entry,textStack,meta,options);break;case"pf2-h3":this._renderPf2H3(entry,textStack,meta,options);break;case"pf2-h4":this._renderPf2H4(entry,textStack,meta,options);break;case"pf2-h5":this._renderPf2H5(entry,textStack,meta,options);break;case"pf2-sidebar":this._renderPf2Sidebar(entry,textStack,meta,options);break;case"pf2-inset":this._renderPf2Inset(entry,textStack,meta,options);break;case"pf2-tips-box":this._renderPf2TipsBox(entry,textStack,meta,options);break;case"pf2-sample-box":this._renderPf2SampleBox(entry,textStack,meta,options);break;case"pf2-beige-box":this._renderPf2SampleBox(entry,textStack,meta,{beige:true,...options});break;case"pf2-red-box":this._renderPf2RedBox(entry,textStack,meta,options);break;case"pf2-brown-box":this._renderPf2BrownBox(entry,textStack,meta,options);break;case"pf2-key-ability":this._renderPf2KeyAbility(entry,textStack,meta,options);break;case"pf2-key-box":this._renderPf2KeyBox(entry,textStack,meta,options);break;case"pf2-title":this._renderPf2Title(entry,textStack,meta,options);break;case"pf2-options":this._renderPf2Options(entry,textStack,meta,options);break;case"entries":this._renderEntries(entry,textStack,meta,options);break;case"text":this._renderText(entry,textStack,meta,options);break;case"entriesOtherSource":this._renderEntriesOtherSource(entry,textStack,meta,options);break;case"list":this._renderList(entry,textStack,meta,options);break;case"table":this._renderTable(entry,textStack,meta,options);break;case"tableGroup":this._renderTableGroup(entry,textStack,meta,options);break;case"paper":this._renderPaper(entry,textStack,meta,options);break;case"quote":this._renderQuote(entry,textStack,meta,options);break;case"affliction":this._renderAffliction(entry,textStack,meta,options);break;case"successDegree":this._renderSuccessDegree(entry,textStack,meta,options);break;case"lvlEffect":this._renderLeveledEffect(entry,textStack,meta,options);break;case"attack":this._renderAttack(entry,textStack,meta,options);break;case"ability":this._renderAbility(entry,textStack,meta,options);break;case"inline":this._renderInline(entry,textStack,meta,options);break;case"inlineBlock":this._renderInlineBlock(entry,textStack,meta,options);break;case"dice":this._renderDice(entry,textStack,meta,options);break;case"link":this._renderLink(entry,textStack,meta,options);break;case"item":this._renderItem(entry,textStack,meta,options);break;case"data":this._renderData(entry,textStack,meta,options);break;case"image":this._renderImage(entry,textStack,meta,options);break;case"gallery":this._renderGallery(entry,textStack,meta,options);break;case"homebrew":this._renderHomebrew(entry,textStack,meta,options);break;case"code":this._renderCode(entry,textStack,meta,options);break;case"hr":this._renderHr(entry,textStack,meta,options);break}meta._typeStack.pop()}else if(typeof entry==="string"){this._renderPrefix(entry,textStack,meta,options);this._renderString(entry,textStack,meta,options);this._renderSuffix(entry,textStack,meta,options)}else{this._renderPrefix(entry,textStack,meta,options);this._renderPrimitive(entry,textStack,meta,options);this._renderSuffix(entry,textStack,meta,options)}};this._renderPrefix=function(entry,textStack,meta,options){if(meta._didRenderPrefix)return;if(options.prefix!=null){textStack[0]+=options.prefix;meta._didRenderPrefix=true}};this._renderSuffix=function(entry,textStack,meta,options){if(meta._didRenderSuffix)return;if(options.suffix!=null){textStack[0]+=options.suffix;meta._didRenderSuffix=true}};this._renderEntries=function(entry,textStack,meta,options){textStack[0]+=`<p>`;entry.entries.forEach((e=>this._recursiveRender(e,textStack,meta,options)));textStack[0]+=`</p>`};this._renderText=function(entry,textStack,meta,options){entry.entries.forEach((e=>this._recursiveRender(e,textStack,meta,{prefix:`<p class="${entry.style||""}">`,suffix:`</p>`})))};this._renderEntriesOtherSource=function(entry,textStack,meta,options){this._getReference(entry);if(entry.entries&&entry?.entries?.length){textStack[0]+=`<div class="pf2-wrp-other-source mb-3">`;textStack[0]+=`<hr class="hr-other-source">`;entry.entries.forEach((e=>this._recursiveRender(e,textStack,meta,{prefix:`<p class="pf2-other-source">`,suffix:`</p>`})));if(!entry.reference)textStack[0]+=Renderer.utils.getPageP(entry,{prefix:"—",noReprints:true});textStack[0]+=`</div>`}};this._renderImage=function(entry,textStack,meta,options){function getStylePart(){return entry.maxWidth?`style="max-width: ${entry.maxWidth}px"`:""}if(entry.imageType==="map")textStack[0]+=`<div class="rd__wrp-map">`;this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`<div class="${meta._typeStack.includes("gallery")?"rd__wrp-gallery-image":""}">`;const href=this._renderImage_getUrl(entry);const maxRes=entry.maxRes?Renderer.utils.getMediaUrl(entry,"maxRes","img"):null;const svg=this._lazyImages&&entry.width!=null&&entry.height!=null?`data:image/svg+xml,${encodeURIComponent(`<svg xmlns="http://www.w3.org/2000/svg" width="${entry.width}" height="${entry.height}"><rect width="100%" height="100%" fill="#ccc3"></rect></svg>`)}`:null;textStack[0]+=`<div class="${this._renderImage_getWrapperClasses(entry,meta)}">\n\t\t\t<a href="${maxRes||href}" target="_blank" rel="noopener noreferrer" ${entry.title?`title="${Renderer.stripTags(entry.title)}"`:""}>\n\t\t\t\t<img class="${this._renderImage_getImageClasses(entry,meta)}" src="${svg||href}" ${entry.altText?`alt="${entry.altText}"`:""} ${svg?`data-src="${href}"`:""} ${getStylePart()}>\n\t\t\t</a>\n\t\t</div>`;if(entry.title||entry.mapRegions){textStack[0]+=`<div class="rd__image-title">\n\t\t\t\t${entry.title?`<div class="rd__image-title-inner ${entry.title&&entry.mapRegions?"mr-2":""}">${this.render(entry.title)}</div>`:""}\n\t\t\t\t${entry.mapRegions?`<button class="btn btn-xs btn-default rd__image-btn-viewer" onclick="RenderMap.pShowViewer(event, this)" data-rd-packed-map="${this._renderImage_getMapRegionData(entry)}"><span class="glyphicon glyphicon-picture"></span> Dynamic Viewer</button>`:""}\n\t\t\t</div>`}else if(entry._galleryTitlePad)textStack[0]+=`<div class="rd__image-title">&nbsp;</div>`;textStack[0]+=`</div>`;this._renderSuffix(entry,textStack,meta,options);if(entry.imageType==="map")textStack[0]+=`</div>`};this._renderImage_getMapRegionData=function(entry){return JSON.stringify(this.getMapRegionData(entry)).escapeQuotes()};this.getMapRegionData=function(entry){return{regions:entry.mapRegions,width:entry.width,height:entry.height,href:this._renderImage_getUrl(entry),hrefThumbnail:this._renderImage_getUrlThumbnail(entry)}};this._renderImage_getWrapperClasses=function(entry){const out=["rd__wrp-image","relative"];if(entry.style){switch(entry.style){case"comic-speaker-left":out.push("rd__comic-img-speaker","rd__comic-img-speaker--left");break;case"comic-speaker-right":out.push("rd__comic-img-speaker","rd__comic-img-speaker--right");break}}return out.join(" ")};this._renderImage_getImageClasses=function(entry){const out=["rd__image"];if(entry.style){switch(entry.style){case"deity-symbol":out.push("rd__img-small");break;case"cover":out.push("rd__img-cover");break}}return out.join(" ")};this._renderImage_getUrl=function(entry){return Renderer.utils.getMediaUrl(entry,"href","img")};this._renderImage_getUrlThumbnail=function(entry){return Renderer.utils.getMediaUrl(entry,"hrefThumbnail","img")};this._renderTableGroup=function(entry,textStack,meta,options){const len=entry.tables.length;for(let i=0;i<len;++i){const addStyles=`${i===0?"":"mt-0"} ${i===len-1?"":"mb-0"}`;this._renderTable(entry.tables[i],textStack,meta,{addStyles:addStyles})}};this._renderTable=function(entry,textStack,meta,options){const numCol=Math.max(...entry.rows.map((x=>x.type==="multiRow"?x.rows.map((y=>y.length)):x.length)).flat());const gridTemplate=entry.colSizes?entry.colSizes.map((x=>`${String(x)}fr`)).join(" "):"1fr ".repeat(numCol);textStack[0]+=`<div class="${entry.style||"pf2-table"} ${this._firstSection?"mt-0":""} ${entry.rollable?"pf2-table--rollable":""} ${options.addStyles||""}" style="grid-template-columns: ${gridTemplate}">`;if(entry.style&&entry.style.includes("pf2-box__table--red")){if(entry.colStyles==null)entry.colStyles=Array(numCol).fill("");entry.colStyles[0]+=" no-border-left";entry.colStyles[numCol-1]+=" no-border-right"}if(entry.name){if(entry.id){textStack[0]+=`<div class="pf2-table__caption ${this._firstSection?"":"mt-3"}">TABLE ${entry.id}: ${entry.name}</div>`}else{textStack[0]+=`<div class="pf2-table__name ${this._firstSection?"":"mt-3"}">${entry.name}</div>`}this._firstSection=false}if(entry.intro){const len=entry.intro.length;for(let i=0;i<len;++i){let styles=`${entry.introStyles?entry.introStyles[i]||"":""}`;this._recursiveRender(entry.intro[i],textStack,meta,{prefix:`<div class="pf2-table__intro ${styles}">`,suffix:"</div>"})}}const lenRows=entry.rows.length;const labelRowIdx=entry.labelRowIdx?entry.labelRowIdx:[0];let rowParity=0;let idxSpan=0;const renderRow=(row,idxRow,minButton)=>{const lenCol=row.length;const dataStr=idxRow?this._renderTable_getDataStr(row,entry.rollable):"";if(row.type==="multiRow"){row.rows.forEach(((r,i)=>{renderRow(r,idxRow,i===0?minButton:"");rowParity=(rowParity+1)%2}));rowParity=(rowParity+1)%2}else if(lenCol===numCol){for(let idxCol=0;idxCol<lenCol;++idxCol){let styles=this._renderTable_getStyles(entry,idxRow,idxCol,false,rowParity);textStack[0]+=`<div class="${styles}" ${idxCol?dataStr:""}><span>`;this._recursiveRender(row[idxCol],textStack,meta);textStack[0]+=idxCol===lenCol-1?minButton:"";textStack[0]+=`</span></div>`}if(labelRowIdx.includes(idxRow)){rowParity=0}else{rowParity=(rowParity+1)%2}}else{let last_end=1;for(let idxCol=0;idxCol<lenCol;++idxCol){let styles=this._renderTable_getStyles(entry,idxRow,idxCol,true,rowParity);let span=entry.spans[idxSpan][idxCol];if(last_end!==span[0]){textStack[0]+=`<div class="${styles}" style="grid-column:${last_end}/${span[0]}" ${idxCol?dataStr:""}></div>`}textStack[0]+=`<div class="${styles}" style="grid-column:${span[0]}/${span[1]}" ${idxCol?dataStr:""}><span>${this.render(row[idxCol])}${span[1]===numCol+1?minButton:""}</span></div>`;last_end=span[1]}if(last_end!==numCol+1){let styles=this._renderTable_getStyles(entry,idxRow,numCol,true,rowParity);textStack[0]+=`<div class="${styles}" style="grid-column:${last_end}/${numCol}" ${dataStr}><span>${minButton}</span></div>`}if(labelRowIdx.includes(idxRow)){rowParity=0}else{rowParity=(rowParity+1)%2}idxSpan+=1}};for(let idxRow=0;idxRow<lenRows;++idxRow){const minButton=entry.minimizeTo&&entry.minimizeTo[0]===idxRow?this._renderTable_getMinimizeButton():"";const row=entry.rows[idxRow];renderRow(row,idxRow,minButton)}if(entry.footnotes!=null){const len=entry.footnotes.length;for(let i=0;i<len;++i){let styles=`${entry.footStyles?entry.footStyles[i]||"":""}`;this._recursiveRender(entry.footnotes[i],textStack,meta,{prefix:`<div class="pf2-table__footnote pf2-table--minimize ${styles}">`,suffix:"</div>"})}}if(entry.outro){const len=entry.outro.length;for(let i=0;i<len;++i){let styles=`${entry.outroStyles?entry.outroStyles[i]||"":""}`;this._recursiveRender(entry.outro[i],textStack,meta,{prefix:`<div class="pf2-table__outro ${styles}">`,suffix:"</div>"})}}textStack[0]+=`</div>`};this._renderTable_getMinimizeButton=function(){return`<div class="inline-block" style="float: right" onclick="((ele) => {\n\t\t\t\t\t\t$(ele).text($(ele).text().includes('+') ? ' [–]' : ' [+]');\n\t\t\t\t\t\t$(ele).parent().parent().siblings('.pf2-table--minimize').toggle()\n\t\t\t\t\t})(this)">[–]</div>`};this._renderTable_getStyles=function(entry,rowIdx,colIdx,noColStyle,rowParity){const labelRowIdx=entry.labelRowIdx?entry.labelRowIdx:[0];const labelColIdx=entry.labelColIdx?entry.labelColIdx:[];const minTo=entry.minimizeTo&&!entry.minimizeTo.includes(rowIdx)?`pf2-table--minimize`:"";let row_styles="";let col_styles="";let cell_styles="";let type_styles="";if(entry.rowStyles&&typeof entry.rowStyles[0]==="string"){row_styles=`${entry.rowStyles?entry.rowStyles[rowIdx]||"":""}`}else if(entry.rowStyles){for(let rs of entry.rowStyles){if(rs.row===rowIdx){row_styles=rs.style;break}}}if(!noColStyle&&entry.colStyles&&typeof entry.colStyles[0]==="string"){col_styles=`${entry.colStyles?entry.colStyles[colIdx]||"":""}`}else if(!noColStyle&&entry.colStyles){for(let cs of entry.colStyles){if(cs.col===rowIdx){col_styles=cs.style;break}}}if(entry.cellStyles){for(let cs of entry.cellStyles){if(cs.row===rowIdx&&cs.col===colIdx){cell_styles=cs.style;break}}}if(labelRowIdx.includes(rowIdx)){type_styles="pf2-table__label"}else if(!noColStyle&&labelColIdx.includes(colIdx)){type_styles="pf2-table__label"}else{type_styles=`pf2-table__entry ${rowParity?"odd":""}`}return`${row_styles} ${col_styles} ${cell_styles} ${type_styles} ${minTo}`};this._renderTable_getDataStr=function(row,roll){if(roll){let min;let max;const firstCell=String(row.type==="multiRow"?row.rows[0][0]:row[0]).trim();const mLowHigh=/^(\d+)( or (?:lower|higher|less)$|(\+)$)/i.exec(firstCell);if(mLowHigh){if(mLowHigh[2].toLowerCase()===" or lower"||mLowHigh[2].toLowerCase()===" or less"){min=-Renderer.dice.POS_INFINITE;max=Number(mLowHigh[1])}else{min=Number(mLowHigh[1]);max=Renderer.dice.POS_INFINITE}}else{const m=/^(\d+)([-\u2012\u2013](\d+))?$/.exec(firstCell);if(m){if(m[1]&&!m[2]){min=Number(m[1]);max=Number(m[1])}else{min=Number(m[1]);max=Number(m[3])}}else{const m=/^(\d+)\+$/.exec(row[0]);min=Number(m[1]);max=Renderer.dice.POS_INFINITE}}min=min===0?100:min;max=max===0?100:max;return`data-roll-min="${min}" data-roll-max="${max}"`}return``};this._getDataString=function(entry){let dataString="";if(entry.source)dataString+=`data-source="${entry.source}"`;if(entry.data){for(const k in entry.data){if(!k.startsWith("rd-"))continue;dataString+=` data-${k}="${`${entry.data[k]}`.escapeQuotes()}"`}}return dataString};this._renderList_getListCssClasses=function(entry,textStack,meta,options){const out=[`rd__list`];if(entry.style||entry.columns){if(entry.style)out.push(...entry.style.split(" ").map((it=>it.startsWith("pf2")?it:`rd__${it}`)));if(entry.columns)out.push(`columns-${entry.columns}`)}return out.join(" ")};this._renderList=function(entry,textStack,meta,options){if(entry.items){if(entry.name)textStack[0]+=`<div class="rd__list-name">${entry.name}</div>`;const cssClasses=this._renderList_getListCssClasses(entry,textStack,meta,options);textStack[0]+=`<ul ${cssClasses?`class="${cssClasses}"`:""}>`;const isListHang=entry.style&&entry.style.split(" ").includes("list-hang");const len=entry.items.length;for(let i=0;i<len;++i){const item=entry.items[i];if(item.type!=="list"){const className=`${this._getStyleClass(item)}`;textStack[0]+=`<li class="rd__li ${className}">`}if(isListHang&&typeof item==="string")textStack[0]+="<div>";this._recursiveRender(item,textStack,meta);if(isListHang&&typeof item==="string")textStack[0]+="</div>";if(item.type!=="list")textStack[0]+="</li>"}textStack[0]+="</ul>"}};this._renderItem=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<p class="m-0"><span class="${entry.style||"bold"} list-item-title">${this.render(entry.name)}</span> `;if(entry.entry)this._recursiveRender(entry.entry,textStack,meta);else if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta,{prefix:i>0?`<span class="rd__p-cont-indent">`:"",suffix:i>0?"</span>":""})}textStack[0]+="</p>";this._renderSuffix(entry,textStack,meta,options)};this._renderLeveledEffect=function(entry,textStack,meta,options){if(entry.entries){entry.entries.forEach((e=>{textStack[0]+=`<p class="pf2-stat pf2-stat__section"><strong>${e.range}&nbsp;</strong>${this.render(e.entry)}</p>`}))}};this._renderAttack=function(entry,textStack,meta,options){let MAP=-5;if(entry.noMAP)MAP=0;if(entry.traits&&entry.traits.map((t=>t.toLowerCase())).includes("agile"))MAP=-4;let actions;if(entry.activity){actions=Parser.timeToFullEntry(entry.activity)}else{actions="{@as 1}"}let onHit;if(entry.effects&&!entry.damage){onHit=`, <strong>Effect&nbsp;</strong>${entry.effects.map((e=>this.render(e))).join(", ")}`}else{onHit=`, <strong>Damage&nbsp;</strong>${this.render(entry.damage)}`}textStack[0]+=`<p class="pf2-stat pf2-stat__section attack">\n\t\t\t<strong>${entry.range}&nbsp;</strong>${this.render(actions)} ${entry.name}${entry.attack?this.render(` {@hit ${entry.attack}||${entry.name.uppercaseFirst()}|MAP=${MAP}}`):""}${entry.traits!=null?` ${this.render(`(${entry.traits.map((t=>`{@trait ${t.toLowerCase()}}`)).join(", ")})`)}`:""}${onHit}${entry.noMAP?"; no multiple attack penalty":""}</p>`};this._renderAbility=function(entry,textStack,meta,options){const style=entry.style||"inline";switch(style){case"compact":case"inline":this._renderAbility_compact(entry,textStack,meta,options);break;case"full":case"block":this._renderAbility_full(entry,textStack,meta,options);break}};this._renderAbility_full=function(entry,textStack,meta,options){textStack[0]+=`<div class="pf2-stat pf2-book--stat">`;textStack[0]+=Renderer.utils.getNameDiv(entry,{activity:true,type:""});textStack[0]+=Renderer.utils.getDividerDiv();textStack[0]+=Renderer.utils.getTraitsDiv(entry.traits||[]);textStack[0]+=Renderer.ability.getSubHead(entry);textStack[0]+=Renderer.generic.getRenderedEntries(entry);textStack[0]+=`</div>`};this._renderAbility_compact=function(entry,textStack,meta,options){textStack[0]+=`<div class="pf2-stat pf2-stat__section"><span class="pf2-stat__text"><strong>${entry.name?entry.name:"Activate"}</strong> `;let wordyActivation;if(entry.activity){textStack[0]+=this.render(Parser.timeToFullEntry(entry.activity));wordyActivation=entry.activity.unit==="round"||entry.activity.unit==="minute"||entry.activity.unit==="hour"||entry.activity.entry&&!entry.activity.entry.match(/\{@a(ction)?s[^}]+\}$/)}if(wordyActivation){if(entry.components){if(entry.traits){textStack[0]+=this.render(` (${entry.components.join(", ")}; ${entry.traits.map((t=>`{@trait ${t.toLowerCase()}}`)).join(", ")}); `)}else textStack[0]+=this.render(` (${entry.components.join(", ")}); `)}else{if(entry.traits){textStack[0]+=this.render(` (${entry.traits.map((t=>this.render(`{@trait ${t.toLowerCase()}}`))).join(", ")}); `)}else textStack[0]+="; "}}else{if(entry.components){if(entry.traits){textStack[0]+=this.render(` ${entry.components.join(", ")} (${entry.traits.map((t=>this.render(`{@trait ${t.toLowerCase()}}`))).join(", ")}); `)}else textStack[0]+=this.render(` ${entry.components.join(", ")}; `)}else{if(entry.traits){textStack[0]+=this.render(` (${entry.traits.map((t=>this.render(`{@trait ${t.toLowerCase()}}`))).join(", ")}) `)}else textStack[0]+=" "}}const preamble=[];if(entry.cost)preamble.push(`<strong>Cost&nbsp;</strong>${entry.cost}`);if(entry.frequency)preamble.push(`<strong>Frequency&nbsp;</strong>${Parser.freqToFullEntry(entry.frequency)}`);if(entry.note)preamble.push(entry.note);if(entry.range)preamble.push(`<strong>Range&nbsp;</strong>${entry.range.number} ${entry.range.unit}`);if(entry.trigger)preamble.push(`<strong>Trigger&nbsp;</strong>${entry.trigger}`);if(entry.requirements)preamble.push(`<strong>Requirements&nbsp;</strong>${entry.requirements}`);if(entry.entries){if(preamble.length){textStack[0]+=`${this.render(preamble.join("; "))}; <strong>Effect&nbsp;</strong>`}else if(entry.components||wordyActivation){textStack[0]+=`<strong>Effect&nbsp;</strong>`}textStack[0]+=`${this.render(entry.entries[0],{isAbility:true})}</span>`;for(let i=1;i<entry?.entries?.length;i++){textStack[0]+=this.render(entry.entries[i],{isAbility:true,pf2StatFix:true})}}else if(preamble.length){textStack[0]+=`${this.render(preamble.join("; "))}</span>`}else{textStack[0]+="</span>"}if(entry.special!=null)textStack[0]+=`<p class="pf2-stat__text"><strong>Special&nbsp;</strong>${this.render(entry.special)}</p>`;textStack[0]+=`</div>`};this._renderSuccessDegree=function(entry,textStack,meta,options){Object.keys(entry.entries).forEach((key=>{textStack[0]+=`<span class="pf2-stat pf2-stat__section"><strong>${key}&nbsp;</strong>`;if(typeof entry.entries[key]==="string"){this._recursiveRender(entry.entries[key],textStack,meta,{prefix:"<span>",suffix:"</span>"})}else if(Array.isArray(entry.entries[key])){entry.entries[key].forEach(((e,idx)=>{if(idx===0)this._recursiveRender(e,textStack,meta,{prefix:"<span>",suffix:"</span>"});else this._recursiveRender(e,textStack,meta,{prefix:"<span class='pf2-stat__section'>",suffix:"</span>"})}))}textStack[0]+=`</span>`}))};this._renderAffliction=function(entry,textStack,meta,options){const renderer=Renderer.get();let traits=[];if(entry.traits)entry.traits.forEach((t=>traits.push(`{@trait ${t.toLowerCase()}}`)));if(!options.isAbility)textStack[0]+=`<p class="pf2-stat pf2-stat__section">`;if(entry.name)textStack[0]+=`<strong>${entry.name}&nbsp;</strong>`;if(traits.length)textStack[0]+=`(${renderer.render(traits.join(", "))}) `;if(entry.level!=null)textStack[0]+=`<strong>Level&nbsp;</strong>${entry.level}; `;if(entry.note!=null)textStack[0]+=`${this.render(entry.note)} `;if(entry.DC!=null||entry.savingThrow!=null){textStack[0]+=`<strong>Saving Throw&nbsp;</strong>`;if(entry.DC!=null)textStack[0]+=`DC ${renderer.render(entry.DC)}`;if(entry.DC!=null&&entry.savingThrow!=null)textStack[0]+=" ";if(entry.savingThrow!=null)textStack[0]+=`${renderer.render(entry.savingThrow)}`;textStack[0]+="; "}if(entry.onset!=null)textStack[0]+=`<strong>Onset</strong> ${renderer.render(entry.onset)}; `;if(entry.maxDuration!=null)textStack[0]+=`<strong>Maximum Duration</strong> ${entry.maxDuration}; `;if(entry.stages){for(let stage of entry.stages){textStack[0]+=`<strong class="no-wrap">Stage ${stage.stage}&nbsp;</strong>`;this._recursiveRender(stage.entry,textStack,meta);if(stage.duration!=null)textStack[0]+=` (${renderer.render(stage.duration)})`;textStack[0]+="; "}}if(entry.entries){textStack[0]+=`<strong>Effect&nbsp;</strong>`;entry.entries.forEach((it=>this._recursiveRender(it,textStack,meta)))}else{textStack[0]=textStack[0].replace(/; $/,"")}if(!options.isAbility)textStack[0]+=`</p>`};this._renderPf2H1=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="pf2-wrp-h1" ${dataString}>`;if(entry.name!=null){const renderer=Renderer.get();this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-h1 rd__h${entry.blue?" pf2-h1--blue":""}" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}>\n\t\t\t\t\t\t\t<span class="entry-title-inner" ${entry.source?`title="${Parser.sourceJsonToFull(entry.source)}${entry.page!=null?`, p. ${entry.page}`:""}"`:""}>${renderer.render(entry.name)}</span>`;if(entry.collapsible)textStack[0]+=`<span class="pf2-h1--collapse">${this._getCollapsibleToggle({minus:"-"})}</span>`;textStack[0]+=`</p>`}this._getReference(entry);this._firstSection=false;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-p">`,suffix:`</p>`})}}textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`</${this.wrapperTag}>`};this._renderPf2H1Flavor=function(entry,textStack,meta,options){this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){textStack[0]+=`<p class="pf2-h1-flavor rd__h${entry.centered?" pf2-h1-flavor--centered":""}">${this.render(entry.entries[i])}</p>`}}textStack[0]+=`<div class="flex"><div class="pf2-chapter__line mb-4" style="width: calc(100% - 2em); margin-left: 1em; height: 2px"></div></div>`};this._getPf2ChapterSwirl=function(){return`<div class="flex">\n                <div class="pf2-chapter__line pf2-chapter__line--l"></div>\n                <svg class="pf2-chapter__swirl pf2-chapter__swirl--l" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 134.57 57.84"><path d="M800.2,632.26a36.88,36.88,0,0,1-11.08-1.86c-8.26-3.54-12-5.67-17.94-13.93a39.28,39.28,0,0,1-5.08-10.05,19.27,19.27,0,0,0-8-10.95,12.64,12.64,0,0,0-6.67-2.22,8.8,8.8,0,0,0-5.57,2c-3.7,2.94-4.55,7.11-2.52,12.38a16.63,16.63,0,0,0,.81,1.71c-6.64-2.41-9.19-8.31-9-20.51v-.69l-.66.2c-1.67.51-3.34,1-5,1.57-7.53,2.4-15.31,4.88-23,4.88a31.28,31.28,0,0,1-12.92-2.68,38.86,38.86,0,0,0,7,.65c13,0,24.65-7,34.88-13.11a29.75,29.75,0,0,1,15.33-4.26c12.49,0,23.44,7.86,26,18.68a1.29,1.29,0,0,0,.62.73,1.49,1.49,0,0,1,.2.15l.34.3.33-.31c6.21-5.84,10.58-8.33,14.61-8.33,2.41,0,4.75.91,7.37,2.85C805,593,806,596.86,803.49,602c-1.87-4.49-4.64-7-7.82-7a7.19,7.19,0,0,0-2.8.61c-4.1,1.74-5.67,7.06-3.65,12.37a13.49,13.49,0,0,0,12.35,8.61,10.84,10.84,0,0,0,1.13-.06A13.18,13.18,0,0,0,814.34,605c1.23-8.66-2.06-15-10.06-19.4,7.2.2,11.07,4.31,14.18,8.74l.1.14a38.92,38.92,0,0,1,3,4.81,23.4,23.4,0,0,1,2,13c0,.35-.07.61-.07.76-1,6.1-2.89,8.43-3.89,9.68-4,5-6.37,6-8.84,7.07A37.67,37.67,0,0,1,800.2,632.26Z" transform="translate(-689.69 -574.92)"/><path d="M750.77,575.92c12.26,0,23,7.7,25.54,18.3a1.78,1.78,0,0,0,.82,1,.83.83,0,0,1,.15.11l.69.61.66-.63c6-5.66,10.43-8.19,14.27-8.19a11.76,11.76,0,0,1,7.07,2.75c4.24,3.15,5.34,6.46,3.53,10.87-1.94-4-4.69-6.24-7.83-6.24a7.66,7.66,0,0,0-3,.65c-4.34,1.85-6,7.44-3.92,13a14,14,0,0,0,12.82,8.93,11.66,11.66,0,0,0,1.18-.06,13.67,13.67,0,0,0,12.08-12c1.16-8.17-1.59-14.35-8.41-18.78,5.63.88,8.92,4.48,11.63,8.34l.1.14a37.88,37.88,0,0,1,3,4.73,22.87,22.87,0,0,1,2,12.75c0,.32-.06.54-.07.72-1,6-2.81,8.26-3.78,9.47-4,4.94-6.23,5.91-8.64,6.92a37.17,37.17,0,0,1-10.37,2.38,36.67,36.67,0,0,1-10.9-1.82c-8.17-3.51-11.82-5.62-17.72-13.76a39.37,39.37,0,0,1-5-9.91,19.72,19.72,0,0,0-8.22-11.22,13.05,13.05,0,0,0-6.94-2.3,9.29,9.29,0,0,0-5.88,2.14c-3.84,3.05-4.76,7.53-2.68,13,.07.19.15.37.23.55-5.5-2.61-7.62-8.38-7.44-19.53l0-1.37-1.31.4c-1.68.51-3.38,1.05-5,1.58-7.49,2.38-15.24,4.85-22.86,4.85a31.61,31.61,0,0,1-8.44-1.11c.84.06,1.69.08,2.54.08,13.18,0,24.85-7,35.14-13.18a29.27,29.27,0,0,1,15.07-4.19m0-1a30.19,30.19,0,0,0-15.58,4.33c-11,6.59-22,13-34.63,13a38.2,38.2,0,0,1-10.87-1.59,31.87,31.87,0,0,0,16.77,4.62c9.46,0,18.8-3.63,28.18-6.47-.21,13.11,2.82,19.17,10.49,21.37-.48-1-1-1.83-1.34-2.74-1.71-4.43-1.53-8.71,2.36-11.81a8.27,8.27,0,0,1,5.26-1.92,12.1,12.1,0,0,1,6.4,2.15,18.67,18.67,0,0,1,7.81,10.67,39.89,39.89,0,0,0,5.16,10.19c5.94,8.2,9.55,10.41,18.18,14.12a37.78,37.78,0,0,0,11.25,1.88A38.5,38.5,0,0,0,811,630.31c2.64-1.12,5-2.22,9-7.22,1.23-1.54,3-4,4-10a24.66,24.66,0,0,0-2-14,41.26,41.26,0,0,0-3.13-5c-3.56-5.07-7.7-9-15.17-9-.46,0-.94,0-1.43,0,9.18,4.34,12.86,10.78,11.57,19.8a12.74,12.74,0,0,1-11.19,11.11c-.36,0-.72.05-1.08.05a12.94,12.94,0,0,1-11.88-8.28c-1.91-5-.45-10.11,3.37-11.74a6.69,6.69,0,0,1,2.61-.57c3,0,5.6,2.35,7.42,6.78q.15.39.36.39c.11,0,.23-.08.37-.24,2.77-5.47,1.76-9.63-3.25-13.36a12.79,12.79,0,0,0-7.67-3c-4.26,0-8.84,2.72-14.95,8.46-.23-.2-.6-.37-.66-.61-2.78-11.58-14.21-19.07-26.52-19.07Z" transform="translate(-689.69 -574.92)"/></svg>\n                <svg class="pf2-chapter__swirl pf2-chapter__swirl--r" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 134.57 57.84"><path d="M800.2,632.26a36.88,36.88,0,0,1-11.08-1.86c-8.26-3.54-12-5.67-17.94-13.93a39.28,39.28,0,0,1-5.08-10.05,19.27,19.27,0,0,0-8-10.95,12.64,12.64,0,0,0-6.67-2.22,8.8,8.8,0,0,0-5.57,2c-3.7,2.94-4.55,7.11-2.52,12.38a16.63,16.63,0,0,0,.81,1.71c-6.64-2.41-9.19-8.31-9-20.51v-.69l-.66.2c-1.67.51-3.34,1-5,1.57-7.53,2.4-15.31,4.88-23,4.88a31.28,31.28,0,0,1-12.92-2.68,38.86,38.86,0,0,0,7,.65c13,0,24.65-7,34.88-13.11a29.75,29.75,0,0,1,15.33-4.26c12.49,0,23.44,7.86,26,18.68a1.29,1.29,0,0,0,.62.73,1.49,1.49,0,0,1,.2.15l.34.3.33-.31c6.21-5.84,10.58-8.33,14.61-8.33,2.41,0,4.75.91,7.37,2.85C805,593,806,596.86,803.49,602c-1.87-4.49-4.64-7-7.82-7a7.19,7.19,0,0,0-2.8.61c-4.1,1.74-5.67,7.06-3.65,12.37a13.49,13.49,0,0,0,12.35,8.61,10.84,10.84,0,0,0,1.13-.06A13.18,13.18,0,0,0,814.34,605c1.23-8.66-2.06-15-10.06-19.4,7.2.2,11.07,4.31,14.18,8.74l.1.14a38.92,38.92,0,0,1,3,4.81,23.4,23.4,0,0,1,2,13c0,.35-.07.61-.07.76-1,6.1-2.89,8.43-3.89,9.68-4,5-6.37,6-8.84,7.07A37.67,37.67,0,0,1,800.2,632.26Z" transform="translate(-689.69 -574.92)"/><path d="M750.77,575.92c12.26,0,23,7.7,25.54,18.3a1.78,1.78,0,0,0,.82,1,.83.83,0,0,1,.15.11l.69.61.66-.63c6-5.66,10.43-8.19,14.27-8.19a11.76,11.76,0,0,1,7.07,2.75c4.24,3.15,5.34,6.46,3.53,10.87-1.94-4-4.69-6.24-7.83-6.24a7.66,7.66,0,0,0-3,.65c-4.34,1.85-6,7.44-3.92,13a14,14,0,0,0,12.82,8.93,11.66,11.66,0,0,0,1.18-.06,13.67,13.67,0,0,0,12.08-12c1.16-8.17-1.59-14.35-8.41-18.78,5.63.88,8.92,4.48,11.63,8.34l.1.14a37.88,37.88,0,0,1,3,4.73,22.87,22.87,0,0,1,2,12.75c0,.32-.06.54-.07.72-1,6-2.81,8.26-3.78,9.47-4,4.94-6.23,5.91-8.64,6.92a37.17,37.17,0,0,1-10.37,2.38,36.67,36.67,0,0,1-10.9-1.82c-8.17-3.51-11.82-5.62-17.72-13.76a39.37,39.37,0,0,1-5-9.91,19.72,19.72,0,0,0-8.22-11.22,13.05,13.05,0,0,0-6.94-2.3,9.29,9.29,0,0,0-5.88,2.14c-3.84,3.05-4.76,7.53-2.68,13,.07.19.15.37.23.55-5.5-2.61-7.62-8.38-7.44-19.53l0-1.37-1.31.4c-1.68.51-3.38,1.05-5,1.58-7.49,2.38-15.24,4.85-22.86,4.85a31.61,31.61,0,0,1-8.44-1.11c.84.06,1.69.08,2.54.08,13.18,0,24.85-7,35.14-13.18a29.27,29.27,0,0,1,15.07-4.19m0-1a30.19,30.19,0,0,0-15.58,4.33c-11,6.59-22,13-34.63,13a38.2,38.2,0,0,1-10.87-1.59,31.87,31.87,0,0,0,16.77,4.62c9.46,0,18.8-3.63,28.18-6.47-.21,13.11,2.82,19.17,10.49,21.37-.48-1-1-1.83-1.34-2.74-1.71-4.43-1.53-8.71,2.36-11.81a8.27,8.27,0,0,1,5.26-1.92,12.1,12.1,0,0,1,6.4,2.15,18.67,18.67,0,0,1,7.81,10.67,39.89,39.89,0,0,0,5.16,10.19c5.94,8.2,9.55,10.41,18.18,14.12a37.78,37.78,0,0,0,11.25,1.88A38.5,38.5,0,0,0,811,630.31c2.64-1.12,5-2.22,9-7.22,1.23-1.54,3-4,4-10a24.66,24.66,0,0,0-2-14,41.26,41.26,0,0,0-3.13-5c-3.56-5.07-7.7-9-15.17-9-.46,0-.94,0-1.43,0,9.18,4.34,12.86,10.78,11.57,19.8a12.74,12.74,0,0,1-11.19,11.11c-.36,0-.72.05-1.08.05a12.94,12.94,0,0,1-11.88-8.28c-1.91-5-.45-10.11,3.37-11.74a6.69,6.69,0,0,1,2.61-.57c3,0,5.6,2.35,7.42,6.78q.15.39.36.39c.11,0,.23-.08.37-.24,2.77-5.47,1.76-9.63-3.25-13.36a12.79,12.79,0,0,0-7.67-3c-4.26,0-8.84,2.72-14.95,8.46-.23-.2-.6-.37-.66-.61-2.78-11.58-14.21-19.07-26.52-19.07Z" transform="translate(-689.69 -574.92)"/></svg>\n                <div class="pf2-chapter__line pf2-chapter__line--r"></div>\n            \t</div>`};this._renderPf2H2=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="pf2-wrp-h2" ${dataString}>`;textStack[0]+=`<div class="pf2-h2--wrp ${this._firstSection?"m-0":""}">`;this._firstSection=false;if(entry.step!=null){textStack[0]+=`<p class="pf2-h2__step-num">${entry.step}</p>`;textStack[0]+=`<p class="pf2-h2__step">STEP ${entry.step}</p>`}this._getReference(entry);if(entry.name!=null){const renderer=Renderer.get();this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-h2 rd__h" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}>\n\t\t\t\t\t\t\t<span class="entry-title-inner" ${entry.source?`title="${Parser.sourceJsonToFull(entry.source)}${entry.page!=null?`, p. ${entry.page}`:""}"`:""}>${renderer.render(entry.name)}</span>`;if(entry.collapsible)textStack[0]+=this._getCollapsibleToggle({minus:"-"});textStack[0]+=`</p>`}textStack[0]+=`</div>`;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-p">`,suffix:`</p>`})}}textStack[0]+=`</${this.wrapperTag}>`};this._renderPf2H3=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="pf2-wrp-h3" ${dataString}>`;if(entry.name!=null){const renderer=Renderer.get();this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-h3 rd__h ${this._firstSection?"p-0":""}" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}>\n\t\t\t\t\t\t\t<span class="entry-title-inner" ${entry.source?`title="${Parser.sourceJsonToFull(entry.source)}${entry.page!=null?`, p. ${entry.page}`:""}"`:""}>${renderer.render(entry.name)}</span>`;if(entry.level||entry.collapsible)textStack[0]+=`<span class="pf2-h3--lvl">${entry.level?Parser.getOrdinalForm(entry.level):""}${entry.collapsible?this._getCollapsibleToggle({minus:"–"}):""}</span>`;textStack[0]+=`</p>`}this._getReference(entry);this._firstSection=false;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-p">`,suffix:`</p>`})}}textStack[0]+=`</${this.wrapperTag}>`};this._renderPf2H4=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="pf2-wrp-h4" ${dataString}>`;if(entry.name!=null){const renderer=Renderer.get();this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-h4 rd__h ${this._firstSection?"p-0":""}" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}>\n\t\t\t\t\t\t\t<span class="entry-title-inner" ${entry.source?`title="${Parser.sourceJsonToFull(entry.source)}${entry.page!=null?`, p. ${entry.page}`:""}"`:""}>${renderer.render(entry.name)}</span>`;if(entry.level||entry.collapsible)textStack[0]+=`<span class="pf2-h4--lvl">${entry.level?Parser.getOrdinalForm(entry.level):""}${entry.collapsible?this._getCollapsibleToggle({minus:"–"}):""}</span>`;textStack[0]+=`</p>`}this._getReference(entry);this._firstSection=false;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-p">`,suffix:`</p>`})}}textStack[0]+=`</${this.wrapperTag}>`};this._renderPf2H5=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="pf2-wrp-h5" ${dataString}>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-h5 rd__h ${this._firstSection?"mt-0":""}" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${this.render(entry.name)}</span></p>`}this._getReference(entry);this._firstSection=false;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-p">`,suffix:`</p>`})}}textStack[0]+=`</${this.wrapperTag}>`};this._getCollapsibleToggle=function(opts){return`<span class="no-select pf2-h--collapse" onclick="((ele) => {\n\t\t\t$(ele).text($(ele).text().includes('+') ? ' [${opts.minus}]' : ' [+]');\n\t\t\t$(ele).parent().parent()${opts.parents===3?".parent()":""}.siblings().toggle();\n\t\t})(this)">[${opts.minus}]</span>`};this._renderPf2Title=function(entry,textStack,meta,options){if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-title ${entry.style||""}">${this.render(entry.name)}</p>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,options)}}};this._renderPf2Sidebar=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-sidebar ${(entry.style||[]).join(" ")}" ${dataString}>`;if(entry.name!=null){const renderer=Renderer.get();this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-sidebar__title" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${renderer.render(entry.name)}</span></p>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-sidebar__text">`,suffix:`</p>`})}}textStack[0]+=`</div>`};this._renderPf2SampleBox=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="${options.beige?"pf2-beige-box":"pf2-sample-box"}" ${dataString}>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<div class="${options.beige?"pf2-beige-box__title":"pf2-sample-box__title"}"><span>${entry.name}</span></div>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="${options.beige?"pf2-beige-box__text":"pf2-sample-box__text"}">`,suffix:"</p>"})}}textStack[0]+=`</div>`};this._renderPf2Inset=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-inset" ${dataString}>`;this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta)}}textStack[0]+=`</div>`};this._renderPf2TipsBox=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-tips-box" ${dataString}>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<div class="pf2-tips-box__title"><span>${entry.name}</span></div>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:'<p class="pf2-tips-box__text">',suffix:"</p>"})}}textStack[0]+=`</div>`};this._getPf2BoxSwirl=function(right,styles){if(right){return`<svg class="pf2-box__swirl pf2-box__swirl--right ${styles}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 415 242"><path d="M1.39,241.51S-.3,71.14.05,71.33s21.77.19,32.62-.44a162.92,162.92,0,0,0,29-4.21,129.52,129.52,0,0,0,27.54-10c8.58-4.32,17.24-9.56,24-16.44a43.08,43.08,0,0,0,4.59-5.49c1-1.5,2-3.17,3.91-3.57s4.35.29,6.29.8A35.38,35.38,0,0,1,133.82,34c7.47,3.44,13.3,9.39,18.13,15.91a89.19,89.19,0,0,1,13.26,25.78c1.48,4.57,2.64,9.21,4.58,13.63a61.82,61.82,0,0,0,6.74,11.73c2.61,3.56,5.66,7.34,9.24,10,4,3,8.62,2.55,13.35,2.47,11.33-.18,22.66-.48,34-.17q4.14.11,8.28.34a32.22,32.22,0,0,0,7-.12,20.35,20.35,0,0,0,10-4.63,38.2,38.2,0,0,0,9.1-45.84,30.88,30.88,0,0,0-7.34-10,26.81,26.81,0,0,0-10.24-5.2C242.33,45.83,233.56,46.47,227,51a24.54,24.54,0,0,0-10.11,21,19.36,19.36,0,0,0,3.58,11.17,14.84,14.84,0,0,0,9.09,5.51,16.64,16.64,0,0,0,6,0c.78-.15,2.12-.6,2.74.19.31.39-.07.72-.35,1.14s-.51.73-.78,1.08a20.38,20.38,0,0,1-9.7,6.52c-16.57,5.41-33.26-7.15-38.83-22.31a36.82,36.82,0,0,1-2.27-12,60.62,60.62,0,0,1,1.48-13,67.43,67.43,0,0,1,9.44-23.9A59.61,59.61,0,0,1,216.74,8,58.69,58.69,0,0,1,242,.23a76.68,76.68,0,0,1,28.17,3.05,72.58,72.58,0,0,1,24.69,13.37c13.36,11,23,26.29,26.26,43.33a68.81,68.81,0,0,1,0,25.47c-.22,1.17-.45,2.35-.75,3.5a21.3,21.3,0,0,0-.74,2.56,3.63,3.63,0,0,0,.21,1.73s.22.62.32.66.89-.3,1-.35c1.16-.38,2.32-.74,3.49-1.08a82.23,82.23,0,0,1,14.91-2.91,69.58,69.58,0,0,1,53.47,18A65.83,65.83,0,0,1,414.44,155a66.94,66.94,0,0,1-19.32,47.35c-.38-2.72-.69-5.46-1.07-8.18-1.16-8.35-3.23-16.73-7.36-24.14a41.74,41.74,0,0,0-16.33-16.32,61.34,61.34,0,0,0-11.21-4.65c-1.69-.53-4.26-1.45-5.89-.27s-1.68,4-1.78,5.8c-.28,5-.1,10-.1,14.93q0,35.78,0,71.53"/></svg>`}else{return`<svg class="pf2-box__swirl pf2-box__swirl--left ${styles}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 415 242"><path d="M63.05,241.05V169.52c0-5,.18-10-.09-14.93-.11-1.81-.13-4.6-1.78-5.8s-4.2-.26-5.89.27a61.34,61.34,0,0,0-11.21,4.65A41.74,41.74,0,0,0,27.75,170c-4.13,7.41-6.2,15.79-7.36,24.14-.38,2.72-.69,5.46-1.07,8.18A66.94,66.94,0,0,1,0,155a65.82,65.82,0,0,1,21.38-47.46,69.62,69.62,0,0,1,53.48-18,82.23,82.23,0,0,1,14.91,2.91q1.76.51,3.48,1.08c.16,0,.91.41,1,.35a2.86,2.86,0,0,0,.32-.66,3.63,3.63,0,0,0,.21-1.73A21.3,21.3,0,0,0,94.09,89c-.3-1.15-.53-2.33-.75-3.5a68.81,68.81,0,0,1,0-25.47c3.23-17,12.9-32.38,26.26-43.33A72.58,72.58,0,0,1,144.3,3.28a76.68,76.68,0,0,1,28.17-3A58.69,58.69,0,0,1,197.7,8a59.71,59.71,0,0,1,19.5,18.51,67.43,67.43,0,0,1,9.44,23.9,60.62,60.62,0,0,1,1.48,13,36.82,36.82,0,0,1-2.27,12c-5.57,15.16-22.26,27.72-38.83,22.31a20.33,20.33,0,0,1-9.7-6.52c-.27-.35-.54-.71-.79-1.08s-.65-.75-.34-1.14c.62-.79,2-.34,2.74-.19a16.64,16.64,0,0,0,6,0A14.86,14.86,0,0,0,194,83.25a19.44,19.44,0,0,0,3.58-11.17,24.54,24.54,0,0,0-10.11-21c-6.58-4.57-15.35-5.21-22.94-3.14a26.81,26.81,0,0,0-10.24,5.2,30.74,30.74,0,0,0-7.34,10,38.2,38.2,0,0,0,9.1,45.84,20.36,20.36,0,0,0,10,4.63,32.32,32.32,0,0,0,7,.12q4.14-.24,8.28-.34c11.33-.31,22.66,0,34,.17,4.73.08,9.33.48,13.34-2.47,3.59-2.63,6.64-6.41,9.25-10a61.82,61.82,0,0,0,6.74-11.73c1.94-4.42,3.1-9.06,4.58-13.63a88.94,88.94,0,0,1,13.26-25.78c4.83-6.52,10.66-12.47,18.13-15.91A35.06,35.06,0,0,1,286.44,32c1.94-.51,4.28-1.23,6.29-.8s2.85,2.07,3.91,3.57a43.08,43.08,0,0,0,4.59,5.49c6.77,6.88,15.43,12.12,24,16.44a129.64,129.64,0,0,0,27.53,10,163.16,163.16,0,0,0,29,4.21c10.85.63,32.27.62,32.62.44S413,241.51,413,241.51"/></svg>`}};this._renderPf2BrownBox=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div ${dataString} class="flex">`;textStack[0]+=`<div class="pf2-box pf2-box--brown" style="border-radius: 6px">`;textStack[0]+=`<div style="margin-bottom: 8px"></div>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<span class="pf2-box__title">${entry.name}</span>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p class='pf2-box__text'>",suffix:"</p>"})}}textStack[0]+=`</div></div>`};this._renderPf2RedBox=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div ${dataString} class="flex">`;textStack[0]+=`<div class="pf2-box pf2-box--red" style="border-radius: 6px">`;textStack[0]+=`<div style="margin-bottom: 8px"></div>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<span class="pf2-box__title">${entry.name}</span>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p class='pf2-box__text'>",suffix:"</p>"})}}textStack[0]+=`</div></div>`};this._renderPf2KeyBox=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-key-box" ${dataString}>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<p class="pf2-key-box__title">${entry.name}</p>`}this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-key-box__text">`,suffix:"</p>"})}}textStack[0]+=`</div>`};this._renderPf2KeyAbility=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-key-abilities" ${dataString}>`;if(entry.ability!=null){textStack[0]+=`<div class="pf2-key-abilities__ab">`;textStack[0]+=`<p class="pf2-key-abilities__title">KEY ABILITY</p>`;const len=entry.ability.length;for(let i=0;i<len;++i){this._recursiveRender(entry.ability[i],textStack,meta,{prefix:"<p class='pf2-key-abilities__text'>",suffix:"</p>"})}textStack[0]+=`</div>`}if(entry.hp!=null){textStack[0]+=`<div class="pf2-key-abilities__hp">`;textStack[0]+=`<p class="pf2-key-abilities__title">HIT POINTS</p>`;const len=entry.hp.length;for(let i=0;i<len;++i){this._recursiveRender(entry.hp[i],textStack,meta,{prefix:"<p class='pf2-key-abilities__text'>",suffix:"</p>"})}textStack[0]+=`</div>`}textStack[0]+=`</div>`};this._renderPf2Options=function(entry,textStack,meta,options){if(!entry.items||!entry.items.length)return;if(!entry.skipSort)entry.items=entry.items.sort(((a,b)=>a.name&&b.name?SortUtil.ascSort(a.name,b.name):a.name?-1:b.name?1:0));const renderer=Renderer.get();entry.items.forEach((it=>{const entries=MiscUtil.copy(it.entries);const style=entry.style?entry.style:"pf2-book__option";textStack[0]+=`<p class="${style}">${it.name?`<strong>${renderer.render(it.name)}${it.traits?renderer.render(` (${it.traits.map((t=>`{@trait ${t}}`)).join(", ")})`):""}${entry.noColon?"":":"}&nbsp;</strong>`:""}${renderer.render(entries.shift())}</p>`;entries.forEach((e=>this._recursiveRender(e,textStack,meta,{prefix:`<p class="${style}">`,suffix:`</p>`})))}))};this._renderQuote=function(entry,textStack,meta,options){const renderer=Renderer.get();const len=entry?.entries?.length;for(let i=0;i<len;++i){textStack[0]+=`<p class="rd__quote-line ${i===len-1&&entry.by?`rd__quote-line--last`:""}">${i===0&&!entry.skipMarks?"&ldquo;":""}`;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<i>",suffix:"</i>"});textStack[0]+=`${i===len-1&&!entry.skipMarks?"&rdquo;":""}</p>`}if(entry.by||entry.source){textStack[0]+=`<p> <span class="rd__quote-by">— `;textStack[0]+=`${entry.by!=null?`${renderer.render(entry.by)}`:entry.source!=null?`${Parser.sourceJsonToFull(entry.source)}`:""}${entry.from?`, <i>${renderer.render(entry.from)}</i>`:entry.source&&entry.page?`, <i>p. ${entry.page}</i>`:""}</span>`;textStack[0]+=`</p>`}};this._renderPaper=function(entry,textStack,meta,options){const dataString=this._getDataString(entry);textStack[0]+=`<div class="pf2-paper-wrp">`;if(entry.title!=null){textStack[0]+=`<p class="pf2-paper-title">${this.render(entry.title)}</p>`}const styles=(entry.style||"").split(" ").filter(Boolean).map((s=>`pf2-${s}`)).join(" ");textStack[0]+=`<div class="pf2-paper ${styles}" ${dataString}>`;if(entry.head){textStack[0]+=`<div class="pf2-paper__header">`;const len=entry.head.length;for(let i=0;i<len;++i){this._recursiveRender(entry.head[i],textStack,meta,{prefix:`<p class="pf2-paper__text">`,suffix:"</p>"})}textStack[0]+=`</div>`}this._getReference(entry);textStack[0]+=`<div class="pf2-paper__entries">`;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:`<p class="pf2-paper__text" ${entry.noIndentLastEntry&&i===len-1?"style='text-indent: 0;'":""}>`,suffix:"</p>"})}}textStack[0]+=`</div>`;if(entry.signature){textStack[0]+=`<div class="pf2-paper__signature">`;const len=entry.signature.length;for(let i=0;i<len;++i){this._recursiveRender(entry.signature[i],textStack,meta,{prefix:`<p class="pf2-paper__text">`,suffix:"</p>"})}textStack[0]+=`</div>`}if(entry.footnotes){textStack[0]+=`<div class="pf2-paper__footer">`;const len=entry.footnotes.length;for(let i=0;i<len;++i){this._recursiveRender(entry.footnotes[i],textStack,meta,{prefix:`<p class="pf2-paper__text">`,suffix:"</p>"})}textStack[0]+=`</div>`}textStack[0]+=`</div></div>`};this._renderInline=function(entry,textStack,meta,options){this._getReference(entry);textStack[0]+=`<div><div>`;if(entry.name!=null){this._handleTrackTitles(entry.name);textStack[0]+=`<b>${entry.name}</b> `;if(entry.source!=null){textStack[0]+=Renderer.get().render(` {@note (<a href="${Parser.sourceJsonToStore(entry.source)}">${entry.source}</a>)} `)}}if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:" ",suffix:" "})}}textStack[0]+=`</div></div>`};this._renderInlineBlock=function(entry,textStack,meta,options){this._getReference(entry);this._renderPrefix(entry,textStack,meta,options);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta)}this._renderSuffix(entry,textStack,meta,options)};this._renderDice=function(entry,textStack,meta,options){textStack[0]+=Renderer.getEntryDice(entry,entry.name,this._isAddHandlers)};this._renderData=async function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack);const tag=entry.tag;const name=entry.name;const source=entry.source||Parser.TAG_TO_DEFAULT_SOURCE[tag];const catId=Parser._parse_bToA(Parser.CAT_ID_TO_PROP,tag);const page=entry.page||UrlUtil.CAT_TO_PAGE[catId];if(entry.data){const renderFn=Renderer.hover._pageToRenderFn(page);const rendered=renderFn?renderFn(entry.data,{isEmbedded:true,noPage:true}):`<div class="pf2-stat">Failed to render ${entry.data.name}.</div>`;textStack[0]+=typeof rendered==="object"?[...rendered].map((e=>e.outerHTML)).join(""):rendered}else{const hash=entry.hash||UrlUtil.URL_TO_HASH_BUILDER[page](entry);textStack[0]+=`<div class="pf2-stat" data-stat-tag="${tag.qq()}" data-stat-name="${name.qq()}" data-stat-hash="${hash.qq()}" data-stat-page="${page.qq()}" data-stat-source="${source.qq()}">\n\t\t\t\t<i>Loading ${Renderer.get().render(`{@${tag} ${name}|${source}}`)}...</i>\n\t\t\t\t<style onload="Renderer.events.handleLoad_inlineStatblock(this)"></style>\n\t\t\t</div>`}this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderData_getEmbeddedToggle=function(){return`<div class="rd__data-embed-toggle inline-block" onclick="((ele) => {\n\t\t\t\t\t\t$(ele).text($(ele).text().includes('+') ? ' [–]' : ' [+]');\n\t\t\t\t\t\t$(ele).parent().siblings().not('.pf2-embedded-name').toggle()\n\t\t\t\t\t})(this)">[–]</div>`};this._renderDataHeader=function(textStack,isEmbedded){if(isEmbedded)textStack[0]+=`<div class="rd__b-data"><div class="pf2-stat pf2-wrp-stat m-0">`;else textStack[0]+=`<div class="pf2-stat pf2-wrp-stat">`};this._renderDataFooter=function(textStack,isEmbedded){if(isEmbedded)textStack[0]+=`</div></div>`;else textStack[0]+=`</div>`};this._renderGallery=function(entry,textStack,meta,options){textStack[0]+=`<div class="rd__wrp-gallery">`;const len=entry.images.length;const anyNamed=entry.images.find((it=>it.title));for(let i=0;i<len;++i){const img=MiscUtil.copy(entry.images[i]);if(anyNamed&&!img.title)img._galleryTitlePad=true;delete img.imageType;this._recursiveRender(img,textStack,meta,options)}textStack[0]+=`</div>`};this._renderHomebrew=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="homebrew-section"><div class="homebrew-float"><span class="homebrew-notice"></span>`;if(entry.oldEntries){const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:"Homebrew",entries:entry.oldEntries});let markerText;if(entry.movedTo){markerText="(See moved content)"}else if(entry.entries){markerText="(See replaced content)"}else{markerText="(See removed content)"}textStack[0]+=`<span class="homebrew-old-content" href="#${window.location.hash}" ${hoverMeta.html}>${markerText}</span>`}textStack[0]+=`</div>`;if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"})}}else if(entry.movedTo){textStack[0]+=`<i>This content has been moved to ${entry.movedTo}.</i>`}else{textStack[0]+="<i>This content has been deleted.</i>"}textStack[0]+=`</div>`;this._renderSuffix(entry,textStack,meta,options)};this._renderCode=function(entry,textStack,meta,options){const isWrapped=!!StorageUtil.syncGet("rendererCodeWrap");entry.preformatted=entry.preformatted.replaceAll("<","&lt;").replace(">","&gt;");textStack[0]+=`\n\t\t\t<div class="flex-col h-100">\n\t\t\t\t<div class="flex no-shrink pt-1">\n\t\t\t\t\t<button class="btn btn-default btn-xs mb-1 mr-2" onclick="Renderer.events.handleClick_copyCode(event, this)">Copy Code</button>\n\t\t\t\t\t<button class="btn btn-default btn-xs mb-1 ${isWrapped?"active":""}" onclick="Renderer.events.handleClick_toggleCodeWrap(event, this)">Word Wrap</button>\n\t\t\t\t</div>\n\t\t\t\t<pre class="h-100 w-100 mb-1 ${isWrapped?"rd__pre-wrap":""}">${entry.preformatted}</pre>\n\t\t\t</div>\n\t\t`};this._renderHr=function(entry,textStack,meta,options){textStack[0]+=`<hr class="${entry.style?entry.style:"rd__hr"}">`;this._getReference(entry);if(entry.entries){const len=entry?.entries?.length;for(let i=0;i<len;++i){this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"})}}};this._getStyleClass=function(entry){const outList=[];if(SourceUtil.isNonstandardSource(entry.source))outList.push("spicy-sauce");if(BrewUtil.hasSourceJson(entry.source))outList.push("refreshing-brew");if(this._extraSourceClasses)outList.push(...this._extraSourceClasses);for(const k in this._fnsGetStyleClasses){const fromFn=this._fnsGetStyleClasses[k](entry);if(fromFn)outList.push(...fromFn)}return outList.join(" ")};this._getReference=function(entry){if(entry.reference){let source=`<a href="${Parser.sourceJsonToStore(entry.source)}">${Parser.sourceJsonToFull(entry.source)}</a>`;if(entry.reference.index||entry.reference.auto!==true){entry.entries.splice(entry.reference.index,0,entry.reference.note??`{@note Read ${entry.reference.entry??""} from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`)}else if(!entry?.entries?.length){entry.entries=[];entry.entries.push(`{@note Read from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`)}else{const len=entry?.entries?.length;for(let i=0;i<len;++i){if(entry.entries[i].type==="pf2-h1-flavor"||entry.entries[i].type==="pf2-sidebar"){entry.entries.splice(i+1,0,`{@note Read from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`);return}else if(!entry.entries.filter((t=>typeof t==="string")).length){entry.entries.unshift(`{@note Read from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`);return}else if(typeof entry.entries[i]==="object"){entry.entries.splice(i,0,`{@note Read the rest from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`);return}else{entry.entries.push(`{@note Read the rest from ${entry.page!=null?`page ${entry.page} of `:""}${source}}.`);return}}}}};this._renderString=function(entry,textStack,meta,options){const tagSplit=Renderer.splitByTags(entry);const len=tagSplit.length;for(let i=0;i<len;++i){const s=tagSplit[i];if(!s)continue;if(s.startsWith("{@")){const[tag,text]=Renderer.splitFirstSpace(s.slice(1,-1));this._renderString_renderTag(textStack,meta,options,tag,text)}else textStack[0]+=s}};this._renderString_renderTag=function(textStack,meta,options,tag,text){switch(tag){case"@as":case"@actionsymbol":textStack[0]+=`<span class="pf2-action-icon" data-symbol="${text}"></span>`;textStack[0]+=`<span class="pf2-action-icon-copy-text">${this._renderString_actionCopyText(text)}</span>`;break;case"@b":case"@bold":textStack[0]+=`<b>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</b>`;break;case"@i":case"@italic":textStack[0]+=`<i>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</i>`;break;case"@s":case"@strike":textStack[0]+=`<s>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</s>`;break;case"@u":case"@underline":textStack[0]+=`<u>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</u>`;break;case"@n":case"@nostyle":textStack[0]+=`<span class="no-font-style inline-block">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@c":case"@center":textStack[0]+=`<span class="text-center block">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@sup":textStack[0]+=`<sup>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</sup>`;break;case"@sub":textStack[0]+=`<sub>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</sub>`;break;case"@note":textStack[0]+=`<i class="ve-muted">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</i>`;break;case"@divider":textStack[0]+=`<div class="pf2-stat pf2-stat__line"></div>`;break;case"@color":{const[toDisplay,color]=Renderer.splitTagByPipe(text);const scrubbedColor=BrewUtil.getValidColor(color);textStack[0]+=`<span style="color: #${scrubbedColor}">`;this._recursiveRender(toDisplay,textStack,meta);textStack[0]+=`</span>`;break}case"@handwriting":textStack[0]+=`<span class="pf2-handwriting">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@highlight":{const[toDisplay,color]=Renderer.splitTagByPipe(text);const scrubbedColor=color?BrewUtil.getValidColor(color):null;textStack[0]+=scrubbedColor?`<span style="background-color: #${scrubbedColor}">`:`<span class="rd__highlight">`;textStack[0]+=toDisplay;textStack[0]+=`</span>`;break}case"@indentFirst":textStack[0]+=`<span class="text-indent-first inline-block">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@indentSubsequent":textStack[0]+=`<span class="text-indent-subsequent block">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@dc":{textStack[0]+=`DC <span class="rd__dc">${text}</span>`;break}case"@dice":case"@damage":case"@hit":case"@d20":case"@flatDC":case"@chance":case"@recharge":{const fauxEntry={type:"dice",rollable:true};const[rollText,displayText,name,...others]=Renderer.splitTagByPipe(text);if(displayText)fauxEntry.displayText=displayText;if(name)fauxEntry.name=name;if(others.includes("onTable"))fauxEntry.onTable=true;switch(tag){case"@dice":{fauxEntry.toRoll=rollText;if(!displayText&&rollText.includes(";"))fauxEntry.displayText=rollText.replace(/;/g,"/");if(!fauxEntry.displayText&&rollText.includes("#$")||fauxEntry.displayText&&fauxEntry.displayText.includes("#$"))fauxEntry.displayText=(fauxEntry.displayText||rollText).replace(/#\$prompt_number[^$]*\$#/g,"(n)");this._recursiveRender(fauxEntry,textStack,meta);break}case"@damage":{fauxEntry.toRoll=rollText;fauxEntry.subType="damage";this._recursiveRender(fauxEntry,textStack,meta);break}case"@d20":{let mod;if(!isNaN(rollText)){const n=Number(rollText);mod=`${n>=0?"+":""}${n}`}else mod=rollText;fauxEntry.displayText=fauxEntry.displayText||mod;fauxEntry.toRoll=`1d20${mod}`;fauxEntry.subType="d20";fauxEntry.d20mod=mod;this._recursiveRender(fauxEntry,textStack,meta);break}case"@hit":{let mod;if(!isNaN(rollText)){const n=Number(rollText);mod=`${n>=0?"+":""}${n}`}else mod=rollText;fauxEntry.displayText=fauxEntry.displayText||mod;fauxEntry.toRoll=`1d20${mod}`;const MAPstr=others.find((o=>o.startsWith("MAP=")))||"MAP=-5";fauxEntry.MAP=Number(MAPstr.replace(/MAP=/,""));fauxEntry.subType="hit";fauxEntry.d20mod=mod;this._recursiveRender(fauxEntry,textStack,meta);break}case"@flatDC":{fauxEntry.displayText=fauxEntry.displayText||rollText;fauxEntry.toRoll=`1d20`;fauxEntry.subType="d20";fauxEntry.successThresh=21-Number(fauxEntry.displayText);fauxEntry.successMax=20;this._recursiveRender(fauxEntry,textStack,meta);break}case"@chance":{fauxEntry.toRoll=`1d100`;fauxEntry.successThresh=Number(rollText);this._recursiveRender(fauxEntry,textStack,meta);break}case"@recharge":{const flags=displayText?displayText.split(""):null;fauxEntry.toRoll="1d6";const asNum=Number(rollText||6);fauxEntry.successThresh=7-asNum;fauxEntry.successMax=6;textStack[0]+=`${flags&&flags.includes("m")?"":"("}Recharge `;fauxEntry.displayText=`${asNum}${asNum<6?`–6`:""}`;this._recursiveRender(fauxEntry,textStack,meta);textStack[0]+=`${flags&&flags.includes("m")?"":")"}`;break}}break}case"@scaledice":case"@scaledamage":{const fauxEntry=Renderer.parseScaleDice(tag,text);this._recursiveRender(fauxEntry,textStack,meta);break}case"@filter":{const[displayText,page,namespace,...filters]=Renderer.splitTagByPipe(text);const filterSubhashMeta=Renderer.getFilterSubhashes(filters,namespace);const fauxEntry={type:"link",text:displayText,href:{type:"internal",path:`${page}.html`,hash:HASH_BLANK,hashPreEncoded:true,subhashes:filterSubhashMeta.subhashes}};if(filterSubhashMeta.customHash)fauxEntry.href.hash=filterSubhashMeta.customHash;this._recursiveRender(fauxEntry,textStack,meta);break}case"@link":{const[displayText,url]=Renderer.splitTagByPipe(text);let outUrl=url==null?displayText:url;if(!outUrl.startsWith("http"))outUrl=`http://${outUrl}`;const fauxEntry={type:"link",href:{type:"external",url:outUrl},text:displayText};this._recursiveRender(fauxEntry,textStack,meta);break}case"@pf2etools":case"@Pf2eTools":{const[displayText,page,hash]=Renderer.splitTagByPipe(text);const fauxEntry={type:"link",href:{type:"internal",path:page},text:displayText};if(hash){fauxEntry.hash=hash;fauxEntry.hashPreEncoded=true}this._recursiveRender(fauxEntry,textStack,meta);break}case"@footnote":{const[displayText,footnoteText,optTitle]=Renderer.splitTagByPipe(text);const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:"Footnote",entries:[footnoteText,optTitle?`— {@note ${optTitle}}`:""].filter(Boolean)});textStack[0]+=`<span class="help" ${hoverMeta.html}>`;this._recursiveRender(displayText,textStack,meta);textStack[0]+=`</span>`;break}case"@homebrew":{const[newText,oldText]=Renderer.splitTagByPipe(text);const tooltipEntries=[];if(newText&&oldText){tooltipEntries.push("{@b This is a homebrew addition, replacing the following:}")}else if(newText){tooltipEntries.push("{@b This is a homebrew addition.}")}else if(oldText){tooltipEntries.push("{@b The following text has been removed with this homebrew:}")}if(oldText){tooltipEntries.push(oldText)}const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:"Homebrew Modifications",entries:tooltipEntries});textStack[0]+=`<span class="homebrew-inline" ${hoverMeta.html}>`;this._recursiveRender(newText||"[...]",textStack,meta);textStack[0]+=`</span>`;break}case"@domain":case"@skill":case"@group":{const{name:name,source:source,displayText:displayText,others:others}=DataUtil.generic.unpackUid(text,tag);const hash=UrlUtil.encodeForHash([name,source]);const fakePage=tag.replace(/^@/,"");const hoverMeta=Renderer.get()._getHoverString(fakePage,source,hash,null);textStack[0]+=`<span class="help--hover" ${hoverMeta}>${displayText||name}</span>`;break}case"@area":{const[compactText,areaId,flags,...others]=Renderer.splitTagByPipe(text);const renderText=flags&&flags.includes("x")?compactText:`${flags&&flags.includes("u")?"A":"a"}rea ${compactText}`;if(typeof BookUtil==="undefined"){textStack[0]+=renderText}else{const area=BookUtil.curRender.headerMap[areaId]||{entry:{name:""}};const hoverMeta=Renderer.hover.getMakePredefinedHover(area.entry,{isLargeBookContent:true,depth:area.depth});textStack[0]+=`<a href="#${BookUtil.curRender.curBookId},${area.chapter},${UrlUtil.encodeForHash(area.entry.name)},0" ${hoverMeta.html}>${renderText}</a>`}break}case"@loader":{const{name:name,path:path}=this._renderString_getLoaderTagMeta(text);textStack[0]+=`<span onclick="BrewUtil.handleLoadbrewClick(this, '${path.escapeQuotes()}', '${name.escapeQuotes()}')" class="rd__wrp-loadbrew--ready" title="Click to install homebrew">${name}<span class="glyphicon glyphicon-download-alt rd__loadbrew-icon rd__loadbrew-icon"></span></span>`;break}case"@book":case"@adventure":{const page=tag==="@book"?"book.html":"adventure.html";const[displayText,book,chapter,section,rawNumber]=Renderer.splitTagByPipe(text);const number=rawNumber||0;const hash=`${book}${chapter?`${HASH_PART_SEP}${chapter}${section?`${HASH_PART_SEP}${UrlUtil.encodeForHash(section)}${number!=null?`${HASH_PART_SEP}${UrlUtil.encodeForHash(number)}`:""}`:""}`:""}`;const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.getCurrentPage()},text:displayText};this._recursiveRender(fauxEntry,textStack,meta);break}case"@quickref":{const[displayText,source,ixChapter,section,ixSection,...others]=Renderer.splitTagByPipe(text);const hash=`bookref-quick${HASH_PART_SEP}${ixChapter}${HASH_PART_SEP}${UrlUtil.encodeForHash(section)}${HASH_PART_SEP}${ixSection||0}`;const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.PG_QUICKREF,hash:hash,hashPreEncoded:true,hover:{page:UrlUtil.PG_QUICKREF,source:source||SRC_CRB,hash:hash,hashPreEncoded:true}},text:displayText};this._recursiveRender(fauxEntry,textStack,meta);break}case"@deity":{const[name,source,displayText,...others]=Renderer.splitTagByPipe(text);const hash=`${name}${source?`${HASH_LIST_SEP}${source}`:""}`;const fauxEntry={type:"link",href:{type:"internal",hash:hash},text:displayText||name};fauxEntry.href.path=UrlUtil.PG_DEITIES;if(!source)fauxEntry.href.hash+=`${HASH_LIST_SEP}${SRC_CRB}`;fauxEntry.href.hover={page:UrlUtil.PG_DEITIES,source:source||SRC_CRB};this._recursiveRender(fauxEntry,textStack,meta);break}case"@trait":{const[name,source,displayText,...others]=Renderer.splitTagByPipe(text);const parsedName=Parser.parseTraits([name],{toNone:true})[0];const hash=BrewUtil.hasSourceJson(source)?`${Parser.getTraitName(parsedName)}${HASH_LIST_SEP}${source}`:Parser.getTraitName(parsedName);const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.PG_TRAITS,hash:hash,hover:{page:UrlUtil.PG_TRAITS,source:source}},text:displayText||Parser.parseTraits([name],{toNaked:true})[0]};this._recursiveRender(fauxEntry,textStack,meta);break}case"@classFeature":{const unpacked=DataUtil.class.unpackUidClassFeature(text);const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:unpacked.className,source:unpacked.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:unpacked.level-1,ixFeature:0}})}`;const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.PG_CLASSES,hash:classPageHash,hashPreEncoded:true,hover:{page:"classfeature",source:unpacked.source,hash:UrlUtil.URL_TO_HASH_BUILDER["classFeature"](unpacked),hashPreEncoded:true}},text:unpacked.displayText||unpacked.name};this._recursiveRender(fauxEntry,textStack,meta);break}case"@subclassFeature":{const unpacked=DataUtil.class.unpackUidSubclassFeature(text);const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:unpacked.className,source:unpacked.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:unpacked.level-1,ixFeature:0}})}`;const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.PG_CLASSES,hash:classPageHash,hashPreEncoded:true,hover:{page:"subclassfeature",source:unpacked.source,hash:UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"](unpacked),hashPreEncoded:true}},text:unpacked.displayText||unpacked.name};this._recursiveRender(fauxEntry,textStack,meta);break}case"@runeItem":{const{hashes:hashes,displayText:displayText,name:name,source:source}=DataUtil.runeItem.unpackUid(text);let[baseItemHash,...runeHashes]=hashes;const preloadId=`${VeCt.HASH_ITEM_RUNES}${HASH_SUB_KV_SEP}${baseItemHash}${HASH_SUB_LIST_SEP}${runeHashes.join(HASH_SUB_LIST_SEP)}`;const itemsPageHash=`${baseItemHash}${HASH_PART_SEP}runebuilder${HASH_SUB_KV_SEP}true${HASH_SUB_LIST_SEP}${runeHashes.join(HASH_SUB_LIST_SEP)}`;const fauxEntry={type:"link",href:{type:"internal",path:UrlUtil.PG_ITEMS,hash:itemsPageHash,hashPreEncoded:true,hover:{page:UrlUtil.PG_ITEMS,source:source,hash:UrlUtil.URL_TO_HASH_BUILDER["runeItem"]({name:name,source:source}),hashPreEncoded:true,preloadId:preloadId}},text:displayText||name};this._recursiveRender(fauxEntry,textStack,meta);break}case"@condition":{const{name:name,source:source,displayText:displayText,others:others}=DataUtil.generic.unpackUid(text,tag);const hash=`${name.replace(/\s\d+$/,"")}${HASH_LIST_SEP}${source}`;const fauxEntry={type:"link",href:{type:"internal",hash:hash,path:UrlUtil.PG_CONDITIONS,hover:{page:UrlUtil.PG_CONDITIONS,source:source}},text:displayText||name};this._recursiveRender(fauxEntry,textStack,meta);break}default:{const{name:name,source:source,displayText:displayText,others:others}=DataUtil.generic.unpackUid(text,tag);const hash=`${name}${HASH_LIST_SEP}${source}`;const fauxEntry={type:"link",href:{type:"internal",hash:hash},text:displayText||name};switch(tag){case"@spell":fauxEntry.href.path=UrlUtil.PG_SPELLS;fauxEntry.href.hover={page:UrlUtil.PG_SPELLS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@ritual":fauxEntry.href.path=UrlUtil.PG_RITUALS;fauxEntry.href.hover={page:UrlUtil.PG_RITUALS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@vehicle":fauxEntry.href.path=UrlUtil.PG_VEHICLES;fauxEntry.href.hover={page:UrlUtil.PG_VEHICLES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@relicGift":fauxEntry.href.path=UrlUtil.PG_RELICGIFTS;fauxEntry.href.hover={page:UrlUtil.PG_RELICGIFTS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@item":fauxEntry.href.path=UrlUtil.PG_ITEMS;fauxEntry.href.hover={page:UrlUtil.PG_ITEMS,source:source};fauxEntry.text=displayText||name.replace(/ \(.+\)/,"");this._recursiveRender(fauxEntry,textStack,meta);break;case"@class":{fauxEntry.href.hover={page:UrlUtil.PG_CLASSES,source:source};if(others.length){const[subclassShortName,subclassSource,featurePart]=others;const classStateOpts={subclass:{shortName:subclassShortName.trim(),source:subclassSource?Parser.sourceJsonToAbv(subclassSource.trim()):source||SRC_CRB}};const hoverSubhashObj=UrlUtil.unpackSubHash(UrlUtil.getClassesPageStatePart(classStateOpts));fauxEntry.href.hover.subhashes=[{key:"state",value:hoverSubhashObj.state,preEncoded:true}];if(featurePart){const featureParts=featurePart.trim().split("-");classStateOpts.feature={ixLevel:featureParts[0]||"0",ixFeature:featureParts[1]||"0"}}const subhashObj=UrlUtil.unpackSubHash(UrlUtil.getClassesPageStatePart(classStateOpts));fauxEntry.href.subhashes=[{key:"state",value:subhashObj.state.join(HASH_SUB_LIST_SEP),preEncoded:true},{key:"flst.classes.classesmiscellaneous",value:"clear"}]}fauxEntry.href.path=UrlUtil.PG_CLASSES;this._recursiveRender(fauxEntry,textStack,meta);break}case"@creature":fauxEntry.href.path=UrlUtil.PG_BESTIARY;fauxEntry.href.hover={page:UrlUtil.PG_BESTIARY,source:source};if(others.length){const targetLvl=others[0];fauxEntry.href.hover.preloadId=`${VeCt.HASH_CR_SCALED}:${targetLvl}`;fauxEntry.href.subhashes=[{key:VeCt.HASH_CR_SCALED,value:targetLvl}];fauxEntry.text=displayText||`${name} (CR ${others[0]})`}this._recursiveRender(fauxEntry,textStack,meta);break;case"@disease":case"@affliction":case"@curse":fauxEntry.href.path=UrlUtil.PG_AFFLICTIONS;fauxEntry.href.hover={page:UrlUtil.PG_AFFLICTIONS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@bg":case"@background":fauxEntry.href.path=UrlUtil.PG_BACKGROUNDS;fauxEntry.href.hover={page:UrlUtil.PG_BACKGROUNDS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@archetype":fauxEntry.href.path="archetypes.html";fauxEntry.href.hover={page:UrlUtil.PG_ARCHETYPES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@versatileHeritage":{fauxEntry.href.hash=HASH_BLANK;fauxEntry.href.hover={page:UrlUtil.PG_ANCESTRIES,source:source};const ancStateOpts={heritage:{name:name,source:source}};const subhashObj=UrlUtil.unpackSubHash(UrlUtil.getAncestriesPageStatePart(ancStateOpts));fauxEntry.href.hover.subhashes=[{key:"state",value:subhashObj.state,preEncoded:true}];fauxEntry.href.subhashes=[{key:"state",value:subhashObj.state.join(HASH_SUB_LIST_SEP),preEncoded:true},{key:"flst.ancestries.ancestriesmiscellaneous",value:"clear"}];fauxEntry.href.path=UrlUtil.PG_ANCESTRIES;this._recursiveRender(fauxEntry,textStack,meta);break}case"@ancestry":fauxEntry.href.hover={page:UrlUtil.PG_ANCESTRIES,source:source};if(others.length){const[heritageName,heritageSource]=others;const ancStateOpts={heritage:{name:heritageName.trim(),source:heritageSource?Parser.sourceJsonToAbv(heritageSource.trim()):source||SRC_CRB}};const subhashObj=UrlUtil.unpackSubHash(UrlUtil.getAncestriesPageStatePart(ancStateOpts));fauxEntry.href.hover.subhashes=[{key:"state",value:subhashObj.state,preEncoded:true}];fauxEntry.href.subhashes=[{key:"state",value:subhashObj.state.join(HASH_SUB_LIST_SEP),preEncoded:true},{key:"flst.ancestries.ancestriesmiscellaneous",value:"clear"}]}fauxEntry.href.path=UrlUtil.PG_ANCESTRIES;this._recursiveRender(fauxEntry,textStack,meta);break;case"@eidolon":case"@companion":case"@familiar":fauxEntry.href.path=UrlUtil.PG_COMPANIONS_FAMILIARS;fauxEntry.href.hover={page:UrlUtil.PG_COMPANIONS_FAMILIARS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@familiarAbility":fauxEntry.href.path=UrlUtil.PG_COMPANIONS_FAMILIARS;fauxEntry.href.hover={page:UrlUtil.PG_COMPANIONS_FAMILIARS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@companionAbility":fauxEntry.href.path=UrlUtil.PG_COMPANIONS_FAMILIARS;fauxEntry.href.hover={page:UrlUtil.PG_COMPANIONS_FAMILIARS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@feat":fauxEntry.href.path=UrlUtil.PG_FEATS;fauxEntry.href.hover={page:UrlUtil.PG_FEATS,source:source};fauxEntry.text=displayText||name.replace(/ \(.+\)/,"");this._recursiveRender(fauxEntry,textStack,meta);break;case"@organization":fauxEntry.href.path=UrlUtil.PG_ORGANIZATIONS;fauxEntry.href.hover={page:UrlUtil.PG_ORGANIZATIONS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@creatureTemplate":fauxEntry.href.path=UrlUtil.PG_CREATURETEMPLATE;fauxEntry.href.hover={page:UrlUtil.PG_CREATURETEMPLATE,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@hazard":fauxEntry.href.path=UrlUtil.PG_HAZARDS;fauxEntry.href.hover={page:UrlUtil.PG_HAZARDS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@optfeature":fauxEntry.href.path=UrlUtil.PG_OPTIONAL_FEATURES;fauxEntry.href.hover={page:UrlUtil.PG_OPTIONAL_FEATURES,source:source};fauxEntry.text=displayText||name.replace(/ \(.+\)/,"");this._recursiveRender(fauxEntry,textStack,meta);break;case"@variantrule":fauxEntry.href.path=UrlUtil.PG_VARIANTRULES;fauxEntry.href.hover={page:UrlUtil.PG_VARIANTRULES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@table":fauxEntry.href.path=UrlUtil.PG_TABLES;fauxEntry.href.hover={page:UrlUtil.PG_TABLES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@action":fauxEntry.href.path=UrlUtil.PG_ACTIONS;fauxEntry.href.hover={page:UrlUtil.PG_ACTIONS,source:source};fauxEntry.text=displayText||name.replace(/ \(.+\)/,"");this._recursiveRender(fauxEntry,textStack,meta);break;case"@ability":fauxEntry.href.path=UrlUtil.PG_ABILITIES;fauxEntry.href.hover={page:UrlUtil.PG_ABILITIES,source:source};fauxEntry.text=displayText||name.replace(/ \(.+\)/,"");this._recursiveRender(fauxEntry,textStack,meta);break;case"@language":fauxEntry.href.path=UrlUtil.PG_LANGUAGES;fauxEntry.href.hover={page:UrlUtil.PG_LANGUAGES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@event":fauxEntry.href.path=UrlUtil.PG_EVENTS;fauxEntry.href.hover={page:UrlUtil.PG_EVENTS,source:source};this._recursiveRender(fauxEntry,textStack,meta);break;case"@place":case"@plane":case"@nation":case"@mindscape":case"@settlement":fauxEntry.href.path=UrlUtil.PG_PLACES;fauxEntry.href.hover={page:UrlUtil.PG_PLACES,source:source};this._recursiveRender(fauxEntry,textStack,meta);break}break}}};this._renderString_actionCopyText=function(text){switch(text.toLowerCase()){case"1":case"a":return"[>]";case"2":case"d":return"[>>]";case"3":case"t":return"[>>>]";case"f":return"[F]";case"r":return"[R]";default:return"[?]"}};this._renderString_getLoaderTagMeta=function(text){const[name,file]=Renderer.splitTagByPipe(text);const path=/^.*?:\/\//.test(file)?file:`https://raw.githubusercontent.com/Pf2eTools/homebrew/master/${file}`;return{name:name,path:path}};this._renderPrimitive=function(entry,textStack,meta,options){textStack[0]+=entry};this._renderLink=function(entry,textStack,meta,options){let href=this._renderLink_getHref(entry);const metasHooks=this._getHooks("link","ele").map((hook=>hook(entry))).filter(Boolean);const isDisableEvents=metasHooks.some((it=>it.isDisableEvents));if(this._isInternalLinksDisabled&&entry.href.type==="internal"){textStack[0]+=`<span class="bold" ${isDisableEvents?"":this._renderLink_getHoverString(entry)} ${metasHooks.map((it=>it.string)).join(" ")}>${this.render(entry.text)}</span>`}else{textStack[0]+=`<a href="${href}" ${entry.href.type==="internal"?"":`target="_blank" rel="noopener noreferrer"`} ${isDisableEvents?"":this._renderLink_getHoverString(entry)} ${metasHooks.map((it=>it.string))}>${this.render(entry.text)}</a>`}};this._renderLink_getHref=function(entry){let href;if(entry.href.type==="internal"){href=`${this.baseUrl}${entry.href.path}#`;if(entry.href.hash!=null){href+=entry.href.hashPreEncoded?entry.href.hash:UrlUtil.encodeForHash(entry.href.hash)}if(entry.href.subhashes!=null){for(let i=0;i<entry.href.subhashes.length;++i){href+=this._renderLink_getSubhashPart(entry.href.subhashes[i])}}}else if(entry.href.type==="external"){href=entry.href.url}return href};this._renderLink_getSubhashPart=function(subHash){let out="";if(subHash.preEncoded)out+=`${HASH_PART_SEP}${subHash.key}${HASH_SUB_KV_SEP}`;else out+=`${HASH_PART_SEP}${UrlUtil.encodeForHash(subHash.key)}${HASH_SUB_KV_SEP}`;if(subHash.value!=null){if(subHash.preEncoded)out+=subHash.value;else out+=UrlUtil.encodeForHash(subHash.value)}else{out+=subHash.values.map((v=>UrlUtil.encodeForHash(v))).join(HASH_SUB_LIST_SEP)}return out};this._renderLink_getHoverString=function(entry){if(!entry.href.hover)return"";let procHash=entry.href.hover.hash?entry.href.hover.hashPreEncoded?entry.href.hover.hash:UrlUtil.encodeForHash(entry.href.hover.hash):entry.href.hashPreEncoded?entry.href.hash:UrlUtil.encodeForHash(entry.href.hash);procHash=procHash.replace(/'/g,"\\'");if(this._tagExportDict){this._tagExportDict[procHash]={page:entry.href.hover.page,source:entry.href.hover.source,hash:procHash}}if(entry.href.hover.subhashes){for(let i=0;i<entry.href.hover.subhashes.length;++i){procHash+=this._renderLink_getSubhashPart(entry.href.hover.subhashes[i])}}if(this._isAddHandlers)return this._getHoverString(entry.href.hover.page,entry.href.hover.source,procHash,entry.href.hover.preloadId);else return""};this._getHoverString=function(page,source,procHash,preloadId){return`onmouseover="Renderer.hover.pHandleLinkMouseOver(event, this, '${page}', '${source}', '${procHash}', ${preloadId?`'${preloadId}'`:"null"})" onmouseleave="Renderer.hover.handleLinkMouseLeave(event, this)" onmousemove="Renderer.hover.handleLinkMouseMove(event, this)"  ${Renderer.hover.getPreventTouchString()}`};this.render=function(entry,opts){opts=opts||{};const tempStack=[];this.recursiveRender(entry,tempStack,opts);return tempStack.join("")};this.render_addTerm=function(entry,terminator=";"){const tempStack=[];this.recursiveRender(entry,tempStack);return this._addTerm(tempStack.join(""),terminator)};this._addTerm=function(str,terminator=";"){if(/[^<>\w\s](?:<\/[^<\s]+>)*$/.test(str))return str;else return`${str}${terminator}`};this.renderJoinCommaOrSemi=function(entries,options){options=options||{};if(entries.includes((e=>typeof e!=="string")))return this.render(entries);if(options.andOr===true){if(entries.find((element=>element.includes("and"||","))))return this.render(entries.join("; or "));else return this.render(entries.join(" or "))}if(entries.find((element=>element.includes(","))))return this.render(entries.join("; "));else return this.render(entries.join(", "))}}Renderer.ENTRIES_WITH_ENUMERATED_TITLES=[{type:"section",key:"entries"},{type:"entries",key:"entries"},{type:"options",key:"entries"},{type:"inset",key:"entries"},{type:"insetReadaloud",key:"entries"},{type:"variant",key:"entries"},{type:"variantInner",key:"entries"},{type:"actions",key:"entries"},{type:"flowBlock",key:"entries"},{type:"optfeature",key:"entries"},{type:"patron",key:"entries"}];Renderer.ENTRIES_WITH_CHILDREN=[...Renderer.ENTRIES_WITH_ENUMERATED_TITLES,{type:"list",key:"items"},{type:"table",key:"rows"}];Renderer.events={handleClick_copyCode(evt,ele){const $e=$(ele).parent().next("pre");MiscUtil.pCopyTextToClipboard($e.text());JqueryUtil.showCopiedEffect($e)},handleClick_toggleCodeWrap(evt,ele){const nxt=!StorageUtil.syncGet("rendererCodeWrap");StorageUtil.syncSet("rendererCodeWrap",nxt);const $btn=$(ele).toggleClass("active",nxt);const $e=$btn.parent().next("pre");$e.toggleClass("rd__pre-wrap",nxt)},handleLoad_inlineStatblock(ele){const observer=Renderer.utils.lazy.getCreateObserver({observerId:"inlineStatblock",fnOnObserve:Renderer.events._handleLoad_inlineStatblock_fnOnObserve.bind(Renderer.events)});observer.track(ele.parentNode)},_handleLoad_inlineStatblock_fnOnObserve({entry:entry}){const ele=entry.target;const tag=ele.dataset.statTag.uq();const page=ele.dataset.statPage.uq();const pageRenderFn=(ele.dataset.statPageRenderFn||ele.dataset.statPage).uq();const source=ele.dataset.statSource.uq();const name=ele.dataset.statName.uq();const hash=ele.dataset.statHash.uq();Renderer.hover.pCacheAndGet(page,source,hash).then((toRender=>{if(!toRender){ele.outerHTML=`<div class="pf2-stat"><i>Failed to load ${Renderer.get().render(`{@${tag} ${name}|${source}}`)}!</i></div>`;throw new Error(`Could not find ${tag}: ${hash}`)}const fnRender=Renderer.hover._pageToRenderFn(pageRenderFn);const rendered=fnRender(toRender,{noPage:true});if(typeof rendered==="string")ele.outerHTML=rendered;else if(MiscUtil.isObject(rendered))$(ele).replaceWith(rendered)}))}};Renderer.applyProperties=function(entry,object){const propSplit=Renderer.splitByPropertyInjectors(entry);const len=propSplit.length;if(len===1)return entry;let textStack="";for(let i=0;i<len;++i){const s=propSplit[i];if(!s)continue;if(s.startsWith("{=")){const[path,modifiers]=s.slice(2,-1).split("/");let fromProp=object[path];if(modifiers){for(const modifier of modifiers){switch(modifier){case"a":fromProp=Renderer.applyProperties._leadingAn.has(fromProp[0].toLowerCase())?"an":"a";break;case"l":fromProp=fromProp.toLowerCase();break;case"t":fromProp=fromProp.toTitleCase();break;case"u":fromProp=fromProp.toUpperCase();break}}}textStack+=fromProp}else textStack+=s}return textStack};Renderer.applyProperties._leadingAn=new Set(["a","e","i","o","u"]);Renderer.applyAllProperties=function(entries,object){const handlers={string:str=>Renderer.applyProperties(str,object)};return MiscUtil.getWalker().walk(entries,handlers)};Renderer.attackTagToFull=function(tagStr){function renderTag(tags){return`${tags.includes("m")?"Melee ":tags.includes("r")?"Ranged ":tags.includes("g")?"Magical ":tags.includes("a")?"Area ":""}${tags.includes("w")?"Weapon ":tags.includes("s")?"Spell ":""}`}const tagGroups=tagStr.toLowerCase().split(",").map((it=>it.trim())).filter((it=>it)).map((it=>it.split("")));if(tagGroups.length>1){const seen=new Set(tagGroups.last());for(let i=tagGroups.length-2;i>=0;--i){tagGroups[i]=tagGroups[i].filter((it=>{const out=!seen.has(it);seen.add(it);return out}))}}return`${tagGroups.map((it=>renderTag(it))).join(" or ")}Attack:`};Renderer.splitFirstSpace=function(string){const firstIndex=string.indexOf(" ");return firstIndex===-1?[string,""]:[string.substr(0,firstIndex),string.substr(firstIndex+1)]};Renderer._splitByTagsBase=function(leadingCharacter){return function(string){let tagDepth=0;let char,char2;const out=[];let curStr="";let isLastOpen=false;const len=string.length;for(let i=0;i<len;++i){char=string[i];char2=string[i+1];switch(char){case"{":isLastOpen=true;if(char2===leadingCharacter){if(tagDepth++>0){curStr+="{"}else{out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));curStr=`{${leadingCharacter}`;++i}}else curStr+="{";break;case"}":isLastOpen=false;curStr+="}";if(tagDepth!==0&&--tagDepth===0){out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));curStr=""}break;case leadingCharacter:{if(!isLastOpen)curStr+="<VE_LEAD>";else curStr+=leadingCharacter;break}default:isLastOpen=false;curStr+=char;break}}if(curStr)out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));return out}};Renderer.splitByTags=Renderer._splitByTagsBase("@");Renderer.splitByPropertyInjectors=Renderer._splitByTagsBase("=");Renderer._splitByPipeBase=function(leadingCharacter){return function(string){let tagDepth=0;let char,char2;const out=[];let curStr="";const len=string.length;for(let i=0;i<len;++i){char=string[i];char2=string[i+1];switch(char){case"{":if(char2===leadingCharacter)tagDepth++;curStr+="{";break;case"}":if(tagDepth)tagDepth--;curStr+="}";break;case"|":{if(tagDepth)curStr+="|";else{out.push(curStr);curStr=""}break}default:{curStr+=char;break}}}if(curStr)out.push(curStr);return out}};Renderer.splitTagByPipe=Renderer._splitByPipeBase("@");Renderer.getEntryDice=function(entry,name,isAddHandlers=true){const toDisplay=Renderer.getEntryDiceDisplayText(entry);if(entry.rollable===true)return Renderer.getRollableEntryDice(entry,name,isAddHandlers,toDisplay);else return toDisplay};Renderer.getRenderedLore=function(entity){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);if(entity.lore)entity.lore.forEach((l=>renderer.recursiveRender(l,textStack)));return textStack.join("")};Renderer.getImage=function(entity){const textStack=[""];if(entity.images){const img=entity.images[0];if(img.includes("2e.aonprd.com"))textStack.push(`<a target="_blank" rel="noopener noreferrer" title="Shift/Ctrl to open in a new window/tab." href="${img}">Images available on the Archives of Nethys.</a>`);else if(img.includes("demiplane.com"))textStack.push(`<a target="_blank" rel="noopener noreferrer" title="Shift/Ctrl to open in a new window/tab." href="${img}">Images available on the Demiplane.</a>`);else textStack.push(`<p><img style="display: block; margin-left: auto; margin-right: auto; width: 50%;" src="${img}" alt="No Image Found."></p>`)}return textStack.join("")};Renderer.pGetFluff=async function(entity){const entityProp=entity.__prop??entity.type;return Renderer.utils.pGetFluff({entity:entity,fluffUrl:`data/fluff-${UrlUtil.PG_TO_NAME[UrlUtil.CAT_TO_PAGE[eval(`Parser.CAT_ID_${entityProp.toUpperCase()}`)]].toLowerCase()}.json`,fluffProp:`${entityProp}Fluff`})};Renderer.getRollableEntryDice=function(entry,name,isAddHandlers=true,toDisplay){const toPack=MiscUtil.copy(entry);if(typeof toPack.toRoll!=="string"){toPack.toRoll=Renderer.legacyDiceToString(toPack.toRoll)}const handlerPart=isAddHandlers?`onmousedown="event.preventDefault()" onclick="Renderer.dice.pRollerClickUseData(event, this)" data-packed-dice='${JSON.stringify(toPack).escapeQuotes()}'`:"";const rollableTitlePart=isAddHandlers?Renderer.getEntryDiceTitle(toPack.subType):null;const titlePart=isAddHandlers?`title="${[name,rollableTitlePart].filter(Boolean).join(". ").escapeQuotes()}" ${name?`data-roll-name="${name}"`:""}`:name?`title="${name.escapeQuotes()}" data-roll-name="${name.escapeQuotes()}"`:"";return`<span class="roller render-roller" ${titlePart} ${handlerPart}>${toDisplay}</span>`};Renderer.getEntryDiceTitle=function(subType){return`Click to roll. ${subType==="damage"?"SHIFT to roll a critical hit, CTRL to half damage (rounding down).":subType==="d20"?"SHIFT to roll with advantage, CTRL to roll with disadvantage.":subType==="hit"?"SHIFT to roll with MAP, CTRL to roll with MAP × 2.":"SHIFT/CTRL to roll twice."}`};Renderer.legacyDiceToString=function(array){let stack="";array.forEach((r=>{stack+=`${r.neg?"-":stack===""?"":"+"}${r.number||1}d${r.faces}${r.mod?r.mod>0?`+${r.mod}`:r.mod:""}`}));return stack};Renderer.getEntryDiceDisplayText=function(entry){function getDiceAsStr(){if(entry.successThresh)return`${entry.successThresh} percent`;else if(typeof entry.toRoll==="string")return entry.toRoll;else{return Renderer.legacyDiceToString(entry.toRoll)}}return entry.displayText?entry.displayText:getDiceAsStr()};Renderer.parseScaleDice=function(tag,text){const[baseRoll,progression,addPerProgress,renderMode]=Renderer.splitTagByPipe(text);const progressionParse=MiscUtil.parseNumberRange(progression,1,10);const baseLevel=Math.min(...progressionParse);const options={};const isMultableDice=/^(\d+)d(\d+)$/i.exec(addPerProgress);const getSpacing=()=>{let diff=null;const sorted=[...progressionParse].sort(SortUtil.ascSort);for(let i=1;i<sorted.length;++i){const prev=sorted[i-1];const curr=sorted[i];if(diff==null)diff=curr-prev;else if(curr-prev!==diff)return null}return diff};const spacing=getSpacing();progressionParse.forEach((k=>{const offset=k-baseLevel;if(isMultableDice&&spacing!=null){options[k]=offset?`${Number(isMultableDice[1])*(offset/spacing)}d${isMultableDice[2]}`:""}else{options[k]=offset?[...new Array(Math.floor(offset/spacing))].map((_=>addPerProgress)).join("+"):""}}));const out={type:"dice",rollable:true,toRoll:baseRoll,displayText:addPerProgress,prompt:{entry:"Heighten to...",mode:renderMode,options:options}};if(tag==="@scaledamage")out.subType="damage";return out};Renderer.getAbilityData=function(abArr){function doRenderOuter(abObj){const mainAbs=[];const asCollection=[];const areNegative=[];const toConvertToText=[];const toConvertToShortText=[];if(abObj!=null){handleAllAbilities(abObj);handleAbilitiesChoose();return new Renderer._AbilityData(toConvertToText.join("; "),toConvertToShortText.join("; "),asCollection,areNegative)}return new Renderer._AbilityData("","",[],[]);function handleAllAbilities(abObj,targetList){MiscUtil.copy(Parser.ABIL_ABVS).sort(((a,b)=>SortUtil.ascSort(abObj[b]||0,abObj[a]||0))).forEach((shortLabel=>handleAbility(abObj,shortLabel,targetList)))}function handleAbility(abObj,shortLabel,optToConvertToTextStorage){if(abObj[shortLabel]!=null){const isNegMod=abObj[shortLabel]<0;const toAdd=`${shortLabel.uppercaseFirst()} ${isNegMod?"":"+"}${abObj[shortLabel]}`;if(optToConvertToTextStorage){optToConvertToTextStorage.push(toAdd)}else{toConvertToText.push(toAdd);toConvertToShortText.push(toAdd)}mainAbs.push(shortLabel.uppercaseFirst());asCollection.push(shortLabel);if(isNegMod)areNegative.push(shortLabel)}}function handleAbilitiesChoose(){if(abObj.choose!=null){const ch=abObj.choose;let outStack="";if(ch.weighted){const w=ch.weighted;const areIncreaseShort=[];const areIncrease=w.weights.filter((it=>it>=0)).sort(SortUtil.ascSort).reverse().map((it=>{areIncreaseShort.push(`+${it}`);return`one ability to increase by ${it}`}));const areReduceShort=[];const areReduce=w.weights.filter((it=>it<0)).map((it=>-it)).sort(SortUtil.ascSort).map((it=>{areReduceShort.push(`-${it}`);return`one ability to decrease by ${it}`}));const froms=w.from.map((it=>it.uppercaseFirst()));const startText=froms.length===6?`Choose `:`From ${froms.joinConjunct(", "," and ")} choose `;toConvertToText.push(`${startText}${areIncrease.concat(areReduce).joinConjunct(", "," and ")}`);toConvertToShortText.push(`${froms.length===6?"Any combination ":""}${areIncreaseShort.concat(areReduceShort).join("/")}${froms.length===6?"":` from ${froms.join("/")}`}`)}else{const allAbilities=ch.from.length===6;const allAbilitiesWithParent=isAllAbilitiesWithParent(ch);let amount=ch.amount===undefined?1:ch.amount;amount=(amount<0?"":"+")+amount;if(allAbilities){outStack+="any "}else if(allAbilitiesWithParent){outStack+="any other "}if(ch.count!=null&&ch.count>1){outStack+=`${Parser.numberToText(ch.count)} `}if(allAbilities||allAbilitiesWithParent){outStack+=`${ch.count>1?"unique ":""}${amount}`}else{for(let j=0;j<ch.from.length;++j){let suffix="";if(ch.from.length>1){if(j===ch.from.length-2){suffix=" or "}else if(j<ch.from.length-2){suffix=", "}}let thsAmount=` ${amount}`;if(ch.from.length>1){if(j!==ch.from.length-1){thsAmount=""}}outStack+=ch.from[j].uppercaseFirst()+thsAmount+suffix}}}if(outStack.trim()){toConvertToText.push(`Choose ${outStack}`);toConvertToShortText.push(outStack.uppercaseFirst())}}}function isAllAbilitiesWithParent(chooseAbs){const tempAbilities=[];for(let i=0;i<mainAbs.length;++i){tempAbilities.push(mainAbs[i].toLowerCase())}for(let i=0;i<chooseAbs.from.length;++i){const ab=chooseAbs.from[i].toLowerCase();if(!tempAbilities.includes(ab))tempAbilities.push(ab);if(!asCollection.includes(ab.toLowerCase))asCollection.push(ab.toLowerCase())}return tempAbilities.length===6}}const outerStack=(abArr||[null]).map((it=>doRenderOuter(it)));if(outerStack.length<=1)return outerStack[0];return new Renderer._AbilityData(`Choose one of: ${outerStack.map(((it,i)=>`(${Parser.ALPHABET[i].toLowerCase()}) ${it.asText}`)).join(" ")}`,`One from: ${outerStack.map(((it,i)=>`(${Parser.ALPHABET[i].toLowerCase()}) ${it.asTextShort}`)).join(" ")}`,[...new Set(outerStack.map((it=>it.asCollection)).flat())],[...new Set(outerStack.map((it=>it.areNegative)).flat())])};Renderer._AbilityData=function(asText,asTextShort,asCollection,areNegative){this.asText=asText;this.asTextShort=asTextShort;this.asCollection=asCollection;this.areNegative=areNegative};Renderer.getFilterSubhashes=function(filters,namespace=null){let customHash=null;const subhashes=filters.map((f=>{const[fName,fVals,fMeta,fOpts]=f.split("=").map((s=>s.trim()));const isBoxData=fName.startsWith("fb");const key=isBoxData?`${fName}${namespace?`.${namespace}`:""}`:`flst${namespace?`.${namespace}`:""}${UrlUtil.encodeForHash(fName)}`;let value;if(isBoxData){return{key:key,value:fVals,preEncoded:true}}else if(fName==="search"){return{key:VeCt.FILTER_BOX_SUB_HASH_SEARCH_PREFIX,value:UrlUtil.encodeForHash(fVals),preEncoded:true}}else if(fName==="hash"){customHash=fVals;return null}else if(fVals.startsWith("[")&&fVals.endsWith("]")){const[min,max]=fVals.substring(1,fVals.length-1).split(";").map((it=>it.trim()));if(max==null){value=[`min=${min}`,`max=${min}`].join(HASH_SUB_LIST_SEP)}else{value=[min?`min=${min}`:"",max?`max=${max}`:""].filter(Boolean).join(HASH_SUB_LIST_SEP)}}else{value=fVals.split(";").map((s=>s.trim())).filter(Boolean).map((s=>{if(s.startsWith("!"))return`${UrlUtil.encodeForHash(s.slice(1))}=2`;return`${UrlUtil.encodeForHash(s)}=1`})).join(HASH_SUB_LIST_SEP)}const out=[{key:key,value:value,preEncoded:true}];if(fMeta){out.push({key:`flmt${UrlUtil.encodeForHash(fName)}`,value:fMeta,preEncoded:true})}if(fOpts){out.push({key:`flop${UrlUtil.encodeForHash(fName)}`,value:fOpts,preEncoded:true})}return out})).flat().filter(Boolean);return{customHash:customHash,subhashes:subhashes}};Renderer.utils={getBorderTr:optText=>`<tr><th class="border" colspan="6">${optText||""}</th></tr>`,getDividerDiv:()=>`<div class="pf2-stat pf2-stat__line"></div>`,getTraitsDiv:(traits,options)=>{traits=traits||[];options=options||{};let source;const renderer=Renderer.get();const traitsHtml=[];for(let trait of options.doNotSortTraits?traits:traits.sort(SortUtil.sortTraits)){const styles=["pf2-trait"];if(traits.indexOf(trait)===0){styles.push("pf2-trait--left")}if(traits.indexOf(trait)===traits.length-1){styles.push("pf2-trait--right")}switch(Renderer.stripTags(trait.toLowerCase())){case"uncommon":styles.push("pf2-trait--uncommon");break;case"rare":styles.push("pf2-trait--rare");break;case"unique":styles.push("pf2-trait--unique");break}if(Renderer.trait.isTraitInCategory(Renderer.stripTags(trait),"Size")){styles.push("pf2-trait--size")}else if(Renderer.trait.isTraitInCategory(Renderer.stripTags(trait),"_alignAbv")){styles.push("pf2-trait--alignment")}else if(Renderer.trait.isTraitInCategory(Renderer.stripTags(trait),"Settlement")){styles.push("pf2-trait--settlement")}if(options.doNotTagTraits){let finishedTrait="";if(trait.includes(`{@`)){let traitRender=renderer.render(trait);finishedTrait=[traitRender.slice(0,2),` class="${styles.join(" ")}" `,traitRender.slice(2)].join("")}else{styles.push("pf2-trait--notag");finishedTrait=`<a class="${styles.join(" ")}">${trait}</a>`}traitsHtml.push(finishedTrait)}else{[trait,source]=trait.split("|");const hash=BrewUtil.hasSourceJson(source)?UrlUtil.encodeForHash([Parser.getTraitName(trait),source]):UrlUtil.encodeForHash([Parser.getTraitName(trait)]);const url=`${UrlUtil.PG_TRAITS}#${hash}`;source=source||"TRT";const procHash=hash.replace(/'/g,"\\'");const hoverMeta=Renderer.get()._getHoverString(UrlUtil.PG_TRAITS,source,procHash,null);traitsHtml.push(`<a href="${url}" class="${styles.join(" ")}" ${hoverMeta}>${Parser.parseTraits([trait],{toNaked:true})[0]}<span style="letter-spacing: -.2em">&nbsp;</span></a>`)}}return traitsHtml.join("")},getNotes:(obj,opts)=>{opts=opts||{};opts.exclude=opts.exclude||[];opts.raw=opts.raw||[];const renderer=Renderer.get();const renderedNotes=Object.keys(obj).filter((it=>!opts.exclude.includes(it))).map((key=>{if(opts.raw.includes(key)){const items=obj[key];return Array.isArray(items)?obj[key].join(", "):obj[key]}else{if(opts.dice)return renderer.render(`{@d20 ${Parser.numToBonus(obj[key])}||${opts.dice.name||key}} ${key}`);else return`${obj[key]} ${key}`}})).join(", ");return`${renderedNotes?` (${renderedNotes})`:""}`},getNameDiv:(it,opts)=>{opts=opts||{};let dataPart="";if(opts.page){const hash=UrlUtil.URL_TO_HASH_BUILDER[opts.page](it);dataPart=`data-page="${opts.page}" data-source="${it.source.uq()}" data-hash="${hash.uq()}"`}const type=opts.type!=null?opts.type:it.type||"";const DC=opts.level!=null?Number(opts.level):Number(it.level);const level=opts.level!=null?`${opts.level}`:!isNaN(Number(it.level))||typeof it.level==="string"?` ${it.level}`:"";const activity=opts.activity?` ${it.activity!=null&&Parser.timeToFullEntry(it.activity).includes("@as")?Renderer.get().render(Parser.timeToFullEntry(it.activity)):``}`:``;let typesForSkills=it.traditions||it.traits||it.type||"";const $ele=$$`<div class="flex ${opts.isEmbedded?"pf2-embedded-name":""}" ${dataPart}>
			<p class="pf2-stat pf2-stat__name"><span class="stats-name copyable" onmousedown="event.preventDefault()" onclick="Renderer.utils._pHandleNameClick(this)">${opts.prefix||""}${it._displayName||it.name}${opts.suffix||""}</span>${activity}</p>
			<p class="pf2-stat pf2-stat__name pf2-stat__name--level">${opts.$btnScaleLvl?opts.$btnScaleLvl:""}${opts.$btnResetScaleLvl?opts.$btnResetScaleLvl:""}
			<span title="${Parser.levelToDC(DC,type,it.traits)==="?"&&Parser.typeToSkill(typesForSkills)===""?"":`Identification DC ${Parser.levelToDC(DC,type,it.traits)} ${Renderer.stripTags(Parser.typeToSkill(typesForSkills))}`}">${type} ${level}</span>
			${opts.isEmbedded?` ${Renderer.get()._renderData_getEmbeddedToggle()}`:""}</p>
		</div>`;if(opts.asJquery)return $ele;else return $ele[0].outerHTML},getExcludedDiv(it,dataProp,page){if(!ExcludeUtil.isInitialised)return"";const hash=page?UrlUtil.URL_TO_HASH_BUILDER[page](it):UrlUtil.autoEncodeHash(it);const isExcluded=ExcludeUtil.isExcluded(hash,dataProp,it.source);return isExcluded?`<div class="pt-3 text-center text-danger"><b><i>Warning: This content has been <a href="blacklist.html">blacklisted</a>.</i></b></div>`:""},getPageP:(it,opts)=>{opts=opts||{};return`<p class="pf2-stat pf2-stat__source">\n\t\t\t\t\t${opts.prefix?opts.prefix:""}\n\t\t\t\t\t${it.source!=null?`<a href="${Parser.sourceJsonToStore(it.source)}"><strong>${Parser.sourceJsonToFull(it.source)}</strong></a>${it.page?`, page ${it.page}`:""}.`:""}\n\t\t\t\t\t${opts.noReprints||!it.otherSources?"":Renderer.utils.getOtherSourceHtml(it.otherSources)}\n\t\t\t\t</p>`},getOtherSourceHtml:otherSources=>`<span class="pf2-stat__source--other">\n\t\t${Object.keys(otherSources).map((k=>`${k} in ${otherSources[k].map((str=>{const[src,page]=str.split("|");return`<span title="${Parser.sourceJsonToFull(src)}${page?`, page ${page}`:""}"><a href="${Parser.sourceJsonToStore(src)}"><strong>${src}</strong></a></span>`})).join(", ")}.`)).join(" ")}\n\t\t</span>`,async _pHandleNameClick(ele){await MiscUtil.pCopyTextToClipboard($(ele).text());JqueryUtil.showCopiedEffect($(ele))},tabButton:(label,funcChange,funcPopulate)=>({label:label,funcChange:funcChange,funcPopulate:funcPopulate}),_tabs:{},_curTab:null,_prevTab:null,bindTabButtons:(...tabButtons)=>{Renderer.utils._tabs={};Renderer.utils._prevTab=Renderer.utils._curTab;Renderer.utils._curTab=null;const $content=$("#pagecontent");const $wrpTab=$(`#stat-tabs`);$wrpTab.find(`.stat-tab-gen`).remove();let initialTab=null;const toAdd=tabButtons.map(((tb,i)=>{const toSel=!Renderer.utils._prevTab&&i===0||Renderer.utils._prevTab&&Renderer.utils._prevTab.label===tb.label;const $t=$(`<span class="ui-tab__btn-tab-head ${toSel?`ui-tab__btn-tab-head--active`:""} btn btn-default stat-tab-gen">${tb.label}</span>`);tb.$t=$t;$t.click((()=>{const curTab=Renderer.utils._curTab;const tabs=Renderer.utils._tabs;if(!curTab||curTab.label!==tb.label){if(curTab)curTab.$t.removeClass(`ui-tab__btn-tab-head--active`);Renderer.utils._curTab=tb;$t.addClass(`ui-tab__btn-tab-head--active`);if(curTab)tabs[curTab.label].content=$content.children().detach();tabs[tb.label]=tb;if(!tabs[tb.label].content&&tb.funcPopulate){tb.funcPopulate()}else{$content.append(tabs[tb.label].content)}if(tb.funcChange)tb.funcChange()}}));if(Renderer.utils._prevTab&&Renderer.utils._prevTab.label===tb.label)initialTab=$t;return $t}));if(tabButtons.length!==1)toAdd.reverse().forEach(($t=>$wrpTab.prepend($t)));(initialTab||toAdd[toAdd.length-1]).click()},getPredefinedFluff(entry,prop){if(!entry.fluff)return null;const mappedProp=`_${prop}`;const mappedPropAppend=`_append${prop.uppercaseFirst()}`;const fluff={};const assignPropsIfExist=(fromObj,...props)=>{props.forEach((prop=>{if(fromObj[prop])fluff[prop]=fromObj[prop]}))};assignPropsIfExist(entry.fluff,"name","type","entries","images");if(entry.fluff[mappedProp]){const fromList=(BrewUtil.homebrew[prop]||[]).find((it=>it.name===entry.fluff[mappedProp].name&&it.source===entry.fluff[mappedProp].source));if(fromList){assignPropsIfExist(fromList,"name","type","entries","images")}}if(entry.fluff[mappedPropAppend]){const fromList=(BrewUtil.homebrew[prop]||[]).find((it=>it.name===entry.fluff[mappedPropAppend].name&&it.source===entry.fluff[mappedPropAppend].source));if(fromList){if(fromList.entries){fluff.entries=MiscUtil.copy(fluff.entries||[]);fluff.entries.push(...MiscUtil.copy(fromList.entries))}if(fromList.images){fluff.images=MiscUtil.copy(fluff.images||[]);fluff.images.push(...MiscUtil.copy(fromList.images))}}}return fluff},async pGetFluff({entity:entity,pFnPostProcess:pFnPostProcess,fluffUrl:fluffUrl,fluffBaseUrl:fluffBaseUrl,fluffProp:fluffProp}={}){let predefinedFluff=Renderer.utils.getPredefinedFluff(entity,fluffProp);if(predefinedFluff){if(pFnPostProcess)predefinedFluff=await pFnPostProcess(predefinedFluff);return predefinedFluff}if(!fluffBaseUrl&&!fluffUrl)return null;const fluffIndex=fluffBaseUrl?await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffBaseUrl}fluff-index.json`):null;if(fluffIndex&&!fluffIndex[entity.source])return null;const data=fluffIndex&&fluffIndex[entity.source]?await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffBaseUrl}${fluffIndex[entity.source]}`):await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffUrl}`);if(!data)return null;let fluff=(data[fluffProp]||[]).find((it=>it.name===entity.name&&it.source===entity.source));if(!fluff)return null;if(pFnPostProcess)fluff=await pFnPostProcess(fluff);return fluff},async pGetQuickRules(prop){const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/quickrules.json`);const renderer=Renderer.get().setFirstSection(true);const toRender=data.quickRules[prop];const textStack=[""];renderer.recursiveRender(toRender.entries,textStack,{prefix:"<p class='pf2-p'>",suffix:"</p>"});return $$`${textStack.join("")}${Renderer.utils.getPageP(toRender)}`},HTML_NO_INFO:"<i>No information available.</i>",HTML_NO_IMAGES:"<i>No images available.</i>",_prereqWeights:{level:0,pact:1,patron:2,spell:3,race:4,ability:5,proficiency:6,spellcasting:7,feature:8,item:9,other:10,otherSummary:11,[undefined]:12},_getPrerequisiteHtml_getShortClassName(className){const ixFirstVowel=/[aeiou]/.exec(className).index;const start=className.slice(0,ixFirstVowel+1);let end=className.slice(ixFirstVowel+1);end=end.replace().replace(/[aeiou]/g,"");return`${start}${end}`.toTitleCase()},getPrerequisiteHtml:(prerequisites,{isListMode:isListMode=false,blacklistKeys:blacklistKeys=new Set,isTextOnly:isTextOnly=false,isSkipPrefix:isSkipPrefix=false}={})=>{if(!prerequisites){return isListMode?"—":""}let cntPrerequisites=0;const renderer=Renderer.get();const listOfChoices=prerequisites.map((pr=>Object.entries(pr).sort((([kA],[kB])=>Renderer.utils._prereqWeights[kA]-Renderer.utils._prereqWeights[kB])).map((([k,v])=>{if(blacklistKeys.has(k)){return false}cntPrerequisites+=1;switch(k){case"level":{if(typeof v==="number"){if(isListMode){return`Lvl ${v}`}else{return`${Parser.getOrdinalForm(v)} level`}}else if(!v.class&&!v.subclass){if(isListMode){return`Lvl ${v.level}`}else{return`${Parser.getOrdinalForm(v.level)} level`}}const isSubclassVisible=v.subclass&&v.subclass.visible;const isClassVisible=v.class&&(v.class.visible||isSubclassVisible);if(isListMode){const shortNameRaw=isClassVisible?Renderer.utils._getPrerequisiteHtml_getShortClassName(v.class.name):null;return`${isClassVisible?`${shortNameRaw.slice(0,4)}${isSubclassVisible?"*":"."} `:""} Lvl ${v.level}`}else{let classPart="";if(isClassVisible&&isSubclassVisible){classPart=` ${v.class.name} (${v.subclass.name})`}else if(isClassVisible){classPart=` ${v.class.name}`}else if(isSubclassVisible){classPart=` &lt;remember to insert class name here&gt; (${v.subclass.name})`}return`${Parser.getOrdinalForm(v.level)} level${isClassVisible?` ${classPart}`:""}`}}case"spell":return isListMode?v.map((x=>x.split("#")[0].split("|")[0].toTitleCase())).join("/"):v.map((sp=>Parser.prereqSpellToFull(sp,{isTextOnly:isTextOnly}))).joinConjunct(", "," or ");case"feat":return isListMode?v.map((x=>x.split("|")[0].toTitleCase())).join("/"):v.map((it=>`{@feat ${it}}`)).joinConjunct(", "," or ");case"spellcasting":return isListMode?"spellcasting":"spell repertoire or ability to prepare spells";case"feature":return isListMode?v.map((x=>Renderer.stripTags(x).toTitleCase())).join("/"):v.map((it=>isTextOnly?Renderer.stripTags(it):it)).joinConjunct(", "," or ");case"item":return isListMode?v.map((x=>x.toTitleCase())).join("/"):v.joinConjunct(", "," or ");case"otherSummary":return isListMode?v.entrySummary||Renderer.stripTags(v.entry):isTextOnly?Renderer.stripTags(v.entry):v.entry;case"other":return isListMode?"Special":isTextOnly?Renderer.stripTags(v):v;case"ability":{let hadMultipleInner=false;let hadMultiMultipleInner=false;let allValuesEqual=null;outer:for(const abMeta of v){for(const req of Object.values(abMeta)){if(allValuesEqual==null){allValuesEqual=req}else{if(req!==allValuesEqual){allValuesEqual=null;break outer}}}}const abilityOptions=v.map((abMeta=>{if(allValuesEqual){const abList=Object.keys(abMeta);hadMultipleInner=hadMultipleInner||abList.length>1;return isListMode?abList.map((ab=>ab.uppercaseFirst())).join(", "):abList.map((ab=>Parser.attAbvToFull(ab))).joinConjunct(", "," and ")}else{const groups={};Object.entries(abMeta).forEach((([ab,req])=>{(groups[req]=groups[req]||[]).push(ab)}));let isMulti=false;const byScore=Object.entries(groups).sort((([reqA],[reqB])=>SortUtil.ascSort(Number(reqB),Number(reqA)))).map((([req,abs])=>{hadMultipleInner=hadMultipleInner||abs.length>1;if(abs.length>1){hadMultiMultipleInner=isMulti=true}abs=abs.sort(SortUtil.ascSortAtts);return`${abs.map((ab=>Parser.attAbvToFull(ab))).joinConjunct(", "," and ")} ${req}`}));return isListMode?`${isMulti||byScore.length>1?"(":""}${byScore.join(" & ")}${isMulti||byScore.length>1?")":""}`:isMulti?byScore.joinConjunct("; "," and "):byScore.joinConjunct(", "," and ")}}));if(isListMode){return`${abilityOptions.join("/")}${allValuesEqual!=null?` ${allValuesEqual}+`:""}`}else{const isComplex=hadMultiMultipleInner||hadMultipleInner||allValuesEqual==null;const joined=abilityOptions.joinConjunct(hadMultiMultipleInner?" - ":hadMultipleInner?"; ":", ",isComplex?isTextOnly?` /or/ `:` <i>or</i> `:" or ");return`${joined}${allValuesEqual!=null?` ${allValuesEqual}`:""}`}}case"armor":{return}case"weapon":{return}case"skill":{renderStack=[...new Set];v.forEach((element=>{array=new Set;Object.keys(element).forEach((key=>{array.add(`${element[key]} in ${Parser.getKeyByValue(element,element[key]).map((s=>`{@skill ${s.includes("lore")?`Lore||${s.toTitleCase()}`:s.toTitleCase()}}`)).joinConjunct(", "," and ")}`)}));renderStack.push(renderer.renderJoinCommaOrSemi(Array.from(array)))}));return renderer.renderJoinCommaOrSemi(renderStack,{andOr:true})}default:throw new Error(`Unhandled key: ${k}`)}})).filter(Boolean).join(", "))).filter(Boolean);if(!listOfChoices.length){return isListMode?"—":""}return`${renderer.render(isListMode?listOfChoices.join("/"):`${isSkipPrefix?"":`<strong>Prerequisite${cntPrerequisites===1?"":"s"}</strong> `}${listOfChoices.joinConjunct("; "," or ")}`)}`},getMediaUrl(entry,prop,mediaDir){if(!entry[prop])return"";let href="";if(entry[prop].type==="internal"){const baseUrl=Renderer.get().baseMediaUrls[mediaDir]||Renderer.get().baseUrl;const mediaPart=`${mediaDir}/${entry[prop].path}`;href=baseUrl!==""?`${baseUrl}${mediaPart}`:UrlUtil.link(mediaPart)}else if(entry[prop].type==="external"){href=entry[prop].url}return href},lazy:{_getIntersectionConfig(){return{rootMargin:"150px 0px",threshold:.01}},_OBSERVERS:{},getCreateObserver({observerId:observerId,fnOnObserve:fnOnObserve}){if(!Renderer.utils.lazy._OBSERVERS[observerId]){const observer=Renderer.utils.lazy._OBSERVERS[observerId]=new IntersectionObserver(Renderer.utils.lazy.getFnOnIntersect({observerId:observerId,fnOnObserve:fnOnObserve}),Renderer.utils.lazy._getIntersectionConfig());observer._TRACKED=new Set;observer.track=it=>{observer._TRACKED.add(it);return observer.observe(it)};observer.untrack=it=>{observer._TRACKED.delete(it);return observer.unobserve(it)};observer._printListener=evt=>{if(!observer._TRACKED.size)return;[...observer._TRACKED].forEach((it=>{observer.untrack(it);fnOnObserve({observer:observer,entry:{target:it}})}));alert(`All content must be loaded prior to printing. Please cancel the print and wait a few moments for loading to complete!`)};window.addEventListener("beforeprint",observer._printListener)}return Renderer.utils.lazy._OBSERVERS[observerId]},destroyObserver({observerId:observerId}){const observer=Renderer.utils.lazy._OBSERVERS[observerId];if(!observer)return;observer.disconnect();window.removeEventListener("beforeprint",observer._printListener)},getFnOnIntersect({observerId:observerId,fnOnObserve:fnOnObserve}){return obsEntries=>{const observer=Renderer.utils.lazy._OBSERVERS[observerId];obsEntries.forEach((entry=>{if(entry.intersectionRatio<=0)return;observer.untrack(entry.target);fnOnObserve({observer:observer,entry:entry})}))}}}};Renderer.get=()=>{if(!Renderer.defaultRenderer)Renderer.defaultRenderer=new Renderer;return Renderer.defaultRenderer};Renderer.ability={getRenderedString(it,opts){opts=opts||{};return`${Renderer.utils.getExcludedDiv(it,"ability",UrlUtil.PG_ABILITIES)}\n\t\t${Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_ABILITIES,activity:true,type:"",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(it.traits||[])}\n\t\t${Renderer.ability.getSubHead(it)}\n\t\t${Renderer.generic.getRenderedEntries(it)}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(it)}`},getSubHead(it){const renderStack=[];const renderer=Renderer.get();if(it.aspect!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Aspect&nbsp;</strong>${renderer.render(it.aspect)}</p>`)}if(it.cost!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Cost&nbsp;</strong>${renderer.render(it.cost)}</p>`)}if(it.prerequisites!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Prerequisites&nbsp;</strong>${renderer.render(it.prerequisites)}</p>`)}if(it.frequency!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Frequency&nbsp;</strong>${renderer.render(Parser.freqToFullEntry(it.frequency))}</p>`)}if(it.trigger!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Trigger&nbsp;</strong>${renderer.render(it.trigger)}</p>`)}if(it.requirements!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Requirements&nbsp;</strong>${renderer.render(it.requirements)}</p>`)}if(renderStack.length!==0)renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")}};Renderer.action={getRenderedString(it,opts){opts=opts||{};return`${Renderer.utils.getExcludedDiv(it,"action",UrlUtil.PG_ACTIONS)}\n\t\t${Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_ACTIONS,activity:true,type:"",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(it.traits||[])}\n\t\t${Renderer.action.getSubHead(it)}\n\t\t${Renderer.generic.getRenderedEntries(it)}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(it)}`},getSubHead(it){const renderStack=[];const renderer=Renderer.get();if(it.actionType){if(it.actionType.skill){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Skill&nbsp;</strong>`);if(it.actionType.skill.untrained)renderStack.push(`${renderer.render(`${it.actionType.skill.untrained.map((a=>`{@skill ${a.toTitleCase()}}`)).join(", ")} (untrained)`)}`);if(it.actionType.skill.trained)renderStack.push(`${renderer.render(`${it.actionType.skill.trained.map((a=>`{@skill ${a.toTitleCase()}}`)).join(", ")} (trained)`)}`);if(it.actionType.skill.expert)renderStack.push(`${renderer.render(`${it.actionType.skill.expert.map((a=>`{@skill ${a.toTitleCase()}}`)).join(", ")} (expert)`)}`);if(it.actionType.skill.legendary)renderStack.push(`${renderer.render(`${it.actionType.skill.legendary.map((a=>`{@skill ${a.toTitleCase()}}`)).join(", ")} (legendary)`)}`);renderStack.push(`</p>`)}if(it.actionType.class){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Class&nbsp;</strong>${renderer.render(`${it.actionType.class.map((c=>`{@class ${c.toTitleCase()}}`)).join(", ")}`)}`);if(it.actionType.subclass){const subClasses=[];for(let i=0;i<it.actionType.subclass.length;i++){if(it.actionType.subclass[i]){const[c,cSrc]=it.actionType.class[i].split("|");const[sc,scSrc]=it.actionType.subclass[i].split("|");subClasses.push(renderer.render(`{@class ${c}|${cSrc||""}|${sc}|${sc}|${scSrc||""}}`))}}renderStack.push(`; <strong>Subclass&nbsp;</strong>${subClasses.join(", ")}`)}renderStack.push(`</p>`)}if(it.actionType.archetype){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Archetype&nbsp;</strong>${renderer.render(`${it.actionType.archetype.map((a=>`{@archetype ${a}}`)).join(", ")}`)}</p>`)}if(it.actionType.ancestry||it.actionType.heritage||it.actionType.versatileHeritage){if(it.actionType.ancestry){it.actionType.ancestry.forEach((a=>{ancestryName=a?a.split(`|`)[0]:null;ancestrySource=a?a.split(`|`)[1]||"":"";renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Ancestry&nbsp;</strong>${renderer.render(`{@ancestry ${ancestryName}|${ancestrySource}}`)}`);if(it.actionType.heritage||it.actionType.versatileHeritage)renderStack.push(`; `)}))}if(it.actionType.heritage){it.actionType.heritage.forEach((h=>{heritageName=h?h.split(`|`)[0]:null;heritageSource=h?h.split(`|`)[1]||"":"";renderStack.push(`<strong>Heritage&nbsp;</strong>${renderer.render(`{@ancestry ${ancestryName}|${ancestrySource}|${heritageName}|${heritageName}|${heritageSource}|}`)}`);if(it.actionType.versatileHeritage)renderStack.push(`; `)}))}if(it.actionType.versatileHeritage){it.actionType.versatileHeritage.forEach((v=>{versatileHeritageName=v?v.split(`|`)[0]:null;versatileHeritageSource=v?v.split(`|`)[1]||"":"";if(!it.actionType.ancestry)renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<strong>Versatile Heritage&nbsp;</strong>${renderer.render(`{@ancestry ${it.actionType.ancestry?`${ancestryName}|${ancestrySource}`:"Human|CRB"}|${versatileHeritageName}|${versatileHeritageName}|${versatileHeritageSource}|}`)}`)}))}renderStack.push(`</p>`)}if(it.actionType.variantrule){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Variant Rule&nbsp;</strong>${renderer.render(`{@variantrule ${it.actionType.variantrule}}`)}`);renderStack.push(`</p>`)}}if(it.cost!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Cost&nbsp;</strong>${renderer.render(it.cost)}</p>`)}if(it.prerequisites!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Prerequisites&nbsp;</strong>${renderer.render(it.prerequisites)}</p>`)}if(it.frequency!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Frequency&nbsp;</strong>${renderer.render(Parser.freqToFullEntry(it.frequency))}</p>`)}if(it.trigger!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Trigger&nbsp;</strong>${renderer.render(it.trigger)}</p>`)}if(it.requirements!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Requirements&nbsp;</strong>${renderer.render(it.requirements)}</p>`)}if(renderStack.length!==0)renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getQuickRules(it){let renderStack=[""];Renderer.get().setFirstSection(true).recursiveRender({type:"pf2-h3",name:it.name,entries:it.info},renderStack);return`\n\t\t${Renderer.utils.getExcludedDiv(it,"action",UrlUtil.PG_ACTIONS)}\n\t\t${renderStack.join("")}\n\t\t${Renderer.utils.getPageP(it)}`}};Renderer.adventureBook={getEntryIdLookup(bookData,doThrowError=true){const out={};const titlesRel={};let chapIx;const handlers={object:obj=>{Renderer.ENTRIES_WITH_ENUMERATED_TITLES.forEach((meta=>{if(obj.type!==meta.type)return;if(obj.id){if(out[obj.id]){(out.__BAD=out.__BAD||[]).push(obj.id)}else{out[obj.id]={chapter:chapIx,entry:obj};if(obj.name){const cleanName=obj.name.toLowerCase();titlesRel[cleanName]=titlesRel[cleanName]||0;out[obj.id].ixTitleRel=titlesRel[cleanName]++;out[obj.id].nameClean=cleanName}}}}));return obj}};bookData.forEach(((chap,_chapIx)=>{chapIx=_chapIx;MiscUtil.getWalker().walk(chap,handlers)}));if(doThrowError)if(out.__BAD)throw new Error(`IDs were already in storage: ${out.__BAD.map((it=>`"${it}"`)).join(", ")}`);return out}};Renderer.affliction={getRenderedString(affliction,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderer.setFirstSection(true);renderStack.push(`${Renderer.utils.getExcludedDiv(affliction,affliction.__prop||affliction._type,UrlUtil.PG_AFFLICTIONS)}`);renderStack.push(`\n\t\t\t${Renderer.utils.getNameDiv(affliction,{page:UrlUtil.PG_AFFLICTIONS,level:affliction.level!==null?affliction.level:"",...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(affliction.traits||[])}\n\t\t`);if(affliction.usage)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Usage </strong>${renderer.render(affliction.usage)}</p>${Renderer.utils.getDividerDiv()}`);renderer.recursiveRender(affliction.entries,renderStack,{pf2StatFix:true});if(affliction.temptedCurse){renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Tempted Curse</strong> ${renderer.render(affliction.temptedCurse)}</p>`)}if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(affliction));return renderStack.join("")}};Renderer.ancestry={getRenderedString(it,opts){if(it.__prop==="ancestry")return Renderer.ancestry.getRenderedAncestry(it,opts);if(it.__prop==="heritage")return Renderer.ancestry.getRenderedHeritage(it,opts);if(it.__prop==="versatileHeritage")return Renderer.ancestry.getRenderedVersatileHeritage(it,opts)},getRenderedAncestry(anc,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(true);const renderStack=[];renderStack.push(`${Renderer.utils.getNameDiv(anc,{page:UrlUtil.PG_ANCESTRIES,type:"Ancestry",...opts})}`);renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(`<div class="pf2-sidebar--compact">`);if(anc.rarity)renderStack.push(renderer.render(`<div><p class="pf2-title">Rarity</p><p class="pf2-sidebar__text">{@trait ${anc.rarity.toTitleCase()}}</p></div>`));renderStack.push(`<div><p class="pf2-title">Hit Points</p><p class="pf2-sidebar__text">${anc.hp}</p></div>`);renderStack.push(`<div><p class="pf2-title">Size</p><p class="pf2-sidebar__text">${anc.size.joinConjunct(", "," or ").toTitleCase()}</p></div>`);renderStack.push(`<div><p class="pf2-title">Speed</p><p class="pf2-sidebar__text">${Parser.speedToFullMap(anc.speed).join(", ")}</p></div>`);if(anc.boosts)renderStack.push(`<div><p class="pf2-title">Ability Boosts</p><p class="pf2-sidebar__text">${anc.boosts.join(", ").toTitleCase()}</p></div>`);if(anc.flaw)renderStack.push(`<div><p class="pf2-title">Ability Flaw</p><p class="pf2-sidebar__text">${anc.flaw.join(", ").toTitleCase()}</p></div>`);if(anc.languages)renderStack.push(`<div><p class="pf2-title">Languages</p><p class="pf2-sidebar__text">${renderer.render(anc.languages.join(", ").replace(/, Additional languages [\s\S]+region\)\./g,""))}</p></div>`);if(anc.traits)renderStack.push(`<div><p class="pf2-title">Traits</p><p class="pf2-sidebar__text">${renderer.render(anc.traits.join(", ").toTitleCase())}</p></div>`);renderStack.push(`\n\t\t\t${anc.feature?`<div><p class="pf2-title">${anc.feature.name}</p><p class="pf2-sidebar__text">${renderer.render(anc.feature.entries)}</p></div>`:""}\n\t\t\t${anc.features?anc.features.map((f=>`<div><p class="pf2-title">${f.name}</p><p class="pf2-sidebar__text">${renderer.render(f.entries)}</p></div>`)).join(""):""}\n\t\t`);renderStack.push(`</div>`);if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(anc));return renderStack.join("")},getRenderedHeritage(her,opts){const renderer=Renderer.get().setFirstSection(true);const renderStack=[];renderer.recursiveRender({type:"pf2-h3",name:her.name,entries:her.entries},renderStack);return`${renderStack.join("")}`},getRenderedVersatileHeritage(vHer,opts){const renderer=Renderer.get().setFirstSection(true);const renderStack=[];renderer.recursiveRender({type:"pf2-h2",name:vHer.name,entries:vHer.entries},renderStack);return`${renderStack.join("")}`},pGetFluff(ancestry){return Renderer.utils.pGetFluff({entity:ancestry,fluffProp:"ancestryFluff",fluffUrl:`data/fluff-ancestries.json`})}};Renderer.archetype={getRenderedString(arc){const renderer=Renderer.get().setFirstSection(true);const renderStack=[];Renderer.get().setFirstSection(true).recursiveRender(arc.entries,renderStack,{pf2StatFix:true});return`${Renderer.utils.getNameDiv(arc,{page:UrlUtil.PG_ARCHETYPES,type:"ARCHETYPE"})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(arc.rarity?[arc.rarity]:[])}\n\t\t${renderer.render({type:"pf2-h4",entries:arc.entries})}\n\t\t${Renderer.utils.getPageP(arc)}\n\t\t`}};Renderer.background={getRenderedString(bg,opts){opts=opts||{};const renderStack=[];Renderer.get().setFirstSection(true).recursiveRender(bg.entries,renderStack,{pf2StatFix:true});return`\n\t\t${Renderer.utils.getExcludedDiv(bg,"background",UrlUtil.PG_BACKGROUNDS)}\n\t\t${Renderer.utils.getNameDiv(bg,{page:UrlUtil.PG_BACKGROUNDS,type:"BACKGROUND",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(bg.traits||[])}\n\t\t${renderStack.join("")}\n\t\t${Renderer.utils.getPageP(bg)}\n\t\t`},pGetFluff(bg){return Renderer.utils.pGetFluff({entity:bg,fluffUrl:"data/fluff-backgrounds.json",fluffProp:"backgroundFluff"})}};Renderer.companionfamiliar={getRenderedString(it,opts){if(it.__prop==="familiarAbility")return Renderer.familiar.getRenderedFamiliarAbility(it,opts);if(it.__prop==="companionAbility")return Renderer.companion.getRenderedCompanionAbility(it,opts);if(it.__prop==="companion")return Renderer.companion.getRenderedString(it,opts);if(it.__prop==="familiar")return Renderer.familiar.$getRenderedString(it,opts);if(it.__prop==="eidolon")return Renderer.eidolon.getRenderedString(it,opts)},getRenderedSenses(it){const renderer=Renderer.get();if(!it.senses)return"";return`<p class="pf2-stat pf2-stat__section"><strong>Senses&nbsp;</strong>${Object.entries(it.senses).map((([k,v])=>v.map((s=>`${renderer.render(s)}${k==="other"?"":` (${k})`}`)))).flat().join(", ")}</p>`}};Renderer.companion={getRenderedString(companion,opts){opts=opts||{};const renderer=Renderer.get();return`${Renderer.utils.getExcludedDiv(companion,"companion",UrlUtil.PG_COMPANIONS_FAMILIARS)}\n\t\t${Renderer.utils.getNameDiv(companion,{type:"Companion",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(companion.traits)}\n\t\t${companion.access?`<p class="pf2-stat pf2-stat__section"><strong>Access&nbsp;</strong>${renderer.render(companion.access)}</p>`:""}\n\t\t${companion.traits&&companion.traits.length||companion.access?Renderer.utils.getDividerDiv():""}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Size&nbsp;</strong>${companion.size}</p>\n\t\t${Renderer.creature.getAttacks(companion)}\n\t\t${Renderer.creature.getAbilityMods(companion.abilityMods)}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Hit Points&nbsp;</strong>${companion.hp}</p>\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Skill&nbsp;</strong>${renderer.render(`{@skill ${companion.skill}}`)}</p>\n\t\t${Renderer.companionfamiliar.getRenderedSenses(companion)}\n\t\t${Renderer.creature.getSpeed(companion)}\n\t\t${companion.special?`<p class="pf2-stat pf2-stat__section"><strong>Special&nbsp;</strong>${renderer.render(companion.special)}</p>`:""}\n\t\t${companion.support?`<p class="pf2-stat pf2-stat__section"><strong>Support Benefit&nbsp;</strong>${renderer.render(companion.support)}</p>`:""}\n\t\t${companion.maneuver?`<p class="pf2-stat pf2-stat__section mb-4"><strong>Advanced Maneuver&nbsp;</strong>${companion.maneuver.name}</p>`:""}\n\t\t${companion.maneuver?Renderer.action.getRenderedString(companion.maneuver,{noPage:true}):""}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(companion)}`},getRenderedCompanionAbility(it,opts){return`${Renderer.utils.getNameDiv(it)}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(it.traits)}\n\t\t\t${Renderer.generic.getRenderedEntries(it)}\n\t\t\t${Renderer.utils.getPageP(it)}`}};Renderer.familiar={$getRenderedString(familiar,opts){opts=opts||{};const renderer=Renderer.get();return $$`${Renderer.utils.getExcludedDiv(familiar,"familiar",UrlUtil.PG_COMPANIONS_FAMILIARS)}
		${Renderer.utils.getNameDiv(familiar,{type:"Familiar",...opts})}
		${Renderer.utils.getDividerDiv()}
		${Renderer.utils.getTraitsDiv(familiar.traits)}
		${familiar.access?`<p class="pf2-stat pf2-stat__section"><strong>Access&nbsp;</strong>${renderer.render(familiar.access)}</p>`:""}
		${familiar.alignment?`<p class="pf2-stat pf2-stat__section"><strong>Alignment&nbsp;</strong>${familiar.alignment}</p>`:""}
		${familiar.requires?`<p class="pf2-stat pf2-stat__section"><strong>Required Number of Abilities&nbsp;</strong>${familiar.requires}</p>`:""}
		${familiar.granted&&!(familiar.granted.length===0)?`<p class="pf2-stat pf2-stat__section"><strong>Granted Abilities&nbsp;</strong>${renderer.render(familiar.granted.join(", "))}</p>`:""}
		${Renderer.utils.getDividerDiv()}
		${familiar.abilities.map((a=>Renderer.creature.getRenderedAbility(a)))}
		${opts.noPage?"":Renderer.utils.getPageP(familiar)}`},getRenderedFamiliarAbility(it,opts){return`${Renderer.utils.getNameDiv(it,{type:`${it.type} Ability`})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(it.traits)}\n\t\t\t${Renderer.generic.getRenderedEntries(it)}\n\t\t\t${Renderer.utils.getPageP(it)}`}};Renderer.eidolon={getRenderedString(eidolon,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(false);return`${Renderer.utils.getExcludedDiv(eidolon,"eidolon",UrlUtil.PG_COMPANIONS_FAMILIARS)}\n\t\t${Renderer.utils.getNameDiv(eidolon,{type:"Eidolon",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(eidolon.traits)}\n\t\t${eidolon.tradition?`<p class="pf2-stat pf2-stat__section"><strong>Tradition&nbsp;</strong>${renderer.render(eidolon.tradition)} ${renderer.render(eidolon.traditionNote)}</p>`:""}\n\t\t${eidolon.alignment?`<p class="pf2-stat pf2-stat__section"><strong>Alignment&nbsp;</strong>${renderer.render(eidolon.alignment)}</p>`:""}\n\t\t${eidolon.home?`<p class="pf2-stat pf2-stat__section"><strong>Home Plane&nbsp;</strong>${renderer.render(eidolon.home)}</p>`:""}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Size&nbsp;</strong>${renderer.render(eidolon.size.map((t=>`{@trait ${t}}`)).joinConjunct(", "," or "))}</p>\n\t\t${eidolon.extraStats?eidolon.extraStats.map((es=>`<p class="pf2-stat pf2-stat__section"><strong>${es.name}&nbsp;</strong>${renderer.render(es.entries)}</p>`)):""}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Suggested Attacks&nbsp;</strong>${renderer.render(eidolon.suggestedAttacks)}</p>\n\t\t${eidolon.stats.map((s=>`<p class="pf2-stat pf2-stat__section"><strong>${s.name||""}&nbsp;</strong>${Object.entries(s.abilityScores).map((([k,v])=>`<i>${k.toTitleCase()}</i> ${v}`)).join(", ")}; ${Parser.numToBonus(s.ac.number)} AC (${Parser.numToBonus(s.ac.dexCap)} Dex Cap)</p>`)).join("")}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Skills&nbsp;</strong>${renderer.render(eidolon.skills.map((s=>`{@skill ${s.toTitleCase()}}`)).join(", "))}</p>\n\t\t${Renderer.companionfamiliar.getRenderedSenses(eidolon)}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Language&nbsp;</strong>${renderer.render(eidolon.languages.map((l=>`{@language ${l}}`)).join(", "))}</p>\n\t\t${Renderer.creature.getSpeed(eidolon)}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Eidolon Abilities&nbsp;</strong>${eidolon.abilities.map((a=>`<i>${a.type.toTitleCase()}</i> ${a.name}`)).join("; ")}</p>\n\t\t${eidolon.abilities.map((a=>`${renderer.render({type:"pf2-h4",name:a.name,level:a.level,entries:a.entries})}`)).join("")}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(eidolon)}`}};Renderer.class={getRenderedString(cls,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(true);const fakeEntry={type:"pf2-h1",name:cls.name,entries:cls.entries.map((e=>({type:"pf2-h3",...e})))};return renderer.render(fakeEntry,opts)},getCompactRenderedClassFeature(clsFeature,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(true);const fakeEntry={type:"pf2-h3",name:clsFeature.name,entries:clsFeature.entries};return renderer.render(fakeEntry,opts)}};Renderer.condition={getRenderedString(cond,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderer.setFirstSection(true);renderStack.push(`${Renderer.utils.getExcludedDiv(cond,cond.__prop||cond._type,UrlUtil.PG_CONDITIONS)}`);renderStack.push(`\n\t\t\t${Renderer.utils.getNameDiv(cond,{page:UrlUtil.PG_CONDITIONS,type:"condition",...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t`);renderer.recursiveRender(cond.entries,renderStack,{pf2StatFix:true});if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(cond));return renderStack.join("")}};Renderer.creature={getRenderedString(cr,opts){cr=scaleCreature.applyVarRules(cr);opts=opts||{};if(opts.showScaler){opts.$btnResetScaleLvl=opts.$btnResetScaleLvl||Renderer.creature.$getBtnResetScaleLvl(cr);opts.$btnScaleLvl=opts.$btnScaleLvl||Renderer.creature.$getBtnScaleLvl(cr);opts.asJquery=true}return $$`<div class="pf2-stat">${Renderer.utils.getExcludedDiv(cr,"creature",UrlUtil.PG_BESTIARY)}
			${Renderer.utils.getNameDiv(cr,{page:UrlUtil.PG_BESTIARY,type:cr.type||"CREATURE",...opts})}
			${Renderer.utils.getDividerDiv()}
			${Renderer.utils.getTraitsDiv(cr.traits)}
			${Renderer.creature.getDescription(cr.description)}
			${Renderer.creature.getPerception(cr)}
			${Renderer.creature.getLanguages(cr.languages)}
			${Renderer.creature.getSkills(cr)}
			${Renderer.creature.getAbilityMods(cr.abilityMods)}
			${Renderer.creature.getItems(cr)}
			${cr.abilities&&cr.abilities.top?cr.abilities.top.map((it=>Renderer.creature.getRenderedAbility(it,{noButton:true}))):""}
			${Renderer.utils.getDividerDiv()}
			${Renderer.creature.getDefenses(cr)}
			${cr.abilities&&cr.abilities.mid?cr.abilities.mid.map((it=>Renderer.creature.getRenderedAbility(it,{noButton:true}))):""}
			${Renderer.utils.getDividerDiv()}
			${Renderer.creature.getSpeed(cr)}
			${Renderer.creature.getAttacks(cr)}
			${Renderer.creature.getSpellCasting(cr)}
			${Renderer.creature.getRituals(cr)}
			${cr.abilities&&cr.abilities.bot?cr.abilities.bot.map((it=>Renderer.creature.getRenderedAbility(it,{noButton:true}))):""}
			${opts.noPage?"":Renderer.utils.getPageP(cr)}</div>`},getDescription(description){const renderer=Renderer.get();if(description){return`<p class="pf2-stat pf2-stat__section">${renderer.render(description)}</p>`}else return""},getPerception(cr){const renderer=Renderer.get();const perception=cr.perception;const senses=cr.senses||[];const rdPerception=renderer.render(`{@d20 ${perception.std}||Perception}`);const rdOtherPerception=Renderer.utils.getNotes(perception,{exclude:["std"],dice:{name:"Perception"}});const rdSenses=renderer.renderJoinCommaOrSemi(senses.map((s=>`${s.name}${s.type?` (${s.type})`:""}${s.range!=null?` ${s.range} feet`:""}`)));return`<p class="pf2-stat pf2-stat__section"><strong>Perception&nbsp;</strong>${rdPerception}${rdOtherPerception}${rdSenses.length?"; ":""}${rdSenses}</p>`},getLanguages(crLanguages){if(crLanguages==null)return"";const renderer=Renderer.get();const languages=crLanguages.languages||[];const notes=crLanguages.notes||[];const abilities=crLanguages.abilities||[];if(languages.length!==0||notes.length!==0||abilities.length!==0){const renderedNotes=notes.map((n=>renderer.render(n)));const langs=languages.map((t=>t.toTitleCase())).concat(renderedNotes);let renderStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<span><strong>Languages&nbsp;</strong></span>`);renderStack.push(`<span>`);renderStack.push(langs.length!==0?langs.join(", "):"— ");if(abilities.length!==0){if(langs!==0)renderStack.push("; ");renderStack.push(renderer.render(abilities.join(", ")))}renderStack.push(`</span>`);renderStack.push(`</p>`);return renderStack.join("")}else return""},getSkills(cr){if(cr.skills!=null&&Object.keys(cr.skills).length!==0){let renderStack=[];const renderer=Renderer.get();renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<strong>Skills&nbsp;</strong>`);let skills=[];Object.keys(cr.skills).filter((k=>k!=="notes")).forEach((skill=>{let renderedSkill="";if(skill==="lore"){renderedSkill=`${skill.toTitleCase()} (${renderer.render(cr.skills[skill].note)}) ${renderer.render(`{@d20 ${cr.skills[skill].std}||${skill.toTitleCase()}}`)}${Renderer.utils.getNotes(cr.skills[skill],{exclude:["std","note"],dice:{name:skill}})}`}else{renderedSkill=`${skill.toTitleCase()} ${renderer.render(`{@d20 ${cr.skills[skill].std}||${skill.toTitleCase()}}`)}${Renderer.utils.getNotes(cr.skills[skill],{exclude:["std"],raw:["note"],dice:{name:skill}})}`}skills.push(renderedSkill)}));let notes=cr.skills["notes"]||[];renderStack.push(skills.sort().join("<span>, </span>"));renderStack.push(notes.length!==0?`<span>, </span>${notes.join("<span>, </span>")}`:"");renderStack.push(`</p>`);return renderStack.join("")}else return""},getAbilityMods(mods){const renderer=Renderer.get();return`<p class="pf2-stat pf2-stat__section">\n\t\t\t<strong>Str&nbsp;</strong>${renderer.render(`{@d20 ${mods.str}||Strength}`)}\n\t\t\t<strong>Dex&nbsp;</strong>${renderer.render(`{@d20 ${mods.dex}||Dexterity}`)}\n\t\t\t<strong>Con&nbsp;</strong>${renderer.render(`{@d20 ${mods.con}||Constitution}`)}\n\t\t\t<strong>Int&nbsp;</strong>${renderer.render(`{@d20 ${mods.int}||Intelligence}`)}\n\t\t\t<strong>Wis&nbsp;</strong>${renderer.render(`{@d20 ${mods.wis}||Wisdom}`)}\n\t\t\t<strong>Cha&nbsp;</strong>${renderer.render(`{@d20 ${mods.cha}||Charisma}`)}\n\t\t</p>`},getItems(cr){if(cr.items!=null){let renderStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<span><strong>Items&nbsp;</strong></span>`);renderStack.push(Renderer.get().render(cr.items.join(", ")));renderStack.push(`</p>`);return renderStack.join("")}else return""},getDefenses(creature){if(!creature.defenses)return"";const acPart=Renderer.creature.getDefenses_getACPart(creature);const savingThrowPart=Renderer.creature.getDefenses_getSavingThrowPart(creature);const hpParts=Renderer.creature.getDefenses_getHPParts(creature);const thresholds=Renderer.creature.getDefenses_getThresholdsParts(creature);const hardnessPart=Renderer.creature.getDefenses_getHardnessPart(creature);const immunitiesPart=Renderer.creature.getDefenses_getImmunitiesPart(creature);const weakPart=Renderer.creature.getDefenses_getResWeakPart(creature.defenses.weaknesses,"Weaknesses");const resistPart=Renderer.creature.getDefenses_getResWeakPart(creature.defenses.resistances,"Resistances");const hpPart=hpParts.join("</p><p class='pf2-stat pf2-stat__section'>");const sect1=[acPart,savingThrowPart].filter(Boolean);const sect2=[hpPart,thresholds,hardnessPart,immunitiesPart,weakPart,resistPart].filter(Boolean);return`<p class="pf2-stat pf2-stat__section">\n\t\t\t\t\t${sect1.join("; ")}\n\t\t\t\t\t${sect1.length&&sect2.length?"</p><p class='pf2-stat pf2-stat__section'>":""}\n\t\t\t\t\t${sect2.join("; ")}\n\t\t\t\t</p>`},getDefenses_getACPart(creature){if(!creature.defenses.ac)return null;const renderer=Renderer.get();const mainPart=`<strong>AC&nbsp;</strong> ${creature.defenses.ac.std}`;const extraACList=Object.keys(creature.defenses.ac).filter((k=>k!=="std"&&k!=="note"&&k!=="abilities")).map((k=>`${creature.defenses.ac[k]} ${k}`)).join(", ");const extraACs=extraACList?` (${extraACList})`:"";const notePart=creature.defenses.ac.note?renderer.render(creature.defenses.ac.note):"";const abilitiesPart=creature.defenses.ac.abilities?`; ${renderer.render(creature.defenses.ac.abilities)}`:"";return`${mainPart}${extraACs}${notePart}${abilitiesPart}`},getDefenses_getSavingThrowPart(creature){if(!creature.defenses.savingThrows)return null;const renderer=Renderer.get();const abilities=[].concat(creature.defenses.savingThrows.abilities||[]);const savingThrowParts=Object.keys(creature.defenses.savingThrows).filter((k=>k!=="abilities")).map((k=>{const saveName=`${Parser.savingThrowAbvToFull(k)} Save`;const std=renderer.render(`<strong>${k.uppercaseFirst()}&nbsp;</strong>{@d20 ${creature.defenses.savingThrows[k].std}||${saveName}}`);const note=Renderer.utils.getNotes(creature.defenses.savingThrows[k],{exclude:["std"],raw:["abilities"],dice:{name:saveName}});return`${std}${note}`})).join(", ");const abilitiesParts=abilities.length?`; ${abilities.map((a=>renderer.render(a))).join(", ")}`:"";return`${savingThrowParts}${abilitiesParts}`},getDefenses_getHPParts(creature){if(!creature.defenses.hp)return null;const renderer=Renderer.get();const hp=creature.defenses.hp||[];const hpEntries=[];hp.forEach((hpObj=>{const hpPart=`<strong>HP&nbsp;</strong>${hpObj.name?`(${hpObj.name}) `:``}${hpObj.hp}`;const notes=hpObj.notes?` (${hpObj.notes.map((a=>renderer.render(a))).join(", ")})`:"";const abilities=hpObj.abilities?["",...hpObj.abilities].map((a=>renderer.render(a))).join(", "):"";hpEntries.push(`${hpPart}${notes}${abilities}`)}));return hpEntries},getDefenses_getThresholdsParts(creature){if(creature.defenses.thresholds&&creature.defenses.thresholds.length){const thresholds=creature.defenses.thresholds.map((t=>`${t.value} (${t.squares} squares)`)).join(", ");return`<strong>Thresholds&nbsp;</strong>${thresholds}`}else{return""}},getDefenses_getHardnessPart(creature){if(creature.defenses.hardness){return`<strong>Hardness&nbsp;</strong>${creature.defenses.hardness}`}else{return""}},getDefenses_getImmunitiesPart(creature){if(!creature.defenses.immunities)return null;const renderer=Renderer.get();return`<strong>Immunities&nbsp;</strong>${creature.defenses.immunities.map((i=>renderer.render(i))).join(", ")}`},getDefenses_getResWeakPart(arr,prop){if(!arr||arr.length===0)return null;const renderer=Renderer.get();const vals=arr.map((it=>`${it.name}${it.amount?` ${it.amount}`:""}${it.note?` (${renderer.render(it.note)})`:""}`));return`<strong>${prop}&nbsp;</strong>${renderer.render(vals.join(", "))}`},getSpeed(cr){const renderer=Renderer.get();const speeds=cr.speed.walk!=null?[`${cr.speed.walk} feet`]:[];speeds.push(...Object.keys(cr.speed).filter((k=>!["abilities","walk","speedNote"].includes(k))).map((k=>`${k} ${cr.speed[k]} feet`)));return`<p class="pf2-stat pf2-stat__section">\n\t\t\t\t<strong>Speed&nbsp;</strong>${speeds.join(", ")}${cr.speed.abilities!=null?`; ${renderer.render(cr.speed.abilities.join(", "))}`:""}${cr.speed.speedNote?` ${cr.speed.speedNote}`:""}</p>`},getAttacks(cr){if(cr.attacks){const renderer=Renderer.get();const renderStack=[""];cr.attacks.forEach((a=>renderer._renderAttack(a,renderStack)));return renderStack.join("")}},getSpellCasting(cr){if(cr.spellcasting!=null){const renderer=Renderer.get();let renderStack=[];for(let sc of cr.spellcasting){const meta=[];let spellcastingName=sc.name?sc.name:`${sc.tradition} ${sc.type}`.toTitleCase();if(sc.DC!=null)meta.push(`DC ${sc.DC}`);if(sc.attack!=null)meta.push(`attack {@hit ${sc.attack}||Spell attack}`);if(sc.fp!=null)meta.push(`${sc.fp} Focus Points`);renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>${spellcastingName}${/Spell/.test(spellcastingName)?"":" Spells"}&nbsp;</strong>`);if(sc.note!=null)renderStack.push(`${renderer.render(sc.note)} `);renderStack.push(renderer.render(meta.join(", ")));Object.keys(sc.entry).sort(SortUtil.sortSpellLvlCreature).forEach((lvl=>{if(lvl!=="constant"){renderStack.push(`<span>; <strong>${lvl==="0"?"Cantrips":Parser.getOrdinalForm(lvl)}&nbsp;</strong>`);if(sc.entry[lvl].level!=null)renderStack.push(`<strong>(${Parser.getOrdinalForm(sc.entry[lvl].level)})&nbsp;</strong>`);if(sc.entry[lvl].slots!=null)renderStack.push(`(${sc.entry[lvl].slots} slots) `);let spells=[];for(let spell of sc.entry[lvl].spells){let amount=spell.amount!=null?typeof spell.amount==="number"?[`×${spell.amount}`]:[spell.amount]:[];let notes=spell.notes||[];let bracket="";if(amount.length||notes.length){bracket=` (${amount.concat(notes).join(", ")})`}spells.push(`{@spell ${spell.name}|${spell.source||SRC_CRB}|${spell.name}}${bracket}`)}renderStack.push(renderer.render(spells.join(", ")))}else{renderStack.push(`<span>; <strong>Constant&nbsp;</strong></span>`);Object.keys(sc.entry["constant"]).sort().reverse().forEach(((clvl,idx)=>{if(idx!==0)renderStack.push("; ");renderStack.push(`<span><strong>(${Parser.getOrdinalForm(clvl)})&nbsp;</strong></span>`);let spells=[];for(let spell of sc.entry["constant"][clvl].spells){let bracket="";if(spell?.notes?.length){bracket=` (${spell.notes.join(", ")})`}spells.push(`{@spell ${spell.name}|${spell.source||SRC_CRB}|${spell.name}}${bracket}`)}renderStack.push(renderer.render(`${spells.join(", ")}`))}))}}));renderStack.push(`</p>`)}return renderStack.join("")}else return""},getRituals(cr){if(cr.rituals==null)return"";const renderer=Renderer.get();const renderRitual=r=>`{@ritual ${r.name}|${r.source||""}}${r.notes==null&&r.level==null?"":` (${[Parser.getOrdinalForm(r.level)].concat(...r.notes||[]).filter(Boolean).join(", ")})`}`;return`${cr.rituals.map((rf=>`<p class="pf2-stat pf2-stat__section"><strong>${rf.tradition?`${rf.tradition.toTitleCase()} `:""}Rituals</strong>${rf.DC?` DC ${rf.DC};`:""} ${renderer.render(rf.rituals.map((r=>renderRitual(r))).join(", "))}`))}`},getRenderedAbility(ability,opts){opts=opts||{};const renderer=Renderer.get();if(ability.type==="affliction")return renderer.render(ability);const buttonClass=Parser.stringToSlug(`ab ${ability.name}`);let renderedGenericAbility;const generic=ability.generic;if(generic!=null&&!opts.isRenderingGeneric){const tag=generic.tag||"ability";const name=generic.name||ability.name;generic.name=name;const source=generic.source||Parser.TAG_TO_DEFAULT_SOURCE[tag];generic.source=source;const catId=Parser._parse_bToA(Parser.CAT_ID_TO_PROP,tag);const page=generic.page||UrlUtil.CAT_TO_PAGE[catId];generic.page=page;const hash=generic.hash||UrlUtil.URL_TO_HASH_BUILDER[page](generic);generic.hash=hash;renderedGenericAbility=`<div class="pf2-stat pf2-stat__section" data-stat-tag="${tag.qq()}" data-stat-name="${name.qq()}" data-stat-hash="${hash.qq()}" data-stat-page-render-fn="genericCreatureAbility" data-stat-page="${page.qq()}" data-stat-source="${source.qq()}">\n\t\t\t\t<i>Loading ${renderer.render(`{@${tag} ${name}|${source}}`)}...</i>\n\t\t\t\t<style onload="Renderer.events.handleLoad_inlineStatblock(this)"></style>\n\t\t\t</div>`}const isRenderButton=(generic||opts.isRenderingGeneric)&&!opts.noButton&&!opts.asHTML;const abilityName=generic?renderer.render(`{@${generic.tag} ${generic.name||ability.name}${generic.add_hash?` (${generic.add_hash})`:""}|${ability.source?ability.source:generic.source?generic.source:""}${`|${ability.title||ability.name}`}}`):ability.name;const $ele=$$`<p class="pf2-stat pf2-stat__section ${buttonClass} ${opts.isRenderingGeneric?"hidden":""}"><strong>${abilityName}</strong>
					${ability.activity?renderer.render(Parser.timeToFullEntry(ability.activity)):""}
					${isRenderButton?Renderer.creature.getAbilityTextButton(buttonClass,opts.isRenderingGeneric):""}
					${ability.traits&&ability.traits.length?`(${ability.traits.map((t=>renderer.render(`{@trait ${t.toLowerCase()}}`))).join(", ")}) `:""}
					${ability.note?renderer.render_addTerm(ability.note):""}
					${ability.frequency?`<strong>Frequency&nbsp;</strong>${renderer.render_addTerm(Parser.freqToFullEntry(ability.frequency))}`:""}
					${ability.prerequisites?`<strong>Prerequisites&nbsp;</strong>${renderer.render_addTerm(ability.prerequisites)}`:""}
					${ability.trigger?`<strong>Trigger&nbsp;</strong>${renderer.render_addTerm(ability.trigger)}`:""}
					${ability.cost?`<strong>Cost&nbsp;</strong>${renderer.render_addTerm(ability.cost)}`:""}
					${ability.requirements?`<strong>Requirements&nbsp;</strong>${renderer.render_addTerm(ability.requirements)}`:""}
					${ability.note||ability.frequency||ability.prerequisites||ability.requirements||ability.trigger||ability.cost?"<strong>Effect</strong>":""}
					${(ability.entries||[]).map((it=>renderer.render(it))).join(" ")}
					</p>
					${""}`;if(!opts.asHTML)return $ele;else return $ele[0].outerHTML},getAbilityTextButton(buttonClass,generic){return $(`<button title="Toggle short/long text" class="btn btn-xs btn-default">\n\t\t\t\t\t<span class="glyphicon ${generic?"glyphicon-eye-close":"glyphicon-eye-open"}"></span></button>`).on("click").click((evt=>{evt.stopPropagation();$(`.${buttonClass}`).toggleClass("hidden")}))},getLvlScaleTarget(win,$btnScaleLvl,lastLvl,origLvl,cbRender,isCompact){const evtName="click.cr-scaler";let slider;const $body=$(win.document.body);function cleanSliders(){$body.find(`.mon__cr_slider_wrp`).remove();$btnScaleLvl.off(evtName);if(slider)slider.destroy()}cleanSliders();const $wrp=$(`<div class="mon__cr_slider_wrp ${isCompact?"mon__cr_slider_wrp--compact":""}"></div>`);const cur=lastLvl;if(!Parser.isValidCreatureLvl(lastLvl))throw new Error(`Initial level ${lastLvl} was not valid!`);if(!Parser.isValidCreatureLvl(origLvl))throw new Error(`Initial level ${origLvl} was not valid!`);const comp=BaseComponent.fromObject({min:-1,max:25,cur:cur});slider=new ComponentUiUtil.RangeSlider({comp:comp,propMin:"min",propMax:"max",propCurMin:"cur"});slider.$get().appendTo($wrp);const $wrpBtns=$(`<div class="flex"></div>`).appendTo($wrp);$(`<button class="ui-slidr__btn cr-adjust--weak">Weak</button>`).off().click((()=>{const state={min:-1,max:25,cur:origLvl-1};slider._comp._proxyAssignSimple("state",state)})).appendTo($wrpBtns);$(`<button class="ui-slidr__btn cr-adjust--elite">Elite</button>`).off().click((()=>{const state={min:-1,max:25,cur:origLvl+1};slider._comp._proxyAssignSimple("state",state)})).appendTo($wrpBtns);$btnScaleLvl.off(evtName).on(evtName,(evt=>evt.stopPropagation()));$wrp.on(evtName,(evt=>evt.stopPropagation()));$body.off(evtName).on(evtName,cleanSliders);comp._addHookBase("cur",(()=>{cbRender(comp._state.cur);$body.off(evtName);cleanSliders()}));$btnScaleLvl.after($wrp)},bindScaleLvlButtons($content,toRender,renderFn,page,source,hash,meta,sourceData){$content.find(".mon__btn-scale-lvl").click((evt=>{evt.stopPropagation();const win=(evt.view||{}).window;const $btn=$(evt.target).closest("button");const initialLvl=toRender._originalLvl!=null?toRender._originalLvl:toRender.level;const lastLvl=toRender.level;Renderer.creature.getLvlScaleTarget(win,$btn,lastLvl,initialLvl,(async targetLvl=>{const original=await Renderer.hover.pCacheAndGet(page,source,hash);if(targetLvl===initialLvl){toRender=original;sourceData.type="stats";delete sourceData.level}else{toRender=await scaleCreature.scale(toRender,targetLvl);sourceData.type="statsCreatureScaled";sourceData.level=targetLvl}$content.empty().append(renderFn(toRender));meta.windowMeta.$windowTitle.text(toRender._displayName||toRender.name);Renderer.creature.bindScaleLvlButtons($content,toRender,renderFn,page,source,hash,meta,sourceData)}),true)}));$content.find(".mon__btn-reset-lvl").click((async()=>{toRender=await Renderer.hover.pCacheAndGet(page,source,hash);$content.empty().append(renderFn(toRender));meta.windowMeta.$windowTitle.text(toRender._displayName||toRender.name);Renderer.creature.bindScaleLvlButtons($content,toRender,renderFn,page,source,hash,meta,sourceData)}))},$getBtnScaleLvl(cr){const $btnScaleLvl=cr.level!=null?$(`\n\t\t\t<button title="Scale Creature By Level (Highly Experimental)" class="mon__btn-scale-lvl btn btn-xs btn-default">\n\t\t\t\t<span class="glyphicon glyphicon-signal"/>\n\t\t\t</button>`):null;return $btnScaleLvl.off("click")},$getBtnResetScaleLvl(cr){const isScaled=cr.level!=null&&cr._originalLvl!=null;const $btnResetScaleLvl=cr.level!=null?$(`\n\t\t\t<button title="Reset Level Scaling" class="mon__btn-reset-lvl btn btn-xs btn-default">\n\t\t\t\t<span class="glyphicon glyphicon-refresh"></span>\n\t\t\t</button>`).toggle(isScaled):null;return $btnResetScaleLvl.off("click")},async pGetFluff(creature){return Renderer.utils.pGetFluff({entity:creature,fluffBaseUrl:`data/bestiary/`,fluffProp:"creatureFluff"})},getCustomHashId(cr){if(!cr._isScaledLvl)return null;const{name:name,source:source,_scaledLvl:scaledLvl}=cr;return[name,source,scaledLvl??""].join("__").toLowerCase()},getUnpackedCustomHashId(customHashId){if(!customHashId)return null;const[,,scaledLvl]=customHashId.split("__").map((it=>it.trim()));if(scaledLvl==null)return null;return{_scaledLvl:Number(scaledLvl),customHashId:customHashId}},async pGetModifiedCreature(cr,customHashId){if(!customHashId)return cr;const{_scaledLvl:_scaledLvl}=Renderer.creature.getUnpackedCustomHashId(customHashId);if(_scaledLvl!=null)return scaleCreature.scale(cr,_scaledLvl);throw new Error(`Unhandled custom hash ID "${customHashId}"`)}};Renderer.deity={getRenderedString(deity,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(true);const renderStack=[Renderer.utils.getExcludedDiv(deity,"deity",UrlUtil.PG_DEITIES),Renderer.utils.getNameDiv(deity,{type:deity.category==="Philosophy"||deity.category==="Pantheon"?deity.category:"Deity",...opts}),Renderer.utils.getDividerDiv()];if(deity.pantheonMembers){const pantheon=renderer.render(deity.pantheonMembers.map((m=>{const[name,src]=m.split("|");return`{@deity ${name}|${src}}`})).join(", "));renderStack.push(`<p class="pf2-stat__section"><strong>Pantheon Members&nbsp;</strong>${pantheon}</p>`);renderStack.push(Renderer.utils.getDividerDiv())}if(deity.alignment)renderStack.push(Renderer.deity.getAlignment(deity.alignment));if(deity.areasOfConcern)renderStack.push(`<p class="pf2-stat__section"><strong>Areas of Concern&nbsp;</strong>${deity.areasOfConcern.join(", ")}</p>`);if(deity.edicts)renderStack.push(Renderer.deity.getCommandments(deity.edicts,"Edicts"));if(deity.anathema)renderStack.push(Renderer.deity.getCommandments(deity.anathema,"Anathema"));if((deity.edicts||deity.anathema)&&deity.font)renderStack.push(Renderer.utils.getDividerDiv());if(deity.font)renderStack.push(`<p class="pf2-stat__section"><strong>Divine Font&nbsp;</strong>${renderer.render(deity.font.map((f=>`{@spell ${f}}`)).join(" or "))}</p>`);if(deity.divineAbility)renderStack.push(`<p class="pf2-stat__section"><strong>Divine Ability&nbsp;</strong>${renderer.render(deity.divineAbility.entry?deity.divineAbility.entry:deity.divineAbility.abilities.map((x=>x.toTitleCase())).joinConjunct(", "," or "))}</p>`);if(deity.divineSkill)renderStack.push(`<p class="pf2-stat__section"><strong>Divine Skill&nbsp;</strong>${renderer.render(deity.divineSkill.entry?deity.divineSkill.entry:deity.divineSkill.skills.map((s=>`{@skill ${s.toTitleCase()}}`)).join(", "))}</p>`);if(deity.domains)renderStack.push(`<p class="pf2-stat__section"><strong>Domains&nbsp;</strong>${renderer.render(deity.domains.map((it=>`{@filter ${it}|spells||domains=${it}}`)).join(", "))}</p>`);if(deity.alternateDomains)renderStack.push(`<p class="pf2-stat__section"><strong>Alternate Domains&nbsp;</strong>${renderer.render(deity.alternateDomains.map((it=>`{@filter ${it}|spells||domains=${it}}`)).join(", "))}</p>`);if(deity.spells)renderStack.push(`<p class="pf2-stat__section"><strong>Cleric Spells&nbsp;</strong>${renderer.render(Renderer.deity.getClericSpells(deity.spells))}</p>`);if(deity.favoredWeapon)renderStack.push(`<p class="pf2-stat__section"><strong>Favored Weapon&nbsp;</strong>${renderer.render(deity.favoredWeapon.entry?deity.favoredWeapon.entry:deity.favoredWeapon.weapons.map((w=>`{@item ${w}}`)).join(", "))}</p>`);if(deity.entries)renderer.recursiveRender(deity.entries,renderStack,{pf2StatFix:true});if(deity.avatar){renderStack.push(`<p class="pf2-h3">Avatar</p>`);if(deity.avatar.preface)renderStack.push(`<p class="pf2-stat">${renderer.render(deity.avatar.preface)}</p>`);renderStack.push(`<p class="pf2-stat"><strong>${deity.name}</strong> `);if(deity.avatar.speed)renderStack.push(`${deity.avatar.speed.walk?`Speed ${deity.avatar.speed.walk} feet`:"no land Speed"}${Object.keys(deity.avatar.speed).filter((type=>type!=="walk")).map((s=>typeof deity.avatar.speed[s]==="number"?`, ${s} Speed ${deity.avatar.speed[s]} feet`:"")).join("")}`);let notes=[];if(deity.avatar.airWalk)notes.push(`{@spell air walk}`);if(deity.avatar.immune)notes.push(`immune to ${deity.avatar.immune.map((i=>`{@condition ${i}}`)).joinConjunct(", "," and ")}`);if(deity.avatar.ignoreTerrain)notes.push("ignore {@quickref difficult terrain||3|terrain} and {@quickref greater difficult terrain||3|terrain}");if(deity.avatar.speed.speedNote)notes.push(`${deity.avatar.speed.speedNote}`);if(notes.length>0)renderStack.push(`, ${renderer.render(notes.join(", "))}`);if(deity.avatar.shield)renderStack.push(`; shield (${deity.avatar.shield} Hardness, can't be damaged)`);if(deity.avatar.melee||deity.avatar.ranged||deity.avatar.ability){renderStack.push(`; `);if(deity.avatar.melee){deity.avatar.melee.forEach(((element,index,array)=>{renderStack.push(Renderer.deity.getRenderedMeleeAttack(element));renderStack.push(array.length-1===index?"":"; ")}))}if(deity.avatar.ranged){if(deity.avatar.melee&&Object.keys(deity.avatar.melee).length)renderStack.push(`; `);deity.avatar.ranged.forEach(((element,index,array)=>{renderStack.push(Renderer.deity.getRenderedRangedAttack(element));renderStack.push(array.length-1===index?"":"; ")}))}if(deity.avatar.ability){if(deity.avatar.ranged&&Object.keys(deity.avatar.ranged).length||deity.avatar.melee&&Object.keys(deity.avatar.melee).length)renderStack.push(`; `);deity.avatar.ability.forEach(((element,index,array)=>{renderStack.push(`<strong>${element.name}</strong> ${element.entries.map((a=>renderer.render(a)))}`);renderStack.push(array.length-1===index?"":"; ")}))}if(renderStack.at(-1)?.at(-1)!==".")renderStack.push(`.`)}renderStack.push(`</p>`)}if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(deity));return renderStack.join("")},getAlignment(alignment){if(alignment.entry){const renderer=Renderer.get();return`<p class="pf2-stat__section"><strong>Alignment&nbsp;</strong>${renderer.render(alignment.entry)}</p>`}else{if(alignment.alignment&&alignment.followerAlignment){return`<p class="pf2-stat__section"><strong>Alignment&nbsp;</strong>${formatAlignmentList(alignment.alignment)} (${formatAlignmentList(alignment.followerAlignment)})</p>`}else{return`<p class="pf2-stat__section"><strong>Alignment&nbsp;</strong>${formatAlignmentList(alignment.alignment||alignment.followerAlignment)}</p>`}}function formatAlignmentList(alignments){const renderer=Renderer.get();return renderer.render(alignments.map((a=>a.length>2?a:`{@trait ${a.toUpperCase()}}`)).join(", "))}},getCommandments(commandments,type){const renderer=Renderer.get();const delim=commandments.some((str=>str.includes(",")))?"; ":", ";return`<p class="pf2-stat__section"><strong>${type}&nbsp;</strong>${renderer.render(commandments.join(delim))}</p>`},getClericSpells(spells){return Object.keys(spells).map((k=>`${Parser.getOrdinalForm(k)}: ${spells[k].map((s=>`{@spell ${s}}`)).join(", ")}`)).join(", ").replace(/ \((.+)\)\}/g,`} ($1)`)},getRenderedRangedAttack(attack){const renderer=Renderer.get();let out=[];let rangedTraits=[];if(attack.traits&&attack.traits.length)rangedTraits=rangedTraits.concat(attack.traits.map((t=>`{@trait ${t.toLowerCase()}}`)));if(attack.preciousMetal)rangedTraits=rangedTraits.concat(attack.preciousMetal);if(attack.traitNote)rangedTraits.push(attack.traitNote);rangedTraits.push(`${attack.range?`range ${attack.reload||attack.rangedIncrement?"increment":""} ${attack.range} feet`:""}${attack.reload?`, reload ${attack.reload}`:""}`);out.push(renderer.render(`<strong>Ranged</strong> {@as 1} `));out.push(renderer.render(attack.name));out.push(renderer.render(` (${rangedTraits.sort(SortUtil.sortTraits).join(", ")}), `));out.push(renderer.render(`<strong>Damage</strong> {@damage ${attack.damage}} ${attack.damageType}${attack.damageType2&&attack.damage?` and {@damage ${attack.damage2}} ${attack.damageType2}`:``}`));if(attack.note)out.push(renderer.render(`. ${attack.note}`));return out.join("")},getRenderedMeleeAttack(attack){const renderer=Renderer.get();let out=[];let meleeTraits=[];if(attack.traits&&attack.traits.length)meleeTraits=meleeTraits.concat(attack.traits.map((t=>`{@trait ${t.toLowerCase()}}`)));if(attack.preciousMetal)meleeTraits=meleeTraits.concat(attack.preciousMetal);if(attack.traitNote)meleeTraits.push(attack.traitNote);out.push(renderer.render(`<strong>Melee</strong> {@as 1} `));out.push(renderer.render(attack.name));if(meleeTraits.length){out.push(renderer.render(` (${meleeTraits.join(", ")}), `))}else out.push(" ");out.push(renderer.render(`<strong>Damage</strong> {@damage ${attack.damage}} ${attack.damageType}${attack.damageType2&&attack.damage?` and {@damage ${attack.damage2}} ${attack.damageType2}`:``}`));if(attack.note)out.push(renderer.render(` ${attack.note}`));return out.join("")},getRenderedLore(deity){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);if(deity.lore)deity.lore.forEach((l=>renderer.recursiveRender(l,textStack)));return textStack.join("")},getIntercession(deity){const renderStack=[];const renderObj=JSON.parse('{"type":"pf2-h2","name":"Divine Intercession","entries":[{"type": "pf2-options","skipSort":true,"items":[]}]}');const renderer=Renderer.get().setFirstSection(true);Object.keys(deity.intercession).forEach((key=>{if(key.match(/^(Minor|Moderate|Major) (Boon|Curse)$/)){renderObj.entries[0].items.push({type:"item",name:key,entries:deity.intercession[key]})}}));if(deity.intercession.flavor)renderObj.entries.unshift(...deity.intercession.flavor);renderer.recursiveRender([renderObj],renderStack);renderStack.push(Renderer.utils.getPageP(deity.intercession));return renderStack.join("")},getImage(deity){const renderStack=[""];if(deity.images){const img=deity.images[0];if(img.includes("2e.aonprd.com"))renderStack.push(`<a target="_blank" rel="noopener noreferrer" title="Shift/Ctrl to open in a new window/tab." href="${img}">Images available on the Archives of Nethys.</a>`);else renderStack.push(`<p><img style="display: block; margin-left: auto; margin-right: auto; width: 50%;" src="${img}" alt="No Image Found."></p>`)}return renderStack.join("")},async pGetFluff(deity){return Renderer.utils.pGetFluff({entity:deity,fluffUrl:`data/fluff-deities.json`,fluffProp:"deityFluff"})}};Renderer.domain={getRenderedString(domain){const renderer=Renderer.get().setFirstSection(true);const textStack=[];renderer.recursiveRender(domain.entries,textStack,{pf2StatFix:true});return`${renderer.render({type:"pf2-h3",name:`${domain.name} (Domain)`})}\n\t\t${textStack.join("")}\n\t\t${Renderer.utils.getPageP(domain)}`}};Renderer.feat={getSubHead(feat){const renderStack=[];const renderer=Renderer.get();if(feat.access!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Access&nbsp;</strong>${renderer.render(feat.access)}</p>`)}if(feat.prerequisites!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Prerequisites&nbsp;</strong>`);renderStack.push(renderer.render(feat.prerequisites));renderStack.push(`</p>`)}if(feat.prerequisiteArray!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Prerequisites&nbsp;</strong>`);renderStack.push(Renderer.utils.getPrerequisiteHtml(feat.prerequisiteArray,{isSkipPrefix:true}));renderStack.push(`</p>`)}if(feat.frequency!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Frequency&nbsp;</strong>${renderer.render(Parser.freqToFullEntry(feat.frequency))}</p>`)}if(feat.trigger!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Trigger&nbsp;</strong>${renderer.render(feat.trigger)}</p>`)}if(feat.cost!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Cost&nbsp;</strong>${renderer.render(feat.cost)}</p>`)}if(feat.requirements!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Requirements&nbsp;</strong>${renderer.render(feat.requirements)}</p>`)}if(renderStack.length!==0)renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getLeadsTo(feat){const renderer=Renderer.get();if(feat.leadsTo&&feat.leadsTo.length){return`<p class="pf2-stat pf2-stat__text mt-2">${renderer.render(`{@note This feat leads to: ${feat.leadsTo.map((it=>`{@feat ${it}}`)).joinConjunct(", "," and ")}.}`)}</p>`}else return""},getRenderedString(feat,opts){opts=opts||{};return`${Renderer.utils.getExcludedDiv(feat,"feat",UrlUtil.PG_FEATS)}\n\t\t\t${Renderer.utils.getNameDiv(feat,{page:UrlUtil.PG_FEATS,type:"FEAT",activity:true,...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(feat.traits)}\n\t\t\t${Renderer.feat.getSubHead(feat)}\n\t\t\t${Renderer.generic.getRenderedEntries(feat)}\n\t\t\t${feat.amp?`${Renderer.utils.getDividerDiv()}${Renderer.spell.getAmpEntry(feat)}`:""}\n\t\t\t${opts.renderLeadsTo?Renderer.feat.getLeadsTo(feat):""}\n\t\t\t${opts.noPage?"":Renderer.utils.getPageP(feat)}`}};Renderer.group={getRenderedString(group){const renderer=Renderer.get().setFirstSection(true);const textStack=[];renderer.recursiveRender(group.specialization,textStack,{pf2StatFix:true});return`${renderer.render({type:"pf2-h3",name:`${group.name} (${group.type} Group)`})}\n\t\t${textStack.join("")}\n\t\t${Renderer.utils.getPageP(group)}`}};Renderer.hazard={getRenderedString(hazard,opts){opts=opts||{};const renderStack=[""];const renderer=Renderer.get();renderStack.push(`\n\t\t${Renderer.utils.getExcludedDiv(hazard,"hazard",UrlUtil.PG_HAZARDS)}\n\t\t${Renderer.utils.getNameDiv(hazard,{page:UrlUtil.PG_HAZARDS,type:"HAZARD",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(hazard.traits||[])}`);if(hazard.stealth){let stealthText=hazard.stealth.dc!=null?`DC ${hazard.stealth.dc}`:`{@d20 ${hazard.stealth.bonus}||Stealth}`;if(hazard.stealth.minProf)stealthText+=` (${hazard.stealth.minProf})`;if(hazard.stealth.notes)stealthText+=` ${hazard.stealth.notes}`;renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Stealth&nbsp;</strong>${renderer.render(stealthText)}</p>`)}if(hazard.perception){let perceptionText=hazard.perception.dc!=null?`DC ${hazard.perception.dc}`:`{@d20 ${hazard.perception.bonus}||perception}`;if(hazard.perception.minProf)perceptionText+=` (${hazard.perception.minProf})`;if(hazard.perception.notes)perceptionText+=` ${hazard.perception.notes}`;renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Perception&nbsp;</strong>${renderer.render(perceptionText)}</p>`)}if(hazard.abilities){hazard.abilities.forEach((a=>{renderStack.push(Renderer.creature.getRenderedAbility(a,{noButton:true,asHTML:true}))}))}if(hazard.description){const descriptionStack=[`<p class="pf2-stat pf2-stat__section--wide"><strong>Description&nbsp;</strong>`];renderer.recursiveRender(hazard.description,descriptionStack);descriptionStack.push(`</p>`);renderStack.push(descriptionStack.join(""))}renderStack.push(Renderer.utils.getDividerDiv());if(hazard.disable){const disableStack=[`<p class="pf2-stat pf2-stat__section"><strong>Disable&nbsp;</strong>`];renderer.recursiveRender(hazard.disable.entries,disableStack);disableStack.push(`</p>`);renderStack.push(disableStack.join(""))}renderStack.push(Renderer.hazard.getDefenses(hazard));if(hazard.actions||hazard.attacks){const allActions=(hazard.actions||[]).concat((hazard.attacks||[]).map((x=>{x.type="attack";return x})));allActions.forEach((a=>{if(a.type==="attack"){let textStack=[""];renderer._renderAttack(a,textStack);renderStack.push(textStack)}else renderStack.push(Renderer.creature.getRenderedAbility(a,{noButton:true,asHTML:true}))}))}if(hazard.routine){renderStack.push(Renderer.utils.getDividerDiv());hazard.routine.forEach(((entry,idx)=>{if(idx!==0){if(typeof entry==="object")renderer.recursiveRender(entry,renderStack);else renderer.recursiveRender(entry,renderStack,{prefix:`<p class="pf2-stat pf2-stat__text--wide">`,suffix:"</p>"})}else renderStack.push(`<p class="pf2-stat pf2-stat__text--wide"><strong>Routine&nbsp;</strong>${renderer.render(entry)}</p>`)}))}if(hazard.reset){renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(`<p class="pf2-stat pf2-stat__section--wide"><strong>Reset&nbsp;</strong>`);renderer.recursiveRender(hazard.reset,renderStack);renderStack.push(`</p>`)}if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(hazard));return renderStack.join("")},getDefenses(hazard){if(!hazard.defenses)return"";const acPart=Renderer.creature.getDefenses_getACPart(hazard);const savingThrowPart=Renderer.creature.getDefenses_getSavingThrowPart(hazard);const hpHardnessPart=Renderer.hazard.getDefenses_getHPHardnessPart(hazard);const immunitiesPart=Renderer.creature.getDefenses_getImmunitiesPart(hazard);const weakPart=Renderer.creature.getDefenses_getResWeakPart(hazard.defenses.weaknesses,"Weaknesses");const resistPart=Renderer.creature.getDefenses_getResWeakPart(hazard.defenses.resistances,"Resistances");const sect1=[acPart,savingThrowPart].filter(Boolean);const sect2=[hpHardnessPart,immunitiesPart,weakPart,resistPart].filter(Boolean);return`<p class="pf2-stat pf2-stat__section">\n\t\t\t\t\t${sect1.join("; ")}\n\t\t\t\t\t${sect1.length&&sect2.length?"</p><p class='pf2-stat pf2-stat__section'>":""}\n\t\t\t\t\t${sect2.join("; ")}\n\t\t\t\t</p>`},getDefenses_getHPHardnessPart(hazard){if(!hazard.defenses.hp)return null;const renderer=Renderer.get();const rdk=key=>key==="std"?"":`${key} `;const hp=hazard.defenses.hp||{};const bt=hazard.defenses.bt||{};const hard=hazard.defenses.hardness||{};const out=[];Object.keys(hp).filter((it=>it!=="notes")).forEach((hpk=>{const hardNotes=hard.notes&&hard.notes[hpk]?` ${renderer.render(hard.notes[hpk])}; `:", ";const hardPart=hard[hpk]?`<strong>${rdk(hpk)}Hardness&nbsp;</strong>${hard[hpk]}${hardNotes}`:"";const btPart=bt[hpk]?` (BT ${bt[hpk]})`:"";const hpNotes=hp.notes&&hp.notes[hpk]?` ${renderer.render(hp.notes[hpk])}`:"";out.push(`${hardPart}<strong>${rdk(hpk)}HP&nbsp;</strong>${hp[hpk]}${btPart}${hpNotes}`)}));return out.join("; ")}};Renderer.item={getRenderedString(item,opts){opts=opts||{};const renderStack=[""];Renderer.get().recursiveRender(item.entries,renderStack,{pf2StatFix:true});return`${Renderer.utils.getExcludedDiv(item,"item",UrlUtil.PG_ITEMS)}\n\t\t\t${Renderer.utils.getNameDiv(item,{page:UrlUtil.PG_ITEMS,...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(item.traits)}\n\t\t\t${Renderer.item.getSubHead(item)}\n\t\t\t${renderStack.join("")}\n\t\t\t${Renderer.item.getVariantsHtml(item)}\n\t\t\t${item.craftReq||item.special||item.destruction||item.gifts?Renderer.utils.getDividerDiv():""}\n\t\t\t${Renderer.item.getGifts(item)}\n\t\t\t${Renderer.generic.getSpecial(item,{type:"craftReq",title:"Craft Requirements"})}\n\t\t\t${Renderer.generic.getSpecial(item,{title:"Destruction"})}\n\t\t\t${Renderer.generic.getSpecial(item)}\n\t\t\t${Renderer.item.getGenericItem(item)}\n\t\t\t${Renderer.utils.getPageP(item)}`},getSubHead(item){const renderStack=[];const renderer=Renderer.get();if(item.siegeWeaponData&&Object.keys(item.siegeWeaponData).length)return Renderer.item.getSiegeStats(item);if(item.aspects)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Aspects&nbsp;</strong>${renderer.render(item.aspects.joinConjunct(", "," and "))}</p>`);if(item.access)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Access&nbsp;</strong>${renderer.render(item.access)}</p>`);if(item.price)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Price&nbsp;</strong>${Parser.priceToFull(item.price)}</p>`);if(item.ammunition)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Ammunition&nbsp;</strong>${renderer.render(Array.isArray(item.ammunition)?item.ammunition.map((t=>`{@item ${t}}`)).join(", "):`{@item ${item.ammunition}}`)}</p>`);if(item.contract!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.contract.devil!=null)renderStack.push(`<strong>Devil&nbsp;</strong>${renderer.render(item.contract.devil)}`);if(item.contract.devil!=null&&item.contract.decipher!=null)renderStack.push("; ");if(item.contract.decipher!=null)renderStack.push(`<strong>${renderer.render(`{@action Decipher Writing}`)}&nbsp;</strong>${renderer.render(item.contract.decipher.map((d=>`{@skill ${d}}`)).join(", "))}`);renderStack.push(`</p>`)}if(item.usage!=null||item.bulk!=null){renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.usage!=null)renderStack.push(`<strong>Usage&nbsp;</strong>${renderer.render(item.usage)}`);if(item.usage!=null&&item.bulk!=null)renderStack.push("; ");if(item.bulk!=null)renderStack.push(`<strong>Bulk&nbsp;</strong>${item.bulk}`);renderStack.push(`</p>`)}if(item.duration)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Duration&nbsp;</strong>${renderer.render(Parser.durationToFull(item.duration))}</p>`);if(item.activate){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Activate&nbsp;</strong>`);if(item.activate.activity!=null){renderStack.push(`${renderer.render(Parser.timeToFullEntry(item.activate.activity))} `)}if(item.activate.note!=null){renderStack.push(renderer.render(item.activate.note))}const activateTextIndex=renderStack.length;if(item.activate.components!=null){const components=item.activate.components.map((c=>renderer.render(c)));renderStack.push(components.join(", "))}if(item.activate.frequency!=null){renderStack.push(`${renderStack[activateTextIndex]?"; ":""}<strong>Frequency&nbsp;</strong>${renderer.render(Parser.freqToFullEntry(item.activate.frequency))}`)}if(item.activate.trigger!=null){renderStack.push(`${renderStack[activateTextIndex]?"; ":""}<strong>Trigger&nbsp;</strong>${renderer.render(item.activate.trigger)}`)}if(item.activate.requirements!=null){renderStack.push(`${renderStack[activateTextIndex]?"; ":""}<strong>Requirements&nbsp;</strong>${renderer.render(item.activate.requirements)}`)}renderStack.push(`</p>`)}if(item.onset){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Onset&nbsp;</strong>${renderer.render(item.onset)}</p>`)}renderStack.push(Renderer.item.getShieldStats(item));renderStack.push(Renderer.item.getArmorStats(item));renderStack.push(Renderer.item.getWeaponStats(item));if(item.hands)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Hands&nbsp;</strong>${item.hands}</p>`);if(item.prerequisites)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Prerequisites&nbsp;</strong>${renderer.render(item.prerequisites)}</p>`);const group=item.weaponData&&!item.comboWeaponData?item.weaponData.group:item.armorData?item.armorData.group:item.category==="Shield"?"Shield":item.group;if(item.category||group){renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.category){renderStack.push(`<strong>Category&nbsp;</strong>`);if(item.subCategory!=null)renderStack.push(`${item.subCategory} `);if(item.category==="Weapon")renderStack.push(`${item.weaponData?item.weaponData.range?"Ranged ":"Melee ":""}`);renderStack.push(`${Array.isArray(item.category)?item.category.join(", "):item.category}${item.category==="Worn"?`&nbsp;${item.type}`:""}`)}if(item.category!=null&&group!=null)renderStack.push("; ");if(group!=null)renderStack.push(`<strong>Group&nbsp;</strong>${renderer.render(`{@group ${group}}`)}`);renderStack.push(`</p>`)}if(renderStack.length!==0)renderStack.push(Renderer.utils.getDividerDiv());if(item.perception){let senses;if(item.perception.senses){senses=(item.perception.senses.precise||[]).map((s=>`precise ${s}`)).concat((item.perception.senses.imprecise||[]).map((s=>`imprecise ${s}`))).concat((item.perception.senses.vague||[]).map((s=>`vague ${s}`))).concat((item.perception.senses.constant||[]).map((s=>`constant ${s}`))).join(", ")}renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>${renderer.render(`{@skill Perception}`)}&nbsp;</strong>${renderer.render(`{@d20 ${item.perception.default}||Perception}`)}${senses?`; ${renderer.render(senses)}`:""}</p>`)}if(item.communication){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Communication&nbsp;</strong>${item.communication.map((c=>`${c.name}${c.notes?` (${renderer.render(c.notes)})`:""}`)).join("; ")}</p>`)}if(item.skills){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Skills&nbsp;</strong>`);const skills=[];Object.keys(item.skills).forEach((skill=>{skills.push(`${skill.includes("Lore")?`${renderer.render(`{@skill Lore||${skill}}`)}`:`${renderer.render(`{@skill ${skill}}`)}`}&nbsp;${renderer.render(`{@d20 ${item.skills[skill]["default"]}||${skill}}`)}${Renderer.utils.getNotes(item.skills[skill],{exclude:["default"],dice:{name:skill}})}`)}));renderStack.push(skills.join(", "));renderStack.push(`</p>`)}if(item.abilityMods){renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<strong>Int&nbsp;</strong>`);renderStack.push(renderer.render(`{@d20 ${item.abilityMods.Int}||Intelligence}`));renderStack.push(`, <strong>Wis&nbsp;</strong>`);renderStack.push(renderer.render(`{@d20 ${item.abilityMods.Wis}||Wisdom}`));renderStack.push(`, <strong>Cha&nbsp;</strong>`);renderStack.push(renderer.render(`{@d20 ${item.abilityMods.Cha}||Charisma}`));renderStack.push(`</p>`)}if(item.savingThrows){renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.savingThrows.Will){renderStack.push(`<strong>Will&nbsp;</strong>`);renderStack.push(Renderer.get().render(`{@d20 ${item.savingThrows.Will.default}||Will Save}`));renderStack.push(Renderer.utils.getNotes(item.savingThrows.Will,{exclude:["default","abilities"],dice:{name:"Will Save"}}))}renderStack.push(`</p>`)}if(item.perception||item.communication||item.skills||item.abilityMods||item.savingThrows)renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getShieldStats(item){if(item.shieldData&&Object.keys(item.shieldData).length){const shieldData=item.shieldData;return`<p class="pf2-stat pf2-stat__section">\n\t\t\t\t\t<strong>AC Bonus&nbsp;</strong>${Parser.numToBonus(shieldData.ac)}${shieldData.ac2?`/${Parser.numToBonus(shieldData.ac2)}`:""};\n\t\t\t\t\t${shieldData.dexCap?`<strong>Dex Cap&nbsp;</strong>${Parser.numToBonus(shieldData.dexCap)};`:""}\n\t\t\t\t\t<strong>Hardness&nbsp;</strong>${shieldData.hardness};\n\t\t\t\t\t<strong>HP&nbsp;</strong>${shieldData.hp};\n\t\t\t\t\t<strong>BT&nbsp;</strong>${shieldData.bt}\n\t\t\t\t\t</p>\n\t\t\t\t\t${shieldData.speedPen!=null?`<p class="pf2-stat pf2-stat__section"><strong>Speed Penalty&nbsp;</strong>${shieldData.speedPen?`–${shieldData.speedPen} ft.`:"—"}</p>`:""}`}else return""},getSiegeStats(item){const renderStack=[];const renderer=Renderer.get();const siegeData=item.siegeWeaponData;if(item.price||siegeData.ammunition){const miniStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.price)miniStack.push(`<strong>Price&nbsp;</strong>${Parser.priceToFull(item.price)}`);if(siegeData.ammunition)miniStack.push(`<strong>Ammunition&nbsp;</strong>${siegeData.ammunition}`);renderStack.push(miniStack.join("; "));renderStack.push(`</p>`);renderStack.push(Renderer.utils.getDividerDiv())}if(item.usage||item.bulk||siegeData.space||siegeData.crew||item.subCategory){let miniStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(item.usage)miniStack.push(`<strong>Usage&nbsp;</strong>${item.usage}`);if(item.bulk)miniStack.push(`<strong>Bulk&nbsp;</strong>${item.bulk}`);if(siegeData.space)miniStack.push(`<strong>Space&nbsp;</strong>${Object.entries(siegeData.space).map((([k,v])=>`${v.number} ${v.unit} ${k}`)).join(", ")}`);renderStack.push(miniStack.join("; "));renderStack.push(`</p>`);miniStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);if(siegeData.crew)miniStack.push(`<strong>Crew&nbsp;</strong>${siegeData.crew.min}${siegeData.crew.max?` to ${siegeData.crew.max}`:""}`);if(item.subCategory)miniStack.push(`<strong>Proficiency&nbsp;</strong>${siegeData.proficiency.toLowerCase()}`);renderStack.push(miniStack.join("; "));renderStack.push(`</p>`);renderStack.push(Renderer.utils.getDividerDiv())}if(siegeData.defenses){renderStack.push(Renderer.vehicle.getDefenses(siegeData));renderStack.push(Renderer.utils.getDividerDiv())}if(siegeData.speed){renderStack.push(`<strong>Speed&nbsp;</strong>${siegeData.speed.speed} feet${siegeData.speed.note?` (${siegeData.speed.note})`:""}`);renderStack.push(Renderer.utils.getDividerDiv())}return renderer.render(renderStack.join(""))},getGifts(item){if(item.gifts){const renderer=Renderer.get();const gifts=item.gifts;const renderStack=[];Object.keys(gifts).map((type=>{renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>${type.toTitleCase()} Gift${gifts[type].length>1?"s":""}&nbsp;</strong>${gifts[type].map((gift=>{let split=gift.split("|");return`{@relicGift ${split[0].replace(/\(.+?\)/,"").trim()}|${split[1]??""}|${split[0]}}`})).join(", ")}\n\t\t\t\t</p>`)}));return renderer.render(renderStack.join(""))}else return""},getArmorStats(item){if(item.armorData&&Object.keys(item.armorData).length){const armorData=item.armorData;return`<p class="pf2-stat pf2-stat__section">\n\t\t\t<strong>AC Bonus&nbsp;</strong>${Parser.numToBonus(armorData.ac)};\n\t\t\t<strong>Dex Cap&nbsp;</strong>${Parser.numToBonus(armorData.dexCap)}\n\t\t\t</p><p class="pf2-stat pf2-stat__section">\n\t\t\t<strong>Strength&nbsp;</strong>${armorData.str?`${armorData.str}`:"—"};\n\t\t\t<strong>Check Penalty&nbsp;</strong>${armorData.checkPen?`–${armorData.checkPen}`:"—"};\n\t\t\t<strong>Speed Penalty&nbsp;</strong>${armorData.speedPen?`–${armorData.speedPen} ft.`:"—"}\n\t\t\t</p>`}else return""},getWeaponStats(item){const weaponData=item.weaponData;const comboWeaponData=item.comboWeaponData;if(weaponData&&Object.keys(weaponData).length&&comboWeaponData&&Object.keys(comboWeaponData).length){const opts={doRenderGroup:true};return`<div class="pf2-combo">\n\t\t\t\t<div class="pf2-combo__start"><p class="pf2-combo__title">${weaponData.type}</p>${Renderer.item._getRenderedWeaponStats(weaponData,opts)}</div>\n\t\t\t\t<div class="pf2-combo__end"><p class="pf2-combo__title">${comboWeaponData.type}</p>${Renderer.item._getRenderedWeaponStats(comboWeaponData,opts)}</div>\n\t\t\t</div>`}else if(weaponData&&Object.keys(weaponData).length){return Renderer.item._getRenderedWeaponStats(weaponData)}else return""},_getRenderedWeaponStats(data,opts){opts=opts||{};const renderer=Renderer.get();const rangedEntries=[];if(data.ammunition)rangedEntries.push(`<strong>Ammunition&nbsp;</strong>${renderer.render(`{@item ${data.ammunition}}`)}`);if(data.range)rangedEntries.push(`<strong>Range&nbsp;</strong>${renderer.render(`${data.range} ft.`)}`);if(data.reload||data.reload===0)rangedEntries.push(`<strong>Reload&nbsp;</strong>${renderer.render(`${data.reload}`)}`);const rangedLine=rangedEntries.join("; ");return`\n\t\t${data.traits&&data.traits.length?`<p class="pf2-stat pf2-stat__section"><strong>Traits&nbsp;</strong>${data.traits.map((t=>renderer.render(`{@trait ${t.toLowerCase()}}`))).join(", ")}</p>`:""}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Damage&nbsp;</strong>${renderer.render(`{@damage ${data.damage}}&nbsp;${Parser.dmgTypeToFull(data.damageType)}${data.damage2?` and {@damage ${data.damage2}}&nbsp;${data.damageType2?Parser.dmgTypeToFull(data.damageType2):Parser.dmgTypeToFull(data.damageType)}`:""}`)}</p>\n\t\t${rangedLine?`<p class="pf2-stat pf2-stat__section">${rangedLine}</p>`:""}\n\t\t${opts.doRenderGroup?`<p class="pf2-stat pf2-stat__section"><strong>Group&nbsp;</strong>${renderer.render(`{@group ${data.group}}`)}</p>`:""}\n\t\t`},getVariantsHtml(item){if(!item.generic||!item.variants||!item.variants.length)return"";const renderStack=[];const renderer=Renderer.get();item.variants.forEach((v=>{renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Type&nbsp;</strong>${renderer.render(`{@item ${v.variantType.toLowerCase().includes(item.name.toLowerCase())?`${v.variantType}`:`${v.name?v.name:`${v.variantType} ${item.name}`}`} ${v.add_hash?`(${v.add_hash})`:""}|${v.source?v.source:item.source}|${v.variantType}}`)}`);if(v.level!=null)renderStack.push(`; <strong>Level&nbsp;</strong>${v.level}`);if(v.traits!=null&&v.traits.length)renderStack.push(` (${renderer.render(v.traits.map((t=>`{@trait ${t.toLowerCase()}}`)).join(", "))})`);if(v.price!=null)renderStack.push(`; <strong>Price&nbsp;</strong>${Parser.priceToFull(v.price)}`);if(v.bulk!=null)renderStack.push(`; <strong>Bulk&nbsp;</strong>${v.bulk}`);if(v.craftReq!=null)renderStack.push(`; <strong>Craft Requirements&nbsp;</strong>${renderer.render(v.craftReq)}`);renderStack.push(`</p>`);if(v.entries!=null&&v.entries.length){renderer.recursiveRender(v.entries,renderStack,{prefix:"<p class='pf2-stat pf2-stat__section--wide'>",suffix:"</p>"})}if(v.shieldData!=null)renderStack.push(`<p class='pf2-stat pf2-stat__section--wide'>The shield has Hardness ${v.shieldData.hardness}, HP ${v.shieldData.hp}, and BT ${v.shieldData.bt}.</p>`)}));return renderStack.join("")},getGenericItem:item=>{if(item.genericItem!=null){return`<span class="pf2-stat pf2-stat__source" style="float: left">\n\t\t\t\t${Renderer.get().render(`{@note Main Item: ${`{@item ${item.genericItem}}`}}`)}\n\t\t\t</span>`}else return""},async pGetFluff(item){return Renderer.utils.pGetFluff({entity:item,fluffBaseUrl:`data/items/`,fluffProp:"itemFluff"})},_builtLists:{},_lockBuildList:null,async _pLockBuildList(){while(Renderer.item._lockBuildList)await Renderer.item._lockBuildList.lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));Renderer.item._lockBuildList={lock:lock,unlock:unlock}},_unlockBuildList(){const lockMeta=Renderer.item._lockBuildList;if(Renderer.item._lockBuildList){delete Renderer.item._lockBuildList;lockMeta.unlock()}},async pBuildList(opts){await Renderer.item._pLockBuildList();opts=opts||{};opts.urls=opts.urls||{};const kBlacklist=opts.isBlacklistVariants?"withBlacklist":"withoutBlacklist";if(Renderer.item._builtLists[kBlacklist]){const cached=Renderer.item._builtLists[kBlacklist];Renderer.item._unlockBuildList();if(opts.fnCallback)return opts.fnCallback(cached);return cached}const itemData=await DataUtil.item.loadJSON();const baseItems=itemData.baseitem;const allItems=[...itemData.item,...baseItems];Renderer.item._builtLists[kBlacklist]=allItems;Renderer.item._unlockBuildList();if(opts.fnCallback)return opts.fnCallback(allItems);return allItems},async getItemsFromHomebrew(homebrew){const items=[...homebrew.baseitem||[],...homebrew.item||[]];const expanded=await Promise.all(items.map((it=>DataUtil.item.expandVariants(it))));return expanded.flat()},getRenderedFluff(item){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);if(item.entries)item.entries.forEach((l=>renderer.recursiveRender(l,textStack)));return textStack.join("")}};Renderer.language={getRenderedString(it,opts){opts=opts||{};const textStack=[""];const renderer=Renderer.get().setFirstSection(true);const allEntries=[];if(it.entries)allEntries.push(...it.entries);if(!allEntries.length)allEntries.push("{@i No entries available.}");renderer.recursiveRender(allEntries,textStack,{pf2StatFix:true});return`\n\t\t${Renderer.utils.getExcludedDiv(it,"language",UrlUtil.PG_LANGUAGES)}\n\t\t${Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_LANGUAGES,type:`${it.type?`${it.type} `:""}language`,...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${it.typicalSpeakers?`<p class="pf2-stat pf2-stat__section"><strong>Typical Speakers</strong> ${Renderer.get().render(it.typicalSpeakers.join(", "))}</p>`:""}\n\t\t${it.regions?`<p class="pf2-stat pf2-stat__section"><strong>Regions</strong> ${Renderer.get().render(it.regions.join(", "))}</p>`:""}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${textStack.join("")}\n\t\t${Renderer.utils.getPageP(it)}`},pGetFluff(it){return Renderer.utils.pGetFluff({entity:it,fluffProp:"languageFluff",fluffUrl:`data/fluff-languages.json`})}};Renderer.nation={getRenderedString(it,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderStack.push(Renderer.utils.getExcludedDiv(it,"nation",UrlUtil.PG_PLACES));renderStack.push(Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_PLACES,type:"NATION",...opts}));renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(Renderer.utils.getTraitsDiv(it.traits||[]));renderStack.push(Renderer.nation.getSubHeadTop(it));renderStack.push(Renderer.nation.getSubHeadBot(it));renderStack.push(Renderer.nation.getResidents(it));renderStack.push(Renderer.utils.getPageP(it));return renderStack.join("")},getSubHeadTop(it){const renderer=Renderer.get();const renderStack=[];if(it.description)renderStack.push(`<p class="pf2-stat pf2-stat__section">${it.description}</p>`);if(it.nationData.government)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Government&nbsp;</strong>${it.nationData.government}</p>`);if(it.nationData.capital)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Capital&nbsp;</strong>${it.nationData.capital.name} (${it.nationData.capital.total.toLocaleString()})</p>`);if(it.nationData.population)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Population&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.nationData.population)}</p>`);if(it.nationData.languages)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Languages&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.nationData.languages)}</p>`);if(it.nationData.religions)renderStack.push(renderer.render(Renderer.nation.getReligions(it)));if(it.nationData.features)renderStack.push(renderer.render(Renderer.nation.getFeatures(it.nationData)));renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getReligions(it){const renderer=Renderer.get();const renderStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Religions&nbsp;</strong>`);renderStack.push(it.nationData.religions.map((r=>typeof r==="object"?`{@b ${r.type.toTitleCase()}} ${renderer.renderJoinCommaOrSemi(r.religions)}`:r)).join(", "));renderStack.push(`</p>`);return renderStack.join("")},getFeatures(it){const renderer=Renderer.get();const renderStack=[];it.features.forEach((element=>{renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(`<strong>${element.name}</strong> ${renderer.render(element.entries)}`);renderStack.push(`</p>`)}));return renderStack.join("")},getSubHeadBot(it){const renderer=Renderer.get();const renderStack=[];const data=it.nationData;if(data.exports)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Primary&nbsp;Exports&nbsp;</strong>${renderer.renderJoinCommaOrSemi(data.exports)}</p>`);if(data.imports)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Primary&nbsp;Imports&nbsp;</strong>${renderer.renderJoinCommaOrSemi(data.imports)}</p>`);if(data.enemies)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Enemies&nbsp;</strong>${renderer.renderJoinCommaOrSemi(data.enemies)}</p>`);if(data.factions)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Factions&nbsp;</strong>${renderer.renderJoinCommaOrSemi(data.factions)}</p>`);if(data.threats)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Threats&nbsp;</strong>${renderer.renderJoinCommaOrSemi(data.threats)}</p>`);if(renderStack.length!==0)renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getResidents(it){const renderer=Renderer.get();const renderStack=[];it.residents.forEach((element=>{const residentStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section">`);renderStack.push(renderer.render(`<strong>${element.name}</strong> `));if(element.alignment||element.gender||element.ancestry||element.position){renderStack.push(`(`);if(element.alignment)residentStack.push(`{@trait ${element.alignment}}`);if(element.gender)residentStack.push(Parser.genderToFull(element.gender));if(element.ancestry)residentStack.push(element.ancestry);if(element.position)residentStack.push(element.position);if(element.level)residentStack.push(element.level);renderStack.push(residentStack.join(" "));renderStack.push(`) `)}if(element.bond)renderStack.push(element.bond);renderStack.push(`</p>`)}));return renderer.render(renderStack.join(""))}};Renderer.optionalFeature={getListPrerequisiteLevelText(prerequisites){if(!prerequisites||!prerequisites.some((it=>it.level))){return"—"}const levelPart=prerequisites.find((it=>it.level)).level;return levelPart.level||levelPart},getRenderedString(it,opts){opts=opts||{};return`\n\t\t${Renderer.utils.getNameDiv(it)}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(it.traits)}\n\t\t${it.prerequisite?`<p class="pf2-stat pf2-stat__section">${Renderer.utils.getPrerequisiteHtml(it.prerequisite)}</p>`:""}\n\t\t${it.traits?Renderer.utils.getDividerDiv():it.prerequisite?Renderer.utils.getDividerDiv():""}\n\t\t${Renderer.generic.getRenderedEntries(it)}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(it)}`}};Renderer.organization={getRenderedString(organization,opts){opts=opts||{};return`\n\t\t\t${Renderer.utils.getExcludedDiv(organization,"organization",UrlUtil.PG_ORGANIZATIONS)}\n\t\t\t${Renderer.utils.getNameDiv(organization,{type:`${organization.alignment&&organization.alignment.length===1?`${organization.alignment[0]}`:""} organization`,...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(organization.traits||[])}\n\t\t\t${Renderer.organization.getTitleScopeGoals(organization)}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.organization.getDetails(organization)}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.organization.getMembership(organization)}\n\t\t\t${opts.noPage?"":Renderer.utils.getPageP(organization)}`},getTitleScopeGoals(organization){let out=[];const renderer=Renderer.get();if(organization.title)out.push(`<p class="pf2-stat__section"><i>${organization.title.join(", ")}</i></p>`);if(organization.scope)out.push(`<p class="pf2-stat__section"><strong>Scope and Influence&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.scope)}</p>`);if(organization.goals)out.push(`<p class="pf2-stat__section"><strong>Goals&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.goals)}</p>`);return out.join("")},getDetails(organization){let out=[];const renderer=Renderer.get();if(organization.headquarters)out.push(`<p class="pf2-stat__section"><strong>Headquarters&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.headquarters)}</p>`);if(organization.keyMembers)out.push(`<p class="pf2-stat__section"><strong>Key Members&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.keyMembers)}</p>`);if(organization.allies)out.push(`<p class="pf2-stat__section"><strong>Allies&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.allies)}</p>`);if(organization.enemies)out.push(`<p class="pf2-stat__section"><strong>Enemies&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.enemies)}</p>`);if(organization.assets)out.push(`<p class="pf2-stat__section"><strong>Assets&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.assets)}</p>`);return out.join("")},getMembership(organization){let out=[];const renderer=Renderer.get();if(organization.requirements)out.push(`<p class="pf2-stat__section"><strong>Membership Requirements&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.requirements)}</p>`);if(organization.followerAlignment){out.push(`<p class="pf2-stat__section"><strong>Accepted Alignments&nbsp;</strong>${renderer.render(organization.followerAlignment.map((it=>it.entry?it.entry:`{@trait ${Parser.getTraitName(it.main)}}${it.secondaryCustom?` (${it.secondaryCustom})`:it.secondary?` (${it.secondary.map((it=>`{@trait ${Parser.getTraitName(it)}}`)).join(", ")}${it.note?`; ${it.note}`:""})`:""}`)).join(", "))}</p>`)}if(organization.values)out.push(`<p class="pf2-stat__section"><strong>Values&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.values)}</p>`);if(organization.anathema)out.push(`<p class="pf2-stat__section"><strong>Anathema&nbsp;</strong>${renderer.renderJoinCommaOrSemi(organization.anathema)}</p>`);return out.join("")},getRenderedLore(organization){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);if(organization.lore)organization.lore.forEach((l=>renderer.recursiveRender(l,textStack)));return textStack.join("")},getImage(organization){const textStack=[""];if(organization.images){const img=organization.images[0];if(img.includes("2e.aonprd.com"))textStack.push(`<a target="_blank" rel="noopener noreferrer" title="Shift/Ctrl to open in a new window/tab." href="${img}">Images available on the Archives of Nethys.</a>`);else textStack.push(`<p><img style="display: block; margin-left: auto; margin-right: auto; width: 50%;" src="${img}" alt="No Image Found."></p>`)}return textStack.join("")},async pGetFluff(organization){return Renderer.utils.pGetFluff({entity:organization,fluffUrl:`data/fluff-organizations.json`,fluffProp:"organizationFluff"})}};Renderer.creatureTemplate={getRenderedString(it,opts){opts=opts||{};return $$`
			${Renderer.utils.getExcludedDiv(it,"creatureTemplate",UrlUtil.PG_CREATURETEMPLATE)}
			${Renderer.utils.getNameDiv(it)}
			${Renderer.utils.getDividerDiv()}
			${Renderer.utils.getTraitsDiv(it.traits||[])}
			${Renderer.creatureTemplate.getBody(it)}
			${Renderer.generic.getRenderedEntries(it)}
			${it.abilities&&it.abilities.entries?Renderer.generic.getRenderedEntries(it.abilities):""}
			${it.abilities&&it.abilities.abilities?it.abilities.abilities.map((x=>Renderer.creature.getRenderedAbility(x))):""}
			${it.optAbilities&&it.optAbilities.entries?Renderer.generic.getRenderedEntries(it.optAbilities):""}
			${it.optAbilities&&it.optAbilities.abilities?it.optAbilities.abilities.map((x=>Renderer.creature.getRenderedAbility(x))):""}
		`},getBody(it){if(!it.languages||it.languages.length===0)return"";const textStack=[""];const renderer=Renderer.get().setFirstSection(true);textStack.push(Renderer.utils.getDividerDiv());return renderer.render(textStack.join(""))},getRenderedLore(creatureTemplate){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);if(creatureTemplate.lore)creatureTemplate.lore.forEach((l=>renderer.recursiveRender(l,textStack)));return textStack.join("")},getImage(creatureTemplate){const textStack=[""];if(creatureTemplate.images){const img=creatureTemplate.images[0];if(img.includes("2e.aonprd.com"))textStack.push(`<a target="_blank" rel="noopener noreferrer" title="Shift/Ctrl to open in a new window/tab." href="${img}">Images available on the Archives of Nethys.</a>`);else textStack.push(`<p><img style="display: block; margin-left: auto; margin-right: auto; width: 50%;" src="${img}" alt="No Image Found."></p>`)}return textStack.join("")},async pGetFluff(creatureTemplate){return Renderer.utils.pGetFluff({entity:creatureTemplate,fluffUrl:`data/fluff-creaturetemplates.json`,fluffProp:"creatureTemplateFluff"})}};Renderer.place={getRenderedString(it,opts){if(it.category.toLowerCase()==="plane")return Renderer.plane.getRenderedString(it,opts);if(it.category.toLowerCase()==="mindscape")return Renderer.plane.getRenderedString(it,opts);if(it.category.toLowerCase()==="settlement")return Renderer.settlement.getRenderedString(it,opts);if(it.category.toLowerCase()==="nation")return Renderer.nation.getRenderedString(it,opts)}};Renderer.event={getRenderedString(it,opts){opts=opts||{};return $$`
			${Renderer.utils.getExcludedDiv(it,"event",UrlUtil.PG_EVENTS)}
			${Renderer.utils.getNameDiv(it,{type:"EVENT"})}
			${Renderer.utils.getDividerDiv()}
			${Renderer.utils.getTraitsDiv(it.traits||[])}
			${Renderer.event.getBody(it)}
			${Renderer.generic.getRenderedEntries(it)}
			${Renderer.utils.getPageP(it)}
		`},getBody(it){let renderer=Renderer.get();let textStack=[];if(it.applicableSkills)textStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Applicable Skills&nbsp;</strong>${renderer.render(Parser.parseSkills(it.applicableSkills,{toTags:true,toTitleCase:true}).join(", "))}`);if(textStack.length)textStack.push(Renderer.utils.getDividerDiv());return textStack.join("")}};Renderer.plane={getRenderedString(it,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderStack.push(Renderer.utils.getExcludedDiv(it,it.category.toLowerCase()??"plane",UrlUtil.PG_PLACES));renderStack.push(Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_PLACES,type:it.category.toUpperCase()??"PLANE",...opts}));renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(Renderer.utils.getTraitsDiv(it.traits||[]));renderStack.push(Renderer.plane.getSubHead(it));renderer.recursiveRender(it.entries,renderStack,{pf2StatFix:true});renderStack.push(Renderer.utils.getPageP(it));return renderStack.join("")},getSubHead(it){if(!it.planeData)return"";const renderer=Renderer.get();const renderStack=[];if(it.planeData.category)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Category&nbsp;</strong>${it.planeData.category.toTitleCase()} Plane</p>`);if(it.planeData.divinities)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Divinities&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.planeData.divinities)}</p>`);if(it.planeData.inhabitants)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Native Inhabitants&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.planeData.inhabitants)}</p>`);renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")}};Renderer.relicGift={getRenderedString(it,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderer.recursiveRender(it.entries,renderStack,{pf2StatFix:true});return renderer.render(`\n\t\t\t${Renderer.utils.getExcludedDiv(it,"relicGift",UrlUtil.PG_RELICGIFTS)}\n\t\t\t${Renderer.utils.getNameDiv(it,{type:`${it.tier.toUpperCase()} GIFT`})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${Renderer.utils.getTraitsDiv(it.traits||[])}\n\t\t\t${Renderer.relicGift.getBody(it)}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t\t${renderStack.join("")}\n\t\t\t${opts.noPage?"":Renderer.utils.getPageP(it)}\n\t\t`)},getBody(it){const renderStack=['<p class="pf2-stat pf2-stat__section"><strong>Aspect'];if(it.aspects.length>1)renderStack.push("s");renderStack.push(`</strong> ${it.aspects.map((aspect=>typeof aspect==="string"?aspect:`${aspect.name} (${aspect.note})`)).join(", ")}`);if(it.prerequisites)renderStack.push(`; <strong>Prerequisites</strong> ${it.prerequisites}`);renderStack.push("</p>");return renderStack.join("")}};Renderer.ritual={getRenderedString(ritual,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderer.recursiveRender(ritual.entries,renderStack,{pf2StatFix:true});const duration=Parser.durationToFull(ritual.duration);return renderer.render(`${Renderer.utils.getExcludedDiv(ritual,"ritual",UrlUtil.PG_RITUALS)}\n\t\t${Renderer.utils.getNameDiv(ritual,{page:UrlUtil.PG_RITUALS,type:ritual.type||"Ritual",...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(ritual.traits)}\n\t\t<p class="pf2-stat pf2-stat__section">\n\t\t${[`<strong>Cast&nbsp;</strong>${renderer.render(Parser.timeToFullEntry(ritual.cast))}`,`${ritual.cost?`<strong>Cost&nbsp;</strong>${renderer.render(ritual.cost)}`:""}`,`${ritual.secondaryCasters?`<strong>Secondary Casters&nbsp;</strong>${ritual.secondaryCasters.entry?ritual.secondaryCasters.entry:ritual.secondaryCasters.number}${ritual.secondaryCasters.note?`, ${ritual.secondaryCasters.note}`:""}`:""}`].filter(Boolean).join("; ")}\n\t\t</p>\n\t\t<p class="pf2-stat pf2-stat__section">\n\t\t${[`<strong>Primary&nbsp;Check&nbsp;</strong>${ritual.primaryCheck.entry?renderer.render(ritual.primaryCheck.entry):`${ritual.primaryCheck.skills.map((s=>`{@skill ${s}}`)).joinConjunct(", "," or ")} (${ritual.primaryCheck.prof}${ritual.primaryCheck.mustBe?`; you must be a ${ritual.primaryCheck.mustBe.joinConjunct(", "," or ")}`:""})`}`,`${ritual.secondaryCheck?`<strong>Secondary Checks&nbsp;</strong>${ritual.secondaryCheck.entry?renderer.render(ritual.secondaryCheck.entry):`${ritual.secondaryCheck.skills.map((s=>`{@skill ${s}}`)).joinConjunct(", "," or ")} ${ritual.secondaryCheck.prof?`(${ritual.secondaryCheck.prof})`:""}`}`:""}`].filter(Boolean).join("; ")}\n\t\t</p>\n\t\t${ritual.area||ritual.targets||ritual.range?`<p class="pf2-stat pf2-stat__section">${[`${ritual.range&&ritual.range.entry?`<strong>Range&nbsp;</strong>${renderer.render(ritual.range.entry)}`:""}`,`${ritual.area?`<strong>Area&nbsp;</strong>${renderer.render(ritual.area.entry)}`:""}`,`${ritual.targets?`<strong>Targets&nbsp;</strong>${renderer.render(ritual.targets)}`:""}`].filter(Boolean).join("; ")}</p>`:""}\n\t\t\t${ritual.duration?`<p class="pf2-stat pf2-stat__section"><strong>Duration&nbsp;</strong>${renderer.render(duration)}</p>`:""}\n\t\t${ritual.requirements?`<p class="pf2-stat pf2-stat__section"> <strong>Requirements</strong> ${renderer.render(ritual.requirements)} </p>`:""}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${renderStack.join("")}\n\t\t${ritual.heightened?`${Renderer.utils.getDividerDiv()}${Renderer.spell.getHeightenedEntry(ritual)}`:""}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(ritual)}`)}};Renderer.rule={getRenderedString(rule){return`\n\t\t\t<tr><td colspan="6">\n\t\t\t${Renderer.get().setFirstSection(true).render(rule)}\n\t\t\t</td></tr>\n\t\t`}};Renderer.runeItem={getRuneShortName(rune){if(rune.shortName)return rune.shortName;let name=typeof rune==="string"?rune:rune.name;if(name.startsWith("+"))return name.split(" ")[0];return name},getTag(baseItem,runes){return[baseItem].map((it=>[it.name,it.source])).concat(runes.map((it=>[it.name,it.source]))).flat().join("|")},getHashesFromTag(tag){const split=tag.split("|").map((it=>it.trim())).map((it=>it===""?SRC_CRB:it));if(split.length%2){split.pop()}const out=[];while(split.length){out.push(split.splice(0,2))}return out.map((it=>UrlUtil.encodeForHash(it)))},getRuneItem(baseItem,runes){let runeItem=MiscUtil.copy(baseItem);runeItem.name=[...runes.map((r=>Renderer.runeItem.getRuneShortName(r))),runeItem.name].join(" ");runeItem.type="item";runeItem.level=Math.max(...runes.map((r=>r.level)));runeItem.traits=[...new Set([baseItem.traits||[],...runes.map((it=>it.traits||[]))].flat())].sort(SortUtil.sortTraits);const value=[baseItem,...runes].map((it=>Parser.priceToValue(it.price))).reduce(((a,b)=>a+b),0);runeItem.price={coin:"gp",amount:Math.floor(value/100)};runeItem.entries=[runeItem.entries,...runes.map((r=>r.entries.map(((e,idx)=>idx===0?`{@bold ${r.name}} ${e}`:e))))].flat();runeItem.runeItem=true;delete runeItem.equipment;return runeItem}};Renderer.settlement={getRenderedString(it,opts){const renderer=Renderer.get().setFirstSection(true);const renderStack=[];renderer.recursiveRender(it.entries,renderStack,{pf2StatFix:true});renderStack.push(Renderer.utils.getExcludedDiv(it,"settlement",UrlUtil.PG_PLACES));renderStack.push(Renderer.utils.getNameDiv(it,{page:UrlUtil.PG_PLACES,type:"SETTLEMENT",...opts}));renderStack.push(Renderer.utils.getDividerDiv());renderStack.push(Renderer.utils.getTraitsDiv(it.traits||[]));renderStack.push(Renderer.settlement.getSubHeadTop(it));renderStack.push(Renderer.settlement.getSubHeadBot(it));renderStack.push(Renderer.nation.getResidents(it));renderStack.push(Renderer.utils.getPageP(it));return renderStack.join("")},getSubHeadTop(it){const renderer=Renderer.get();const renderStack=[];if(it.description)renderStack.push(`<p class="pf2-stat pf2-stat__section">${it.description}</p>`);if(it.settlementData.government)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Government&nbsp;</strong>${it.settlementData.government}</p>`);if(it.settlementData.population)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Population&nbsp;</strong>${Renderer.settlement.getPopulation(it.settlementData.population)}</p>`);if(it.settlementData.languages)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Languages&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.settlementData.languages)}</p>`);renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getSubHeadBot(it){const renderer=Renderer.get();const renderStack=[];if(it.settlementData.religions)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Religions&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.settlementData.religions)}</p>`);if(it.settlementData.threats)renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Threats&nbsp;</strong>${renderer.renderJoinCommaOrSemi(it.settlementData.threats)}</p>`);if(it.settlementData.features)renderStack.push(renderer.render(Renderer.nation.getFeatures(it.settlementData)));renderStack.push(Renderer.utils.getDividerDiv());return renderStack.join("")},getPopulation(it){const renderer=Renderer.get();const renderStack=[];const textStack=[];renderStack.push(`${it.total.toLocaleString()}`);if(it.ancestries){renderStack.push(` (`);for(const[key,value]of Object.entries(it.ancestries)){textStack.push(renderer.render(`{@dice ${it.total}*${value/100}|${value}%} ${key}`))}renderStack.push(textStack.join(", "));renderStack.push(`)`)}return renderStack.join("")}};Renderer.skill={getRenderedString(it){const fakeEntry={type:"pf2-h3",name:it.name,entries:it.entries};return`${Renderer.get().setFirstSection(true).render(fakeEntry)}`}};Renderer.spell={getRenderedString(sp,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(false);const entryStack=[];renderer.recursiveRender(sp.entries,entryStack,{pf2StatFix:true});const level=` ${sp.level}`;const type=sp.traits.includes("cantrip")?"CANTRIP":sp.focus?"FOCUS":"SPELL";return`${Renderer.utils.getExcludedDiv(sp,"spell",UrlUtil.PG_SPELLS)}\n\t\t${Renderer.utils.getNameDiv(sp,{page:UrlUtil.PG_SPELLS,type:type,level:level,...opts})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(sp.traits)}\n\t\t${Renderer.spell.getSubHead(sp)}\n\t\t${entryStack.join("")}\n\t\t${sp.heightened?`${Renderer.utils.getDividerDiv()}${Renderer.spell.getHeightenedEntry(sp)}`:""}\n\t\t${sp.amp?`${Renderer.utils.getDividerDiv()}${Renderer.spell.getAmpEntry(sp)}`:""}\n\t\t${opts.noPage?"":Renderer.utils.getPageP(sp)}`},getSubHead(sp){const renderer=Renderer.get();const componentsRender=sp.components&&sp.components.length===1?sp.components[0].map((it=>Parser.COMPONENTS_TO_FULL[it])).join(", "):"";let castPart=``;if(sp.cost!=null)castPart+=`; <strong>Cost&nbsp;</strong>${renderer.render(sp.cost)}`;if(sp.trigger!=null)castPart+=`; <strong>Trigger&nbsp;</strong>${renderer.render(sp.trigger)}`;if(sp.requirements!=null)castPart+=`; <strong>Requirements&nbsp;</strong>${renderer.render(sp.requirements)}`;const targetingParts=[];if(sp.range)targetingParts.push(`<strong>Range&nbsp;</strong>${renderer.render(Parser.rangeToFull(sp.range))}`);if(sp.area!=null)targetingParts.push(`<strong>Area&nbsp;</strong>${renderer.render(sp.area.entry)}`);if(sp.targets!=null)targetingParts.push(`<strong>Targets&nbsp;</strong>${renderer.render(sp.targets)}`);const stDurationParts=[];if(sp.savingThrow!=null&&sp.savingThrow.hidden!==true)stDurationParts.push(`<strong>Saving Throw&nbsp;</strong>${sp.savingThrow.basic?"basic ":""}${sp.savingThrow.type.map((t=>Parser.savingThrowAbvToFull(t))).join(" or ")}`);const duration=Parser.durationToFull(sp.duration);if(sp.duration)stDurationParts.push(`<strong>Duration&nbsp;</strong>${renderer.render(duration)}`);return`${sp.traditions?`<p class="pf2-stat pf2-stat__section"><strong>Traditions </strong>${renderer.render(sp.traditions.map((it=>`{@trait ${it}}`)).join(", ").toLowerCase())}</p>`:""}\n\t\t${sp.domains?`<p class="pf2-stat pf2-stat__section"><strong>Domain${sp.domains.length>1?"s":""}</strong> ${renderer.render(sp.domains.map((it=>`{@filter ${it.toLowerCase()}|deities||domain=${it.replace("(Apocryphal)","")}}`)).join(", "))}`:""}\n\t\t${sp.subclass?Object.keys(sp.subclass).map((k=>`<p class="pf2-stat pf2-stat__section"><strong>${k.split("|")[0]}</strong> ${renderer.render(sp.subclass[k].map((it=>`{@class ${k.split("|")[1]}|${k.split("|")[2]??"CRB"}|${it.split("|")[0].toLowerCase()}|${it}}`)).join(", "))}</p>`)):""}\n\t\t<p class="pf2-stat pf2-stat__section"><strong>Cast </strong>${renderer.render(Parser.timeToFullEntry(sp.cast))} ${!Parser.TIME_ACTIONS.includes(sp.cast.unit)&&componentsRender?`(${componentsRender})`:componentsRender}${castPart}</p>\n\t\t${targetingParts.length?`<p class="pf2-stat pf2-stat__section">${targetingParts.join("; ")}</p>`:""}\n\t\t${stDurationParts.length?`<p class="pf2-stat pf2-stat__section">${stDurationParts.join("; ")}</p>`:""}\n\t\t${Renderer.utils.getDividerDiv()}`},getHeightenedEntry(sp){if(!sp.heightened)return"";const renderer=Renderer.get();const renderStack=[""];const renderArray=a=>{a.forEach(((e,i)=>{if(i===0)renderer.recursiveRender(e,renderStack,{prefix:"<span>",suffix:"</span>"});else renderer.recursiveRender(e,renderStack,{prefix:"<span class='pf2-stat__section'>",suffix:"</span>"})}))};if(sp.heightened?.plusX!=null){Object.entries(sp.heightened.plusX).forEach((([x,entries])=>{renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Heightened (+${x})&nbsp;</strong>`);renderArray(entries);renderStack.push(`</p>`)}))}if(sp.heightened?.X){Object.entries(sp.heightened.X).forEach((([x,entries])=>{renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Heightened (${Parser.getOrdinalForm(x)})&nbsp;</strong>`);renderArray(entries);renderStack.push(`</p>`)}))}return renderStack.join("")},getAmpEntry(sp){if(!sp.amp)return"";const renderer=Renderer.get();const renderStack=[""];const renderArray=a=>{a.forEach(((e,i)=>{if(i===0)renderer.recursiveRender(e,renderStack,{prefix:"<span>",suffix:"</span>"});else renderer.recursiveRender(e,renderStack,{prefix:"<span class='pf2-stat__section'>",suffix:"</span>"})}))};if(sp.amp?.entries){renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Amp&nbsp;</strong>`);renderArray(sp.amp.entries);renderStack.push(`</p>`)}if(sp.amp?.heightened?.plusX){Object.entries(sp.amp.heightened.plusX).forEach((([x,entries])=>{renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Amp Heightened (+${x})&nbsp;</strong>`);renderArray(entries);renderStack.push(`</p>`)}))}if(sp.amp?.heightened?.X){Object.entries(sp.amp.heightened.X).forEach((([x,entries])=>{renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>Amp Heightened (${Parser.getOrdinalForm(x)})&nbsp;</strong>`);renderArray(entries);renderStack.push(`</p>`)}))}return renderStack.join("")},pGetFluff(sp){return Renderer.utils.pGetFluff({entity:sp,fluffBaseUrl:`data/spells/`,fluffProp:"spellFluff"})}};Renderer.table={getRenderedString(it){it.type=it.type||"table";const cpy=MiscUtil.copy(it);delete cpy.name;return`\n\t\t\t${Renderer.utils.getExcludedDiv(it,"table",UrlUtil.PG_TABLES)}\n\t\t\t${Renderer.get().setFirstSection(true).render(it)}\n\t\t`}};Renderer.trait={TRAITS:{},getRenderedString(trait,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderer.setFirstSection(true);renderStack.push(`${Renderer.utils.getExcludedDiv(trait,"trait",UrlUtil.PG_TRAITS)}`);renderStack.push(`\n\t\t\t${Renderer.utils.getNameDiv(trait,{page:UrlUtil.PG_TRAITS,type:"Trait",...opts})}\n\t\t\t${Renderer.utils.getDividerDiv()}\n\t\t`);renderer.recursiveRender(trait.entries,renderStack,{pf2StatFix:true});if(!opts.noPage)renderStack.push(Renderer.utils.getPageP(trait));return renderStack.join("")},async preloadTraits(){let loading={};const cats=new Set([]);const traits=(await Promise.all([DataUtil.loadJSON(`${Renderer.get().baseUrl}data/traits.json`),BrewUtil.pAddBrewData()])).map((it=>it.trait)).filter(Boolean).flat();for(let trait of traits){if(!trait.categories||!trait.categories.length){trait.categories=["General"]}trait.categories.forEach((c=>cats.add(c)));loading[trait.name.toLowerCase()]=trait}loading._categories=Array.from(cats);Renderer.trait.TRAITS=loading},isTraitInCategory(trait,category){const name=Parser.getTraitName(trait).toLowerCase();let lookup;if(Renderer.trait.TRAITS)lookup=Renderer.trait.TRAITS[name];if(lookup)return lookup.categories.includes(category);return category==="General"},getTraitCategories(trait){const lookup=Renderer.trait.TRAITS[trait.toLowerCase()];if(lookup)return lookup.categories||[];return[]},filterTraitsByCats(traits,categories){return traits.filter((t=>Renderer.trait.getTraitCategories(t).some((c=>categories.includes(c)))))}};Renderer.variantrule={getRenderedString(rule){const textStack=[];Renderer.get().setFirstSection(true).resetHeaderIndex().recursiveRender(rule.entries,textStack);return`\n\t\t\t${Renderer.utils.getExcludedDiv(rule,"variantrule",UrlUtil.PG_VARIANTRULES)}\n\t\t\t${textStack.join("")}\n\t\t\t${Renderer.utils.getPageP(rule)}\n\t\t`}};Renderer.vehicle={getRenderedString(it,opts){opts=opts||{};const renderer=Renderer.get();const traits=it.traits||[];return $$`${Renderer.utils.getExcludedDiv(it,"vehicle",UrlUtil.PG_VEHICLES)}
		${Renderer.utils.getNameDiv(it,{type:"Vehicle",...opts})}
		${Renderer.utils.getDividerDiv()}
		${Renderer.utils.getTraitsDiv(traits)}
		${it.price?`<p class="pf2-stat pf2-stat__section"><strong>Price&nbsp;</strong>${Parser.priceToFull(it.price)}</p>`:""}
		${it.price&&it.entries?`${Renderer.utils.getDividerDiv()}`:""}
		${it.entries?`<p class="pf2-stat pf2-stat__section">${renderer.render(it.entries)}</p>`:""}
		${Renderer.utils.getDividerDiv()}
		<p class="pf2-stat pf2-stat__section"><strong>Space&nbsp;</strong>${Object.entries(it.space).map((([k,v])=>`${v.number} ${v.unit} ${v.name?v.name:k}`)).join(", ")}</p>
		<p class="pf2-stat pf2-stat__section"><strong>Crew&nbsp;</strong>${it.crew.map((c=>`${c.number} ${c.entry?c.entry:c.type}`)).join(", ")}${it.passengers?`; <strong>Passengers&nbsp;</strong>${it.passengers}${it.passengersNote?` (${it.passengersNote})`:""}`:""}</p>
		<p class="pf2-stat pf2-stat__section"><strong>Piloting Check&nbsp;</strong>${it.pilotingCheck.length>1?`${it.pilotingCheck.slice(0,-1).map((c=>`${c.entry?`${renderer.render(c.entry)}`:`${c.skill.includes("Lore")?renderer.render(`{@skill Lore||${c.skill}}`):renderer.render(`{@skill ${c.skill}}`)} (DC ${c.dc})`}`)).join(", ")} or ${it.pilotingCheck.map((c=>`${c.entry?`${renderer.render(c.entry)}`:`${c.skill.includes("Lore")?renderer.render(`{@skill Lore||${c.skill}}`):renderer.render(`{@skill ${c.skill}}`)} (DC ${c.dc})`}`)).slice(-1)}`:it.pilotingCheck.map((c=>`${c.entry?`${renderer.render(c.entry)}`:`${c.skill.includes("Lore")?renderer.render(`{@skill Lore||${c.skill}}`):renderer.render(`{@skill ${c.skill}}`)} (DC ${c.dc})`}`))}</p>
		${Renderer.utils.getDividerDiv()}
		${Renderer.vehicle.getDefenses(it,opts)}
		${it.abilities&&it.abilities.mid?it.abilities.mid.map((x=>Renderer.creature.getRenderedAbility(x,{noButton:true}))):""}
		${Renderer.utils.getDividerDiv()}
		<p class="pf2-stat pf2-stat__section"><strong>Speed&nbsp;</strong>${it.speed.map((s=>s.type==="special"?s.entry:`${s.type!=="walk"?`${s.type} `:""}${s.speed?`${s.speed} feet`:""} ${s.traits?`(${renderer.render(s.traits.map((t=>`{@trait ${t.toLowerCase()}}`)).join(", "))})`:""} ${s.note?`(${renderer.render(s.note)})`:""}`)).join(", ")}</p>
		<p class="pf2-stat pf2-stat__section"><strong>Collision&nbsp;</strong>${it.collision.entries?it.collision.entries:`${it.collision.damage?renderer.render(it.collision.damage):""}${it.collision.type?` ${it.collision.type}`:""} ${it.collision.dc?`(DC ${it.collision.dc})`:""}`}</p>
		${it.abilities&&it.abilities.bot?it.abilities.bot.map((x=>Renderer.creature.getRenderedAbility(x,{noButton:true}))):""}
		${it.craftReq||it.special||it.destruction?Renderer.utils.getDividerDiv():""}
		${Renderer.generic.getSpecial(it,{title:"Destruction"})}
		${Renderer.generic.getSpecial(it)}
		${Renderer.utils.getPageP(it)}`},getDefenses(it,opts){const renderer=Renderer.get();const defensesStack=[];if(it.defenses){const def=it.defenses;const sectionAcSt=[];const sectionTwo=[];defensesStack.push(`<p class="pf2-stat pf2-stat__section">`);if(def.ac){sectionAcSt.push(Object.keys(def.ac).map((k=>`<strong>${k==="default"?"":`${k} `}AC&nbsp;</strong>${def.ac[k]}`)).join(", "))}if(def.savingThrows){sectionAcSt.push(Object.keys(def.savingThrows).filter((k=>def.savingThrows[k]!=null)).map((k=>`<strong>${k.uppercaseFirst()}&nbsp;</strong>{@d20 ${def.savingThrows[k]}||${Parser.savingThrowAbvToFull(k)}}`)).join(", "))}defensesStack.push(renderer.render(sectionAcSt.join("; ")));if(sectionAcSt.length)defensesStack.push(`</p><p class="pf2-stat pf2-stat__section">`);if(def.hardness!=null&&def.hp!=null){sectionTwo.push(Object.keys(def.hardness).map((k=>`<strong>${k==="default"?"":`${k} `}Hardness&nbsp;</strong>${def.hardness[k]}${def.hp[k]!=null?`, <strong>${k==="default"?"":`${k} `}HP&nbsp;</strong>${def.hp[k]}${def.bt&&def.bt[k]!=null?` (BT ${def.bt[k]})`:""}${def.notes&&def.notes[k]!=null?` ${renderer.render(def.notes[k])}`:""}`:""}`)).join("; "))}else if(def.hp!=null){sectionTwo.push(Object.keys(def.hp).map((k=>`<strong>${k==="default"?"":`${k} `}HP&nbsp;</strong>${def.hp[k]}${def.bt&&def.bt[k]!=null?`, (BT ${def.bt[k]})`:""}`)).join("; "))}else throw new Error("What? Hardness but no HP?");if(def.immunities)sectionTwo.push(`<strong>Immunities&nbsp;</strong>${def.immunities.join(", ")}`);if(def.weaknesses)sectionTwo.push(`<strong>Weaknesses&nbsp;</strong>${def.weaknesses.map((w=>w.amount?`${w.amount} ${w.name}${w.note?` ${w.note}`:""}`:`${w.name}${w.note?` ${w.note}`:""}`)).join(", ")}`);if(def.resistances)sectionTwo.push(`<strong>Resistances&nbsp;</strong>${def.resistances.map((r=>r.amount?`${r.amount} ${r.name}${r.note?` ${r.note}`:""}`:`${r.name}${r.note?` ${r.note}`:""}`)).join(", ")}`);defensesStack.push(renderer.render(sectionTwo.join("; ")));defensesStack.push(`</p>`)}return defensesStack.join("")}};Renderer.generic={getRenderedString(it){return`\n\t\t${Renderer.utils.getNameDiv(it)}\n\t\t${Renderer.get().setFirstSection(true).render({entries:it.entries})}\n\t\t${Renderer.utils.getPageP(it)}`},dataGetRenderedString(it,options){options=options||{};const traits=it.traits||[];const renderedSections=Renderer.generic.getRenderedSection(it.sections);return`\n\t\t${Renderer.utils.getNameDiv(it,{isEmbedded:options.isEmbedded,activity:`${it.activity?Parser.timeToFullEntry(it.activity):""}`,type:`${it.category?it.category:""} `,level:typeof it.level!=="number"?it.level:undefined})}\n\t\t${Renderer.utils.getDividerDiv()}\n\t\t${Renderer.utils.getTraitsDiv(traits,{doNotTagTraits:it.doNotTagTraits,doNotSortTraits:it.doNotSortTraits})}\n\t\t${Renderer.ability.getSubHead(it)}\n\t\t${renderedSections.join(Renderer.utils.getDividerDiv())}\n\t\t${options.noPage?"":Renderer.utils.getPageP(it)}`},getRenderedSection(sections){const renderer=Renderer.get();return sections.map((section=>section.map((a=>{if(a.some((e=>typeof e!=="string"&&e.type==null))){return`<p class="pf2-stat pf2-stat__section">${a.map((o=>{if(typeof o==="object"&&o.type==null)return`<strong>${o.name} </strong>${renderer.render(o.entry)}`;else return`${renderer.render(o)}`})).map(((rd,ix)=>{if(ix===a.length-1)return rd;return renderer._addTerm(rd)})).join(" ")}</p>`}else return a.map((e=>`<p class="pf2-stat pf2-stat__text">${renderer.render(e)}</p>`)).join("")})).join("")))},getRenderedEntries(it,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];if(it.entries)renderer.recursiveRender(it.entries,renderStack,{pf2StatFix:true});return`${renderStack.join("")}\n\t\t\t${Renderer.generic.getSpecial(it,opts)}\n\t\t\t${Renderer.generic.getAddSections(it,opts)}`},getAddSections(it){if(it.addSections)return Renderer.generic.getRenderedSection(it.addSections).join(Renderer.utils.getDividerDiv());else return""},getSpecial(it,opts){opts=opts||{};opts.title=opts.title??"Special";opts.type=opts.type??opts.title.toLowerCase();const renderer=Renderer.get();if(it[opts.type]!=null){let renderStack=[];renderStack.push(`<p class="pf2-stat pf2-stat__section"><strong>${opts.title}&nbsp;</strong>`);it[opts.type].forEach(((s,index)=>{if(index===0){renderStack.push(renderer.render(s));renderStack.push(`</p>`)}else{renderStack.push(`<p class="pf2-stat__text">`);renderStack.push(renderer.render(s));renderStack.push(`</p>`)}}));return renderStack.join("")}else return""}};Renderer.hover={TAG_TO_PAGE:{spell:UrlUtil.PG_SPELLS,item:UrlUtil.PG_ITEMS,creature:UrlUtil.PG_BESTIARY,condition:UrlUtil.PG_CONDITIONS,disease:UrlUtil.PG_AFFLICTIONS,curse:UrlUtil.PG_AFFLICTIONS,background:UrlUtil.PG_BACKGROUNDS,ancestry:UrlUtil.PG_ANCESTRIES,companion:UrlUtil.PG_COMPANIONS_FAMILIARS,familiar:UrlUtil.PG_COMPANIONS_FAMILIARS,eidolon:UrlUtil.PG_COMPANIONS_FAMILIARS,feat:UrlUtil.PG_FEATS,hazard:UrlUtil.PG_HAZARDS,deity:UrlUtil.PG_DEITIES,organization:UrlUtil.PG_ORGANIZATIONS,creatureTemplate:UrlUtil.PG_CREATURETEMPLATE,variantrule:UrlUtil.PG_VARIANTRULES,optfeature:UrlUtil.PG_OPTIONAL_FEATURES},LinkMeta:function(){this.isHovered=false;this.isLoading=false;this.isPermanent=false;this.windowMeta=null},_BAR_HEIGHT:16,_linkCache:{},_eleCache:new Map,_entryCache:{},_isInit:false,_gmScreen:null,_lastId:0,_contextMenu:null,_contextMenuLastClickedHeader:null,bindGmScreen(screen){this._gmScreen=screen},_getNextId(){return++Renderer.hover._lastId},_doInit(){if(!Renderer.hover._isInit){Renderer.hover._isInit=true;$(document.body).on("click",(()=>Renderer.hover.cleanTempWindows()));Renderer.hover._contextMenu=ContextUtil.getMenu([new ContextUtil.Action("Maximize All",(()=>{const $permWindows=$(`.hoverborder[data-perm="true"]`);$permWindows.attr("data-display-title","false")})),new ContextUtil.Action("Minimize All",(()=>{const $permWindows=$(`.hoverborder[data-perm="true"]`);$permWindows.attr("data-display-title","true")})),null,new ContextUtil.Action("Close Others",(()=>{const $thisHoverClose=$(Renderer.hover._contextMenuLastClickedHeader).closest(`.hoverborder--top`).find(`.hvr__close`);$(`.hvr__close`).not($thisHoverClose).click()})),new ContextUtil.Action("Close All",(()=>$(`.hvr__close`).click()))])}},cleanTempWindows(){for(const[ele,meta]of Renderer.hover._eleCache.entries()){if(!meta.isPermanent&&meta.windowMeta&&!document.body.contains(ele)){meta.windowMeta.doClose()}else if(!meta.isPermanent&&meta.isHovered&&meta.windowMeta){const bounds=ele.getBoundingClientRect();if(EventUtil._mouseX<bounds.x||EventUtil._mouseY<bounds.y||EventUtil._mouseX>bounds.x+bounds.width||EventUtil._mouseY>bounds.y+bounds.height){meta.windowMeta.doClose()}}}},_getSetMeta(ele){if(!Renderer.hover._eleCache.has(ele))Renderer.hover._eleCache.set(ele,new Renderer.hover.LinkMeta);return Renderer.hover._eleCache.get(ele)},_handleGenericMouseOverStart(evt,ele){if(Renderer.hover.isSmallScreen(evt)&&!evt.shiftKey)return;Renderer.hover.cleanTempWindows();const meta=Renderer.hover._getSetMeta(ele);if(meta.isHovered||meta.isLoading)return;ele.style.cursor="wait";meta.isHovered=true;meta.isLoading=true;meta.isPermanent=evt.shiftKey;return meta},async pHandleLinkMouseOver(evt,ele,page,source,hash,preloadId){Renderer.hover._doInit();const meta=Renderer.hover._handleGenericMouseOverStart(evt,ele);if(meta==null)return;if(evt.ctrlKey&&Renderer.hover._pageToFluffFn(page))meta.isFluff=true;let toRender;if(preloadId!=null){const[type,data]=preloadId.split(":");switch(type){case VeCt.HASH_CR_SCALED:{const baseMon=await Renderer.hover.pCacheAndGet(page,source,hash);toRender=await scaleCreature.scale(baseMon,Number(data));break}case VeCt.HASH_ITEM_RUNES:{toRender=Renderer.hover._getFromCache(page,source,hash);if(toRender)break;const[baseItem,...runes]=await Promise.all(data.split(HASH_SUB_LIST_SEP).map((h=>Renderer.hover.pCacheAndGet(page,decodeURIComponent(h.split(HASH_LIST_SEP)[1]),h))));toRender=Renderer.runeItem.getRuneItem(baseItem,runes);Renderer.hover._addToCache(page,source,hash,toRender);break}}}else{if(meta.isFluff){toRender=await Renderer.hover.pCacheAndGet(`fluff__${page}`,source,hash);const entity=await Renderer.hover.pCacheAndGet(page,source,hash);const pFnGetFluff=Renderer.hover._pageToFluffFn(page);toRender=await pFnGetFluff(entity)}else toRender=await Renderer.hover.pCacheAndGet(page,source,hash)}meta.isLoading=false;if(!meta.isHovered&&!meta.isPermanent)return;const $content=meta.isFluff?Renderer.hover.$getHoverContent_fluff(page,toRender):Renderer.hover.$getHoverContent_stats(page,toRender);const sourceData={type:"stats",page:page,source:source,hash:hash};meta.windowMeta=Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:toRender?toRender.name:"",isPermanent:meta.isPermanent,pageUrl:`${Renderer.get().baseUrl}${page}#${hash}`,cbClose:()=>meta.isHovered=meta.isPermanent=meta.isLoading=meta.isFluff=false,sourceData:toRender},sourceData);ele.style.cursor="";if(page===UrlUtil.PG_BESTIARY&&!meta.isFluff){const win=(evt.view||{}).window;const renderFn=Renderer.hover._pageToRenderFn(page);if(win._IS_POPOUT){$content.find(`.mon__btn-scale-lvl`).remove();$content.find(`.mon__btn-reset-lvl`).remove()}else{switch(page){case UrlUtil.PG_BESTIARY:{Renderer.creature.bindScaleLvlButtons($content,toRender,renderFn,page,source,hash,meta,sourceData)}}}}},handleLinkMouseLeave(evt,ele){const meta=Renderer.hover._eleCache.get(ele);ele.style.cursor="";if(!meta||meta.isPermanent)return;if(evt.shiftKey){meta.isPermanent=true;meta.windowMeta.setIsPermanent(true);return}meta.isHovered=false;if(meta.windowMeta){meta.windowMeta.doClose();meta.windowMeta=null}},handleLinkMouseMove(evt,ele){const meta=Renderer.hover._eleCache.get(ele);if(!meta||meta.isPermanent||!meta.windowMeta)return;meta.windowMeta.setPosition(Renderer.hover.getWindowPositionFromEvent(evt));if(evt.shiftKey&&!meta.isPermanent){meta.isPermanent=true;meta.windowMeta.setIsPermanent(true)}},handlePredefinedMouseOver(evt,ele,entryId,opts){opts=opts||{};const meta=Renderer.hover._handleGenericMouseOverStart(evt,ele);if(meta==null)return;Renderer.hover.cleanTempWindows();const toRender=Renderer.hover._entryCache[entryId];meta.isLoading=false;if(!meta.isHovered&&!meta.isPermanent)return;const $content=Renderer.hover.$getHoverContent_generic(toRender,opts);meta.windowMeta=Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:toRender.data&&toRender.data.hoverTitle!=null?toRender.data.hoverTitle:toRender.name,isPermanent:meta.isPermanent,cbClose:()=>meta.isHovered=meta.isPermanent=meta.isLoading=false,sourceData:toRender});ele.style.cursor=""},handlePredefinedMouseLeave(evt,ele){return Renderer.hover.handleLinkMouseLeave(evt,ele)},handlePredefinedMouseMove(evt,ele){return Renderer.hover.handleLinkMouseMove(evt,ele)},getWindowPositionFromEvent(evt){const ele=evt.target;const offset=$(ele).offset();const vpOffsetT=offset.top-$(document).scrollTop();const vpOffsetL=offset.left-$(document).scrollLeft();const fromBottom=vpOffsetT>window.innerHeight/2;const fromRight=vpOffsetL>window.innerWidth/2;return{mode:"autoFromElement",vpOffsetT:vpOffsetT,vpOffsetL:vpOffsetL,fromBottom:fromBottom,fromRight:fromRight,eleHeight:$(ele).height(),eleWidth:$(ele).width(),clientX:EventUtil.getClientX(evt),window:(evt.view||{}).window||window}},getWindowPositionExact(x,y,evt=null){return{window:((evt||{}).view||{}).window||window,mode:"exact",x:x,y:y}},getWindowPositionExactVisibleBottom(x,y,evt=null){return{...Renderer.hover.getWindowPositionExact(x,y,evt),mode:"exactVisibleBottom"}},_WINDOW_METAS:{},MIN_Z_INDEX:200,_MAX_Z_INDEX:300,_DEFAULT_WIDTH_PX:600,_BODY_SCROLLER_WIDTH_PX:15,_getZIndex(){const zIndices=Object.values(Renderer.hover._WINDOW_METAS).map((it=>it.zIndex));if(!zIndices.length)return Renderer.hover.MIN_Z_INDEX;return Math.max(...zIndices)},_getNextZIndex(hoverId){const cur=Renderer.hover._getZIndex();if(hoverId!=null&&Renderer.hover._WINDOW_METAS[hoverId].zIndex===cur)return cur;const out=cur+1;if(out>Renderer.hover._MAX_Z_INDEX){const sortedWindowMetas=Object.entries(Renderer.hover._WINDOW_METAS).sort((([kA,vA],[kB,vB])=>SortUtil.ascSort(vA.zIndex,vB.zIndex)));if(sortedWindowMetas.length>=Renderer.hover._MAX_Z_INDEX-Renderer.hover.MIN_Z_INDEX){sortedWindowMetas.forEach((([k,v])=>{v.setZIndex(Renderer.hover.MIN_Z_INDEX)}))}else{sortedWindowMetas.forEach((([k,v],i)=>{v.setZIndex(Renderer.hover.MIN_Z_INDEX+i)}))}return Renderer.hover._getNextZIndex(hoverId)}else return out},getShowWindow($content,position,opts,sourceData){opts=opts||{};Renderer.hover._doInit();const initialWidth=opts.width==null?Renderer.hover._DEFAULT_WIDTH_PX:opts.width;const initialZIndex=Renderer.hover._getNextZIndex();const $body=$(position.window.document.body);const $hov=$(`<div class="hwin"></div>`).css({right:-initialWidth,width:initialWidth,zIndex:initialZIndex});const $wrpContent=$(`<div class="hwin__wrp-table"></div>`);if(opts.height!=null)$wrpContent.css("height",opts.height);const $hovTitle=$(`<span class="window-title">${opts.title||""}</span>`);const out={};const hoverId=Renderer.hover._getNextId();Renderer.hover._WINDOW_METAS[hoverId]=out;const mouseUpId=`mouseup.${hoverId} touchend.${hoverId}`;const mouseMoveId=`mousemove.${hoverId} touchmove.${hoverId}`;const resizeId=`resize.${hoverId}`;const doClose=()=>{$hov.remove();$(position.window.document).off(mouseUpId);$(position.window.document).off(mouseMoveId);$(position.window).off(resizeId);delete Renderer.hover._WINDOW_METAS[hoverId];if(opts.cbClose)opts.cbClose(out)};let drag={};function handleDragMousedown(evt,type){if(evt.which===0||evt.which===1)evt.preventDefault();out.zIndex=Renderer.hover._getNextZIndex(hoverId);$hov.css({"z-index":out.zIndex,animation:"initial"});drag.type=type;drag.startX=EventUtil.getClientX(evt);drag.startY=EventUtil.getClientY(evt);drag.baseTop=parseFloat($hov.css("top"));drag.baseLeft=parseFloat($hov.css("left"));drag.baseHeight=$wrpContent.height();drag.baseWidth=parseFloat($hov.css("width"));if(type<9){$wrpContent.css({height:drag.baseHeight,"max-height":"initial"});$hov.css("max-width","initial")}}const $brdrTopRightResize=$(`<div class="hoverborder__resize-ne"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,1)));const $brdrRightResize=$(`<div class="hoverborder__resize-e"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,2)));const $brdrBottomRightResize=$(`<div class="hoverborder__resize-se"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,3)));const $brdrBtm=$(`<div class="hoverborder hoverborder--btm ${opts.isBookContent?"hoverborder-book":""}"><div class="hoverborder__resize-s"></div></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,4)));const $brdrBtmLeftResize=$(`<div class="hoverborder__resize-sw"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,5)));const $brdrLeftResize=$(`<div class="hoverborder__resize-w"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,6)));const $brdrTopLeftResize=$(`<div class="hoverborder__resize-nw"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,7)));const $brdrTopResize=$(`<div class="hoverborder__resize-n"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,8)));const $brdrTop=$(`<div class="hoverborder hoverborder--top ${opts.isBookContent?"hoverborder-book":""}" ${opts.isPermanent?`data-perm="true"`:""}></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,9))).on("contextmenu",(evt=>{Renderer.hover._contextMenuLastClickedHeader=$brdrTop[0];ContextUtil.pOpenMenu(evt,Renderer.hover._contextMenu)}));function isOverHoverTarget(evt,target){return EventUtil.getClientX(evt)>=target.left&&EventUtil.getClientX(evt)<=target.left+target.width&&EventUtil.getClientY(evt)>=target.top&&EventUtil.getClientY(evt)<=target.top+target.height}function handleNorthDrag(evt){const diffY=Math.max(drag.startY-EventUtil.getClientY(evt),80-drag.baseHeight);$wrpContent.css("height",drag.baseHeight+diffY);$hov.css("top",drag.baseTop-diffY);drag.startY=EventUtil.getClientY(evt);drag.baseHeight=$wrpContent.height();drag.baseTop=parseFloat($hov.css("top"))}function handleEastDrag(evt){const diffX=drag.startX-EventUtil.getClientX(evt);$hov.css("width",drag.baseWidth-diffX);drag.startX=EventUtil.getClientX(evt);drag.baseWidth=parseFloat($hov.css("width"))}function handleSouthDrag(evt){const diffY=drag.startY-EventUtil.getClientY(evt);$wrpContent.css("height",drag.baseHeight-diffY);drag.startY=EventUtil.getClientY(evt);drag.baseHeight=$wrpContent.height()}function handleWestDrag(evt){const diffX=Math.max(drag.startX-EventUtil.getClientX(evt),150-drag.baseWidth);$hov.css("width",drag.baseWidth+diffX).css("left",drag.baseLeft-diffX);drag.startX=EventUtil.getClientX(evt);drag.baseWidth=parseFloat($hov.css("width"));drag.baseLeft=parseFloat($hov.css("left"))}$(position.window.document).on(mouseUpId,(evt=>{if(drag.type){if(drag.type<9){$wrpContent.css("max-height","");$hov.css("max-width","")}adjustPosition();if(drag.type===9){if(evt.target.classList.contains("hvr__close")||evt.target.classList.contains("hvr__popout")){evt.preventDefault();drag.type=0;$(evt.target).click();return}if(this._gmScreen&&sourceData){const panel=this._gmScreen.getPanelPx(EventUtil.getClientX(evt),EventUtil.getClientY(evt));if(!panel)return;this._gmScreen.setHoveringPanel(panel);const target=panel.getAddButtonPos();if(isOverHoverTarget(evt,target)){switch(sourceData.type){case"stats":{panel.doPopulate_Stats(sourceData.page,sourceData.source,sourceData.hash);break}case"statsCreatureScaled":{panel.doPopulate_StatsScaledLvl(sourceData.page,sourceData.source,sourceData.hash,sourceData.level);break}}doClose()}this._gmScreen.resetHoveringButton()}}drag.type=0}})).on(mouseMoveId,(evt=>{switch(drag.type){case 1:handleNorthDrag(evt);handleEastDrag(evt);break;case 2:handleEastDrag(evt);break;case 3:handleSouthDrag(evt);handleEastDrag(evt);break;case 4:handleSouthDrag(evt);break;case 5:handleSouthDrag(evt);handleWestDrag(evt);break;case 6:handleWestDrag(evt);break;case 7:handleNorthDrag(evt);handleWestDrag(evt);break;case 8:handleNorthDrag(evt);break;case 9:{const diffX=drag.startX-EventUtil.getClientX(evt);const diffY=drag.startY-EventUtil.getClientY(evt);$hov.css("left",drag.baseLeft-diffX).css("top",drag.baseTop-diffY);drag.startX=EventUtil.getClientX(evt);drag.startY=EventUtil.getClientY(evt);drag.baseTop=parseFloat($hov.css("top"));drag.baseLeft=parseFloat($hov.css("left"));if(this._gmScreen){const panel=this._gmScreen.getPanelPx(EventUtil.getClientX(evt),EventUtil.getClientY(evt));if(!panel)return;this._gmScreen.setHoveringPanel(panel);const target=panel.getAddButtonPos();if(isOverHoverTarget(evt,target))this._gmScreen.setHoveringButton(panel);else this._gmScreen.resetHoveringButton()}break}}}));$(position.window).on(resizeId,(()=>adjustPosition(true)));const doToggleMinimizedMaximized=()=>{const curState=$brdrTop.attr("data-display-title");const isNextMinified=curState==="false";$brdrTop.attr("data-display-title",isNextMinified);$brdrTop.attr("data-perm",true);$hov.toggleClass("hwin--minified",isNextMinified)};const doMaximize=()=>{$brdrTop.attr("data-display-title",false);$hov.toggleClass("hwin--minified",false)};$brdrTop.attr("data-display-title",false);$brdrTop.on("dblclick",(()=>doToggleMinimizedMaximized()));$brdrTop.append($hovTitle);const $brdTopRhs=$(`<div class="flex" style="margin-left: auto;"></div>`).appendTo($brdrTop);if(opts.pageUrl&&!position.window._IS_POPOUT&&!Renderer.get().isInternalLinksDisabled()){const $btnGotoPage=$(`<a class="top-border-icon glyphicon glyphicon-modal-window" style="margin-right: 2px;" title="Go to Page" href="${opts.pageUrl}"></a>`).appendTo($brdTopRhs)}if(!position.window._IS_POPOUT){const $btnPopout=$(`<span class="top-border-icon glyphicon glyphicon-new-window hvr__popout" style="margin-right: 2px;" title="Open as Popup Window"></span>`).on("click",(async evt=>{evt.stopPropagation();const dimensions=opts.fnGetPopoutSize?opts.fnGetPopoutSize():{width:600,height:$content.height()};const win=open("",opts.title||"",`width=${dimensions.width},height=${dimensions.height}location=0,menubar=0,status=0,titlebar=0,toolbar=0`);win._IS_POPOUT=true;win.document.write(`\n\t\t\t\t\t\t<!DOCTYPE html>\n\t\t\t\t\t\t<html lang="en" class="${typeof styleSwitcher!=="undefined"&&styleSwitcher.getActiveDayNight()===StyleSwitcher.STYLE_NIGHT?StyleSwitcher.NIGHT_CLASS:""}"><head>\n\t\t\t\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1">\n\t\t\t\t\t\t\t<title>${opts.title}</title>\n\t\t\t\t\t\t\t${$(`link[rel="stylesheet"][href]`).map(((i,e)=>e.outerHTML)).get().join("\n")}\n\t\t\t\t\t\t\t\x3c!-- Favicons --\x3e\n\t\t\t\t\t\t\t<link rel="icon" type="image/svg+xml" href="favicon.svg">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="256x256" href="favicon-256x256.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="144x144" href="favicon-144x144.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="128x128" href="favicon-128x128.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="64x64" href="favicon-64x64.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="48x48" href="favicon-48x48.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="32x32" href="favicon-32x32.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="16x16" href="favicon-16x16.png">\n\n\t\t\t\t\t\t\t\x3c!-- Chrome Web App Icons --\x3e\n\t\t\t\t\t\t\t<link rel="manifest" href="manifest.webmanifest">\n\t\t\t\t\t\t\t<meta name="application-name" content="Pf2eTools">\n\t\t\t\t\t\t\t<meta name="theme-color" content="#006bc4">\n\n\t\t\t\t\t\t\t\x3c!-- Windows Start Menu tiles --\x3e\n\t\t\t\t\t\t\t<meta name="msapplication-config" content="browserconfig.xml"/>\n\t\t\t\t\t\t\t<meta name="msapplication-TileColor" content="#006bc4">\n\n\t\t\t\t\t\t\t\x3c!-- Apple Touch Icons --\x3e\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="180x180" href="apple-touch-icon-180x180.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="360x360" href="apple-touch-icon-360x360.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="167x167" href="apple-touch-icon-167x167.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="152x152" href="apple-touch-icon-152x152.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-120x120.png">\n\t\t\t\t\t\t\t<meta name="apple-mobile-web-app-title" content="Pf2eTools">\n\n\t\t\t\t\t\t\t\x3c!-- macOS Safari Pinned Tab and Touch Bar --\x3e\n\t\t\t\t\t\t\t<link rel="mask-icon" href="safari-pinned-tab.svg" color="#006bc4">\n\n\t\t\t\t\t\t\t<style>\n\t\t\t\t\t\t\t\thtml, body { width: 100%; height: 100%; }\n\t\t\t\t\t\t\t\tbody { overflow: hidden; }\n\t\t\t\t\t\t\t\t.hwin--popout { max-width: 100%; max-height: 100%; box-shadow: initial; width: 100%; overflow-y: auto; }\n\t\t\t\t\t\t\t</style>\n\t\t\t\t\t\t</head><body class="rd__body-popout">\n\t\t\t\t\t\t<div class="hwin hoverbox--popout hwin--popout"></div>\n\t\t\t\t\t\t<script src="js/parser.js"><\/script>\n\t\t\t\t\t\t<script src="js/utils.js"><\/script>\n\t\t\t\t\t\t<script src="lib/jquery.js"><\/script>\n\t\t\t\t\t\t</body></html>\n\t\t\t\t\t`);let $cpyContent;if(opts.$pFnGetPopoutContent){$cpyContent=await opts.$pFnGetPopoutContent()}else{$cpyContent=$content.clone(true,true);$cpyContent.find(`.mon__btn-scale-lvl`).remove();$cpyContent.find(`.mon__btn-scale-lvl`).remove()}let ticks=50;while(!win.document.body&&ticks-- >0)await MiscUtil.pDelay(5);$cpyContent.appendTo($(win.document).find(`.hoverbox--popout`));win.Renderer=Renderer;doClose()})).appendTo($brdTopRhs)}if(opts.sourceData){const btnPopout=e_({tag:"span",clazz:`hwin__top-border-icon hwin__top-border-icon--text`,title:"Show Source Data",text:"{}",click:evt=>{evt.stopPropagation();evt.preventDefault();const $content=Renderer.hover.$getHoverContent_statsCode(opts.sourceData);Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:[opts.sourceData._displayName||opts.sourceData.name,"Source Data"].filter(Boolean).join(" — "),isPermanent:true,isBookContent:true})}});$brdTopRhs.append(btnPopout)}const $btnClose=$(`<span class="delete-icon glyphicon glyphicon-remove hvr__close" title="Close"></span>`).on("click",(evt=>{evt.stopPropagation();doClose()})).appendTo($brdTopRhs);$wrpContent.append($content);$hov.append($brdrTopResize).append($brdrTopRightResize).append($brdrRightResize).append($brdrBottomRightResize).append($brdrBtmLeftResize).append($brdrLeftResize).append($brdrTopLeftResize).append($brdrTop).append($wrpContent).append($brdrBtm);$body.append($hov);const setPosition=pos=>{switch(pos.mode){case"autoFromElement":{if(pos.fromBottom)$hov.css("top",pos.vpOffsetT-($hov.height()+10));else $hov.css("top",pos.vpOffsetT+pos.eleHeight+10);if(pos.fromRight)$hov.css("left",(pos.clientX||pos.vpOffsetL)-(parseFloat($hov.css("width"))+10));else $hov.css("left",(pos.clientX||pos.vpOffsetL+pos.eleWidth)+10);break}case"exact":{$hov.css({left:pos.x,top:pos.y});break}case"exactVisibleBottom":{$hov.css({left:pos.x,top:pos.y,animation:"initial"});let yPos=pos.y;const{bottom:posBottom,height:winHeight}=$hov[0].getBoundingClientRect();const height=position.window.innerHeight;if(posBottom>height){yPos=position.window.innerHeight-winHeight;$hov.css({top:yPos,animation:""})}break}default:throw new Error(`Positiong mode unimplemented: "${pos.mode}"`)}adjustPosition(true)};setPosition(position);function adjustPosition(){const eleHov=$hov[0];const hvTop=parseFloat(eleHov.style.top);const hvLeft=parseFloat(eleHov.style.left);const hvWidth=parseFloat(eleHov.style.width);const screenHeight=position.window.innerHeight;const screenWidth=position.window.innerWidth;if(hvTop<0)eleHov.style.top=`0px`;else if(hvTop>=screenHeight-Renderer.hover._BAR_HEIGHT){$hov.css("top",screenHeight-Renderer.hover._BAR_HEIGHT)}if(hvLeft<0)$hov.css("left",0);else if(hvLeft+hvWidth+Renderer.hover._BODY_SCROLLER_WIDTH_PX>screenWidth){$hov.css("left",Math.max(screenWidth-hvWidth-Renderer.hover._BODY_SCROLLER_WIDTH_PX,0))}}const setIsPermanent=isPermanent=>{opts.isPermanent=isPermanent;$brdrTop.attr("data-perm",isPermanent)};const setZIndex=zIndex=>{$hov.css("z-index",zIndex);out.zIndex=zIndex};const doZIndexToFront=()=>{const nxtZIndex=Renderer.hover._getNextZIndex(hoverId);setZIndex(nxtZIndex)};out.$windowTitle=$hovTitle;out.zIndex=initialZIndex;out.setZIndex=setZIndex;out.setPosition=setPosition;out.setIsPermanent=setIsPermanent;out.doClose=doClose;out.doMaximize=doMaximize;out.doZIndexToFront=doZIndexToFront;return out},getMakePredefinedHover(entry,opts){opts=opts||{};const id=Renderer.hover._getNextId();Renderer.hover._entryCache[id]=entry;return{id:id,html:`onmouseover="Renderer.hover.handlePredefinedMouseOver(event, this, ${id}, ${JSON.stringify(opts).escapeQuotes()})" onmousemove="Renderer.hover.handlePredefinedMouseMove(event, this)" onmouseleave="Renderer.hover.handlePredefinedMouseLeave(event, this)" ${Renderer.hover.getPreventTouchString()}`,mouseOver:(evt,ele)=>Renderer.hover.handlePredefinedMouseOver(evt,ele,id,opts),mouseMove:(evt,ele)=>Renderer.hover.handlePredefinedMouseMove(evt,ele),mouseLeave:(evt,ele)=>Renderer.hover.handlePredefinedMouseLeave(evt,ele),touchStart:(evt,ele)=>Renderer.hover.handleTouchStart(evt,ele)}},updatePredefinedHover(id,entry){Renderer.hover._entryCache[id]=entry},getPreventTouchString(){return`ontouchstart="Renderer.hover.handleTouchStart(event, this)"`},handleTouchStart(evt,ele){if(!Renderer.hover.isSmallScreen(evt)){$(ele).data("href",$(ele).data("href")||$(ele).attr("href"));$(ele).attr("href","javascript:void(0)");setTimeout((()=>{const data=$(ele).data("href");if(data){$(ele).attr("href",data);$(ele).data("href",null)}}),100)}},addEmbeddedToCache(page,source,hash,entity){Renderer.hover._addToCache(page,source,hash,entity)},_addToCache:(page,source,hash,entity)=>{page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();((Renderer.hover._linkCache[page]=Renderer.hover._linkCache[page]||{})[source]=Renderer.hover._linkCache[page][source]||{})[hash]=entity},_getFromCache:(page,source,hash,opts)=>{opts=opts||{};page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();const out=MiscUtil.get(Renderer.hover._linkCache,page,source,hash);if(opts.isCopy&&out!=null)return MiscUtil.copy(out);return out},_isCached:(page,source,hash)=>Renderer.hover._linkCache[page]&&Renderer.hover._linkCache[page][source]&&Renderer.hover._linkCache[page][source][hash],_psCacheLoading:{},_flagsCacheLoaded:{},_locks:{},_flags:{},async pCacheAndGetHash(page,hash,opts){const source=decodeURIComponent(hash.split(HASH_LIST_SEP).last());return Renderer.hover.pCacheAndGet(page,source,hash,opts)},async pCacheAndGet(page,source,hash,opts){opts=opts||{};page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();const existingOut=Renderer.hover._getFromCache(page,source,hash,opts);if(existingOut)return existingOut;switch(page){case"generic":case"hover":return null;case UrlUtil.PG_CLASSES:return Renderer.hover._pCacheAndGet_pLoadClasses(page,source,hash,opts);case UrlUtil.PG_SPELLS:return Renderer.hover._pCacheAndGet_pLoadWithIndex(page,source,hash,opts,`data/spells/`,"spell");case UrlUtil.PG_RITUALS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"rituals.json","ritual");case UrlUtil.PG_BESTIARY:return Renderer.hover._pCacheAndGet_pLoadWithIndex(page,source,hash,opts,`data/bestiary/`,"creature");case UrlUtil.PG_ITEMS:{const loadKey=UrlUtil.PG_ITEMS;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const allItems=await Renderer.item.pBuildList({isAddGroups:true,isBlacklistVariants:true});const brewData=await BrewUtil.pAddBrewData();const itemList=await Renderer.item.getItemsFromHomebrew(brewData);itemList.forEach((it=>{const itHash=UrlUtil.URL_TO_HASH_BUILDER[page](it);Renderer.hover._addToCache(page,it.source,itHash,it)}));allItems.forEach((item=>{const itemHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ITEMS](item);Renderer.hover._addToCache(page,item.source,itemHash,item)}))}));return Renderer.hover._getFromCache(page,source,hash,opts)}case UrlUtil.PG_VEHICLES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"vehicles.json",["vehicle"]);case UrlUtil.PG_BACKGROUNDS:return Renderer.hover._pCacheAndGet_pLoadWithIndex(page,source,hash,opts,"data/backgrounds/","background");case UrlUtil.PG_ARCHETYPES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"archetypes.json",["archetype"]);case UrlUtil.PG_FEATS:return Renderer.hover._pCacheAndGet_pLoadWithIndex(page,source,hash,opts,"data/feats/","feat");case UrlUtil.PG_COMPANIONS_FAMILIARS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"companionsfamiliars.json",["companion","companionAbility","familiar","familiarAbility","eidolon"]);case UrlUtil.PG_ANCESTRIES:return Renderer.hover._pCacheAndGet_pLoadAncestries(page,source,hash,opts);case UrlUtil.PG_DEITIES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"deities.json","deity",null,"deity");case UrlUtil.PG_ORGANIZATIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"organizations.json","organization");case UrlUtil.PG_CREATURETEMPLATE:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"creaturetemplates.json","creatureTemplate");case UrlUtil.PG_HAZARDS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"hazards.json",["hazard"]);case UrlUtil.PG_VARIANTRULES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"variantrules.json","variantrule");case UrlUtil.PG_CONDITIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"conditions.json",["condition"],((listProp,item)=>item.__prop=listProp));case UrlUtil.PG_AFFLICTIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"afflictions.json",["disease","curse"],((listProp,item)=>item.__prop=listProp));case UrlUtil.PG_TABLES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"tables.json",["table","tableGroup"],((listProp,item)=>item.__prop=listProp));case UrlUtil.PG_ACTIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"actions.json","action");case UrlUtil.PG_OPTIONAL_FEATURES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"optionalfeatures.json","optionalfeature");case UrlUtil.PG_ABILITIES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"abilities.json","ability");case UrlUtil.PG_LANGUAGES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"languages.json","language");case UrlUtil.PG_TRAITS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,"TRT",hash,{sourceOverride:"TRT",...opts},"traits.json","trait");case UrlUtil.PG_PLACES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"places.json","place");case UrlUtil.PG_EVENTS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"events.json","event");case UrlUtil.PG_RELICGIFTS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"relicgifts.json","relicGift");case UrlUtil.PG_QUICKREF:{const loadKey=UrlUtil.PG_QUICKREF;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const json=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/generated/bookref-quick.json`);json.data["bookref-quick"].forEach(((chapter,ixChapter)=>{const metas=IndexableFileQuickReference.getChapterNameMetas(chapter);metas.forEach((nameMeta=>{const hashParts=["bookref-quick",ixChapter,UrlUtil.encodeForHash(nameMeta.name.toLowerCase())];if(nameMeta.ixBook)hashParts.push(nameMeta.ixBook);else hashParts.push(0);const hash=hashParts.join(HASH_PART_SEP);Renderer.hover._addToCache(page,nameMeta.source,hash,nameMeta.entry)}))}))}));return Renderer.hover._getFromCache(page,source,hash,opts)}case UrlUtil.PG_ADVENTURE:{const loadKey=`${page}${source}`;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brew=await BrewUtil.pAddBrewData();const brewDataIds=(brew.adventureData||[]).filter((it=>it.id)).map((it=>it.id));const brewContentsIds=new Set(...(brew.adventure||[]).filter((it=>it.id)).map((it=>it.id)));const matchingBrewIds=brewDataIds.filter((id=>brewContentsIds.has(id)));matchingBrewIds.forEach((id=>{const brewData=(brew.adventureData||[]).find((it=>it.id===id));const brewContents=(brew.adventure||[]).find((it=>it.id===id));const pack={adventure:brewContents,adventureData:brewData};const hash=UrlUtil.URL_TO_HASH_BUILDER[page](brewContents);Renderer.hover._addToCache(page,brewContents.source,hash,pack)}));const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/adventures.json`);const fromIndex=index.adventure.find((it=>UrlUtil.URL_TO_HASH_BUILDER[page](it)===hash));if(!fromIndex)return Renderer.hover._getFromCache(page,source,hash,opts);const json=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/adventure/adventure-${hash}.json`);const pack={adventure:fromIndex,adventureData:json};Renderer.hover._addToCache(page,fromIndex.source,hash,pack)}));return Renderer.hover._getFromCache(page,source,hash,opts)}case`fluff__${UrlUtil.PG_BESTIARY}`:return Renderer.hover._pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,`data/bestiary/`,"creatureFluff");case`fluff__${UrlUtil.PG_SPELLS}`:return Renderer.hover._pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,`data/spells/`,"spellFluff");case`fluff__${UrlUtil.PG_BACKGROUNDS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"data/backgrounds/fluff-backgrounds.json","backgroundFluff");case`fluff__${UrlUtil.PG_ITEMS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-conditions.json",["conditionFluff","diseaseFluff"]);case`fluff__${UrlUtil.PG_ORGANIZATIONS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-organizations.json","organizationFluff");case`fluff__${UrlUtil.PG_CREATURETEMPLATE}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-creaturetemplates.json","creatureTemplateFluff");case"classfeature":return Renderer.hover._pCacheAndGet_pLoadClassFeatures(page,source,hash,opts);case"subclassfeature":return Renderer.hover._pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts);case"domain":return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"domains.json",["domain"]);case"group":return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"groups.json",["group"]);case"skill":return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"skills.json",["skill"]);case"raw_classfeature":return Renderer.hover._pCacheAndGet_pLoadClassFeatures(page,source,hash,opts);case"raw_subclassfeature":return Renderer.hover._pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts);default:throw new Error(`No load function defined for page ${page}`)}},async _pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,pFnLoad){if(Renderer.hover._psCacheLoading[loadKey])await Renderer.hover._psCacheLoading[loadKey];if(!Renderer.hover._flagsCacheLoaded[loadKey]||!Renderer.hover._isCached(page,source,hash)){Renderer.hover._psCacheLoading[loadKey]=(async()=>{await pFnLoad();Renderer.hover._flagsCacheLoaded[loadKey]=true})();await Renderer.hover._psCacheLoading[loadKey]}},_pCacheAndGet_populate(page,data,listProp,opts){opts=opts||{};data[listProp].forEach((it=>{const itHash=(opts.fnGetHash||UrlUtil.URL_TO_HASH_BUILDER[page])(it);it.__prop=listProp;if(opts.fnMutateItem)opts.fnMutateItem(listProp,it);const source=opts.sourceOverride||it.source;Renderer.hover._addToCache(page,source,itHash,it)}))},async _pCacheAndGet_pLoadWithIndex(page,source,hash,opts,baseUrl,listProp,fnPrePopulate=null){const loadKey=`${page}${source}`;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();if(fnPrePopulate)fnPrePopulate(brewData,{isBrew:true});if(brewData[listProp])Renderer.hover._pCacheAndGet_populate(page,brewData,listProp,{fnGetHash:opts.fnGetHash});const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${baseUrl}${opts.isFluff?"fluff-":""}index.json`);const officialSources={};Object.entries(index).forEach((([k,v])=>officialSources[k.toLowerCase()]=v));const officialSource=officialSources[source.toLowerCase()];if(officialSource){const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${baseUrl}${officialSource}`);if(fnPrePopulate)fnPrePopulate(data,{isBrew:false});Renderer.hover._pCacheAndGet_populate(page,data,listProp,{fnGetHash:opts.fnGetHash})}}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,baseUrl,listProp,fnPrePopulate=null){const nxtOpts=MiscUtil.copy(opts);nxtOpts.isFluff=true;nxtOpts.fnGetHash=it=>UrlUtil.encodeForHash([it.name,it.source]);return Renderer.hover._pCacheAndGet_pLoadWithIndex(page,source,hash,nxtOpts,baseUrl,listProp)},async _pCacheAndGet_pLoadSingleBrew(page,opts,listProps,fnMutateItem){const brewData=await BrewUtil.pAddBrewData();listProps=listProps instanceof Array?listProps:[listProps];listProps.forEach((lp=>{if(brewData[lp]){Renderer.hover._pCacheAndGet_populate(page,brewData,lp,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash})}}))},_pCacheAndGet_handleSingleData(page,opts,data,listProps,fnMutateItem){if(listProps instanceof Array){listProps.forEach((prop=>data[prop]&&Renderer.hover._pCacheAndGet_populate(page,data,prop,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash,sourceOverride:opts.sourceOverride})))}else Renderer.hover._pCacheAndGet_populate(page,data,listProps,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash,sourceOverride:opts.sourceOverride})},async _pCacheAndGet_pLoadSimple(page,source,hash,opts,jsonFile,listProps,fnMutateItem){const loadKey=jsonFile;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{await Renderer.hover._pCacheAndGet_pLoadSingleBrew(page,opts,listProps,fnMutateItem);const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/${jsonFile}`);Renderer.hover._pCacheAndGet_handleSingleData(page,opts,data,listProps,fnMutateItem)}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,jsonFile,listProps,fnMutateItem){const nxtOpts=MiscUtil.copy(opts);nxtOpts.isFluff=true;nxtOpts.fnGetHash=it=>UrlUtil.encodeForHash([it.name,it.source]);return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,nxtOpts,jsonFile,listProps,fnMutateItem)},async _pCacheAndGet_pLoadCustom(page,source,hash,opts,jsonFile,listProps,itemModifier,loader){const loadKey=jsonFile;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{await Renderer.hover._pCacheAndGet_pLoadSingleBrew(page,opts,listProps,itemModifier);const data=await DataUtil[loader].loadJSON();Renderer.hover._pCacheAndGet_handleSingleData(page,opts,data,listProps,itemModifier)}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadAncestries(page,source,hash,opts){const loadKey=UrlUtil.PG_ANCESTRIES;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const addToIndex=anc=>{anc=MiscUtil.copy(anc);anc.__prop="ancestry";const ancHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ANCESTRIES](anc);Renderer.hover._addToCache(UrlUtil.PG_ANCESTRIES,anc.source||SRC_CRB,ancHash,anc);(anc.heritage||[]).forEach((h=>{h=MiscUtil.copy(h);h.__prop="heritage";const hHash=`${ancHash}${HASH_PART_SEP}${UrlUtil.getAncestriesPageStatePart({heritage:h})}`;Renderer.hover._addToCache(UrlUtil.PG_ANCESTRIES,anc.source||h.source||SRC_CRB,hHash,h);Renderer.hover._addToCache(UrlUtil.PG_ANCESTRIES,h.source||SRC_CRB,hHash,h)}))};const addHeritageToIndex=(h,prop)=>{h=MiscUtil.copy(h);h.__prop=prop;const anc=ancestryData.ancestry.find((it=>it.name===h.ancestryName&&it.source===(h.ancestrySource||SRC_CRB)));let ancHash=HASH_BLANK;if(anc)ancHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ANCESTRIES](anc);const hHash=`${ancHash}${HASH_PART_SEP}${UrlUtil.getAncestriesPageStatePart({heritage:h})}`;if(anc)Renderer.hover._addToCache(UrlUtil.PG_ANCESTRIES,anc.source||h.source||SRC_CRB,hHash,h);Renderer.hover._addToCache(UrlUtil.PG_ANCESTRIES,h.source||SRC_CRB,hHash,h)};const ancestryData=await DataUtil.ancestry.loadJSON();const brewData=await BrewUtil.pAddBrewData();(brewData.ancestry||[]).forEach((a=>addToIndex(a)));for(const h of brewData.heritage||[])addHeritageToIndex(h,"heritage");for(const vh of brewData.versatileHeritage||[])addHeritageToIndex(vh,"versatileHeritage");ancestryData.ancestry.forEach((a=>addToIndex(a)));ancestryData.versatileHeritage.forEach((vh=>addHeritageToIndex(vh,"versatileHeritage")))}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadClasses(page,source,hash,opts){const loadKey=UrlUtil.PG_CLASSES;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const pAddToIndex=async cls=>{const clsHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls);cls=await DataUtil.class.pGetDereferencedClassData(cls);const clsEntries={name:cls.name,type:"section",entries:MiscUtil.copy((cls.classFeatures||[]).flat())};Renderer.hover._addToCache(UrlUtil.PG_CLASSES,cls.source||SRC_CRB,clsHash,clsEntries);await Promise.all((cls.subclasses||[]).map((async sc=>{sc=await DataUtil.class.pGetDereferencedSubclassData(sc);const scHash=`${clsHash}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc})}`;const scEntries={type:"section",entries:MiscUtil.copy((sc.subclassFeatures||[]).flat())};Renderer.hover._addToCache(UrlUtil.PG_CLASSES,cls.source||sc.source||SRC_CRB,scHash,scEntries);Renderer.hover._addToCache(UrlUtil.PG_CLASSES,sc.source||SRC_CRB,scHash,scEntries)})));UrlUtil.class.getIndexedEntries(cls).forEach((it=>Renderer.hover._addToCache(UrlUtil.PG_CLASSES,it.source,it.hash,it.entry)))};const pAddSubclassToIndex=async sc=>{const cls=classData.class.find((it=>it.name===sc.className&&it.source===(sc.classSource||SRC_CRB)));if(!cls)return;const clsHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls);sc=await DataUtil.class.pGetDereferencedSubclassData(sc);const scHash=`${clsHash}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc})}`;const scEntries={type:"section",entries:MiscUtil.copy((sc.subclassFeatures||[]).flat())};Renderer.hover._addToCache(UrlUtil.PG_CLASSES,cls.source||sc.source||SRC_CRB,scHash,scEntries);Renderer.hover._addToCache(UrlUtil.PG_CLASSES,sc.source||SRC_CRB,scHash,scEntries);const cpyClass=MiscUtil.copy(cls);cpyClass.classFeatures=(cpyClass.classFeatures||[]).map((lvlFeatureList=>lvlFeatureList.filter((feature=>feature.gainSubclassFeature))));cpyClass.subclasses=[sc];UrlUtil.class.getIndexedEntries(cpyClass).forEach((it=>Renderer.hover._addToCache(UrlUtil.PG_CLASSES,it.source,it.hash,it.entry)))};const classData=await DataUtil.class.loadJSON();const brewData=await BrewUtil.pAddBrewData();await Promise.all((brewData.class||[]).map((cc=>pAddToIndex(cc))));for(const sc of brewData.subclass||[])await pAddSubclassToIndex(sc);await Promise.all(classData.class.map((cc=>pAddToIndex(cc))))}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadClassFeatures(page,source,hash,opts){const loadKey=page;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();await Renderer.hover._pCacheAndGet_pDoDereferenceNestedAndCache(brewData.classFeature,"classFeature",UrlUtil.URL_TO_HASH_BUILDER["classFeature"]);await Renderer.hover._pCacheAndGet_pLoadOfficialClassAndSubclassFeatures()}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts){const loadKey=page;await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();await Renderer.hover._pCacheAndGet_pDoDereferenceNestedAndCache(brewData.subclassFeature,"subclassFeature",UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]);await Renderer.hover._pCacheAndGet_pLoadOfficialClassAndSubclassFeatures()}));return Renderer.hover._getFromCache(page,source,hash,opts)},async _pCacheAndGet_pDoDereferenceNestedAndCache(entities,page,fnGetHash){if(!entities)return;const entriesWithRefs={};const entriesWithoutRefs={};const ptrHasRef={_:false};const walker=MiscUtil.getWalker({keyBlacklist:MiscUtil.GENERIC_WALKER_ENTRIES_KEY_BLACKLIST,isNoModification:true});const handlers={object:obj=>{if(ptrHasRef._)return obj;if(obj.type==="refClassFeature"||obj.type==="refSubclassFeature"||obj.type==="refOptionalfeature")ptrHasRef._=true;return obj}};entities.forEach((ent=>{const hash=fnGetHash(ent);Renderer.hover._addToCache(`raw_${page}`,ent.source,hash,ent);ptrHasRef._=false;walker.walk(ent.entries,handlers);(ptrHasRef._?entriesWithRefs:entriesWithoutRefs)[hash]=ptrHasRef._?MiscUtil.copy(ent):ent}));let cntDerefLoops=0;while(Object.keys(entriesWithRefs).length&&cntDerefLoops<25){const hashes=Object.keys(entriesWithRefs);for(const hash of hashes){const ent=entriesWithRefs[hash];const toReplaceMetas=[];walker.walk(ent.entries,{array:arr=>{for(let i=0;i<arr.length;++i){const it=arr[i];if(it.type==="refClassFeature"||it.type==="refSubclassFeature"||it.type==="refOptionalfeature"){toReplaceMetas.push({...it,array:arr,ix:i})}}return arr}});let cntReplaces=0;for(const toReplaceMeta of toReplaceMetas){switch(toReplaceMeta.type){case"refClassFeature":case"refSubclassFeature":{const prop=toReplaceMeta.type==="refClassFeature"?"classFeature":"subclassFeature";const refUnpacked=toReplaceMeta.type==="refClassFeature"?DataUtil.class.unpackUidClassFeature(toReplaceMeta.classFeature):DataUtil.class.unpackUidSubclassFeature(toReplaceMeta.subclassFeature);const refHash=UrlUtil.URL_TO_HASH_BUILDER[prop](refUnpacked);if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(refHash,prop,refUnpacked.source,{isNoCount:true})){cntReplaces++;toReplaceMeta.array[toReplaceMeta.ix]={};break}const cpy=entriesWithoutRefs[refHash]?MiscUtil.copy(entriesWithoutRefs[refHash]):Renderer.hover._getFromCache(prop,refUnpacked.source,refHash,{isCopy:true});if(cpy){cntReplaces++;delete cpy.className;delete cpy.classSource;delete cpy.subclassShortName;delete cpy.subclassSource;delete cpy.level;delete cpy.header;if(ent.source===cpy.source)delete cpy.source;if(ent.page===cpy.page)delete cpy.page;if(toReplaceMeta.name)cpy.name=toReplaceMeta.name;toReplaceMeta.array[toReplaceMeta.ix]=cpy}break}case"refOptionalfeature":{const refUnpacked=DataUtil.generic.unpackUid(toReplaceMeta.optionalfeature,"optfeature");const refHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_COMPANIONS_FAMILIARS](refUnpacked);if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(refHash,"optionalfeature",refUnpacked.source,{isNoCount:true})){cntReplaces++;toReplaceMeta.array[toReplaceMeta.ix]={};break}const cpy=await Renderer.hover.pCacheAndGetHash(UrlUtil.PG_COMPANIONS_FAMILIARS,refHash,{isCopy:true});if(cpy){cntReplaces++;delete cpy.featureType;delete cpy.prerequisite;if(ent.source===cpy.source)delete cpy.source;if(ent.page===cpy.page)delete cpy.page;if(toReplaceMeta.name)cpy.name=toReplaceMeta.name;toReplaceMeta.array[toReplaceMeta.ix]=cpy}break}}}if(cntReplaces===toReplaceMetas.length){delete entriesWithRefs[hash];entriesWithoutRefs[hash]=ent}}cntDerefLoops++}Object.values(entriesWithoutRefs).forEach((ent=>{Renderer.hover._addToCache(page,ent.source,fnGetHash(ent),ent)}));const entriesWithRefsVals=Object.values(entriesWithRefs);if(entriesWithRefsVals.length){JqueryUtil.doToast({type:"danger",content:`Failed to load references for ${entriesWithRefsVals.length} entr${entriesWithRefsVals.length===1?"y":"ies"}!`})}entriesWithRefsVals.forEach((ent=>{Renderer.hover._addToCache(page,ent.source,fnGetHash(ent),ent)}))},async _pCacheAndGet_pLoadOfficialClassAndSubclassFeatures(){const lockKey="classFeature__subclassFeature";if(Renderer.hover._flags[lockKey])return;if(!Renderer.hover._locks[lockKey])Renderer.hover._locks[lockKey]=new VeLock;await Renderer.hover._locks[lockKey].pLock();if(Renderer.hover._flags[lockKey])return;try{const rawClassData=await DataUtil.class.loadRawJSON();await Renderer.hover._pCacheAndGet_pDoDereferenceNestedAndCache(rawClassData.classFeature,"classFeature",UrlUtil.URL_TO_HASH_BUILDER["classFeature"]);await Renderer.hover._pCacheAndGet_pDoDereferenceNestedAndCache(rawClassData.subclassFeature,"subclassFeature",UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]);Renderer.hover._flags[lockKey]=true}finally{Renderer.hover._locks[lockKey].unlock()}},getGenericCompactRenderedString(entry){const textStack=[""];const renderer=Renderer.get().setFirstSection(true);const fakeEntry={type:"pf2-h3",name:entry.name,entries:entry.entries};renderer.recursiveRender(fakeEntry,textStack);return textStack.join("")},_pageToRenderFn(page){switch(page){case"generic":case"hover":return Renderer.hover.getGenericCompactRenderedString;case UrlUtil.PG_QUICKREF:return Renderer.hover.getGenericCompactRenderedString;case UrlUtil.PG_CLASSES:return Renderer.class.getRenderedString;case UrlUtil.PG_SPELLS:return Renderer.spell.getRenderedString;case UrlUtil.PG_RITUALS:return Renderer.ritual.getRenderedString;case UrlUtil.PG_ITEMS:return Renderer.item.getRenderedString;case UrlUtil.PG_BESTIARY:return(it,opts)=>Renderer.creature.getRenderedString(it,{showScaler:true,isScaled:it._originalLvl!=null,...opts});case UrlUtil.PG_VEHICLES:return Renderer.vehicle.getRenderedString;case UrlUtil.PG_RELICGIFTS:return Renderer.relicGift.getRenderedString;case UrlUtil.PG_ARCHETYPES:return Renderer.archetype.getRenderedString;case UrlUtil.PG_CONDITIONS:return Renderer.condition.getRenderedString;case UrlUtil.PG_AFFLICTIONS:return Renderer.affliction.getRenderedString;case UrlUtil.PG_ORGANIZATIONS:return Renderer.organization.getRenderedString;case UrlUtil.PG_CREATURETEMPLATE:return Renderer.creatureTemplate.getRenderedString;case UrlUtil.PG_BACKGROUNDS:return Renderer.background.getRenderedString;case UrlUtil.PG_FEATS:return Renderer.feat.getRenderedString;case UrlUtil.PG_COMPANIONS_FAMILIARS:return Renderer.companionfamiliar.getRenderedString;case UrlUtil.PG_ANCESTRIES:return Renderer.ancestry.getRenderedString;case UrlUtil.PG_DEITIES:return Renderer.deity.getRenderedString;case UrlUtil.PG_HAZARDS:return Renderer.hazard.getRenderedString;case UrlUtil.PG_VARIANTRULES:return Renderer.variantrule.getRenderedString;case UrlUtil.PG_TABLES:return Renderer.table.getRenderedString;case UrlUtil.PG_ACTIONS:return Renderer.action.getRenderedString;case UrlUtil.PG_ABILITIES:return Renderer.ability.getRenderedString;case UrlUtil.PG_OPTIONAL_FEATURES:return Renderer.optionalFeature.getRenderedString;case UrlUtil.PG_LANGUAGES:return Renderer.language.getRenderedString;case UrlUtil.PG_TRAITS:return Renderer.trait.getRenderedString;case UrlUtil.PG_EVENTS:return Renderer.event.getRenderedString;case UrlUtil.PG_PLACES:return Renderer.place.getRenderedString;case"classfeature":case"classFeature":return Renderer.class.getCompactRenderedClassFeature;case"subclassfeature":case"subclassFeature":return Renderer.class.getCompactRenderedClassFeature;case"domain":return Renderer.domain.getRenderedString;case"group":return Renderer.group.getRenderedString;case"skill":return Renderer.skill.getRenderedString;case"genericData":return Renderer.generic.dataGetRenderedString;case"genericCreatureAbility":return it=>Renderer.creature.getRenderedAbility(it,{isRenderingGeneric:true});default:throw new Error(`Unknown page: ${page} in _pageToRenderFn`)}},_pageToFluffFn(page){switch(page){case UrlUtil.PG_ITEM:return Renderer.item.pGetFluff;case UrlUtil.PG_BESTIARY:return Renderer.creature.pGetFluff;case UrlUtil.PG_ITEMS:return Renderer.item.pGetFluff;case UrlUtil.PG_SPELLS:return Renderer.spell.pGetFluff;case UrlUtil.PG_ANCESTRIES:return Renderer.ancestry.pGetFluff;case UrlUtil.PG_BACKGROUNDS:return Renderer.background.pGetFluff;case UrlUtil.PG_LANGUAGES:return Renderer.language.pGetFluff;default:return null}},isSmallScreen(evt){evt=evt||{};const win=(evt.view||{}).window||window;return win.innerWidth<=768},bindPopoutButton($btnPop,toList,handlerGenerator,title,page){$btnPop.off("click").title(title||"Popout Window (SHIFT for Source Data)");$btnPop.on("click",handlerGenerator?handlerGenerator(toList):evt=>{if(Hist.lastLoadedId!==null){const toRender=toList[Hist.lastLoadedId];if(evt.shiftKey){let $content="";if(evt.ctrlKey){$content=Renderer.hover.$getHoverContent_statsCode(toRender,true)}else{$content=Renderer.hover.$getHoverContent_statsCode(toRender)}Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:`${toRender.name} — Source Data${evt.ctrlKey?" (<span style='color:#FFFF00'>Dev</span>)":""}`,isPermanent:true,isBookContent:true})}else{Renderer.hover.doPopout(evt,toList,Hist.lastLoadedId,page)}}})},$getHoverContent_stats(page,toRender){const renderFn=Renderer.hover._pageToRenderFn(page);return $$`<div class="stats pf2-stat">${renderFn(toRender)}</div>`},$getHoverContent_fluff(page,toRender){if(!toRender){return $$`<table class="stats"><tr class="text"><td colspan="6" class="p-2 text-center">${Renderer.utils.HTML_NO_INFO}</td></tr></table>`}toRender=MiscUtil.copy(toRender);if(toRender.images){const cachedImages=toRender.images;delete toRender.images;toRender.entries=toRender.entries||[];const hasText=toRender.entries.length>0;if(hasText)toRender.entries.unshift({type:"hr"});toRender.entries.unshift(...cachedImages.reverse())}return $$`<div class="stats">${Renderer.generic.getRenderedString(toRender)}</div>`},$getHoverContent_statsCode(toRender,dirty){const cleanCopy=dirty?MiscUtil.copy(toRender):DataUtil.cleanJson(MiscUtil.copy(toRender));return Renderer.hover.$getHoverContent_miscCode(`${cleanCopy.name} — Source Data${dirty?" (<span style='color:#FFFF00'>Dev</span>)":""}`,JSON.stringify(cleanCopy,null,"\t"))},$getHoverContent_miscCode(name,code){const toRenderCode={type:"code",name:name,preformatted:code};return $$`<div class="stats stats--book">${Renderer.get().render(toRenderCode)}</div>`},$getHoverContent_generic(toRender,opts){opts=opts||{};return $$`<div class="stats ${opts.isBookContent||opts.isLargeBookContent?"pf2-book":"pf2-stat"} ${opts.isLargeBookContent?"stats--book-large":""}">${Renderer.hover.getGenericCompactRenderedString(toRender)}</div>`},doPopout(evt,allEntries,index,page){page=page||UrlUtil.getCurrentPage();const it=allEntries[index];const $content=Renderer.hover.$getHoverContent_stats(page,it);Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{pageUrl:`#${UrlUtil.URL_TO_HASH_BUILDER[page](it)}`,title:it._displayName||it.name,isPermanent:true})}};Renderer.getNames=function(nameStack,entry,opts){opts=opts||{};if(opts.maxDepth==null)opts.maxDepth=false;if(opts.depth==null)opts.depth=0;if(opts.typeBlacklist&&entry.type&&opts.typeBlacklist.has(entry.type))return;if(opts.maxDepth!==false&&opts.depth>opts.maxDepth)return;if(entry.name)nameStack.push(Renderer.stripTags(entry.name));if(entry.entries){let nextDepth=entry.type==="section"?-1:entry.type==="entries"?opts.depth+1:opts.depth;for(const eX of entry.entries){const nxtOpts={...opts};nxtOpts.depth=nextDepth;Renderer.getNames(nameStack,eX,nxtOpts)}}else if(entry.items){for(const eX of entry.items){Renderer.getNames(nameStack,eX,opts)}}};Renderer.findName=function(entry){function search(it){if(it instanceof Array){for(const child of it){const n=search(child);if(n)return n}}else if(it instanceof Object){if(it.name)return it.name;else{for(const child of Object.values(it)){const n=search(child);if(n)return n}}}}return search(entry)};Renderer.stripTags=function(str){try{if(!str)return str;let nxtStr=Renderer._stripTagLayer(str);while(nxtStr.length!==str.length){str=nxtStr;nxtStr=Renderer._stripTagLayer(str)}return nxtStr}catch(e){throw new Error(`Could not strip tags from the following string: ${str}`)}};Renderer._stripTagLayer=function(str){if(str.includes("{@")){const tagSplit=Renderer.splitByTags(str);return tagSplit.filter((it=>it)).map((it=>{if(it.startsWith("{@")){let[tag,text]=Renderer.splitFirstSpace(it.slice(1,-1));text=text.replace(/<\$([^$]+)\$>/gi,"");switch(tag){case"@b":case"@bold":case"@i":case"@italic":case"@handwriting":case"@indent":case"@indentFirst":case"@indentSubsequent":case"@s":case"@strike":case"@u":case"@underline":case"@c":case"@center":case"@n":case"@nostyle":case"@sup":case"@sub":return text;case"@dc":return`DC ${text}`;case"@as":{return text}case"@chance":case"@d20":case"@damage":case"@flatDC":case"@dice":case"@hit":{const[rollText,displayText]=Renderer.splitTagByPipe(text);switch(tag){case"@damage":case"@flatDC":case"@dice":{return displayText||rollText.replace(/;/g,"/")}case"@d20":case"@hit":{return displayText||(()=>{const n=Number(rollText);if(isNaN(n)){throw new Error(`Could not parse "${rollText}" as a number!`)}return`${n>=0?"+":""}${n}`})()}case"@chance":{return displayText||`${rollText} percent`}}throw new Error(`Unhandled tag: ${tag}`)}case"@note":case"@domain":case"@group":{return text}case"@skill":{const parts=Renderer.splitTagByPipe(text);if(parts[2]!==undefined){return parts[2]}else{return parts[0]}}case"@Pf2eTools":case"@pf2etools":case"@adventure":case"@book":case"@quickref":case"@filter":case"@footnote":case"@link":case"@scaledice":case"@scaledamage":case"@loader":case"@color":case"@highlight":{const parts=Renderer.splitTagByPipe(text);return parts[0]}case"@area":{const[compactText,areaId,flags,...others]=Renderer.splitTagByPipe(text);return flags&&flags.includes("x")?compactText:`${flags&&flags.includes("u")?"A":"a"}rea ${compactText}`}case"@action":case"@ability":case"@background":case"@class":case"@condition":case"@creature":case"@disease":case"@affliction":case"@feat":case"@hazard":case"@vehicle":case"@relicGift":case"@item":case"@language":case"@object":case"@ancestry":case"@archetype":case"@versatileHeritage":case"@reward":case"@spell":case"@status":case"@table":case"@trait":case"@place":case"@plane":case"@mindscape":case"@event":case"@nation":case"@ritual":case"@settlement":case"@deity":case"@organization":case"@eidolon":case"@familiar":case"@familiarAbility":case"@companion":case"@companionAbility":case"@optfeature":case"@creatureTemplate":case"@variantrule":{const parts=Renderer.splitTagByPipe(text);return parts.length>=3?parts[2]:parts[0]}case"@classFeature":{const parts=Renderer.splitTagByPipe(text);return parts.length>=6?parts[5]:parts[0]}case"@subclassFeature":{const parts=Renderer.splitTagByPipe(text);return parts.length>=8?parts[7]:parts[0]}case"@runeItem":{const parts=Renderer.splitTagByPipe(text);return parts.length%2?parts[parts.length-1]:parts.push(parts.shift()).map((it=>it[0])).map((it=>Renderer.runeItem.getRuneShortName(it))).join(" ")}case"@homebrew":{const[newText,oldText]=Renderer.splitTagByPipe(text);if(newText&&oldText){return`${newText} [this is a homebrew addition, replacing the following: "${oldText}"]`}else if(newText){return`${newText} [this is a homebrew addition]`}else if(oldText){return`[the following text has been removed due to homebrew: ${oldText}]`}else throw new Error(`Homebrew tag had neither old nor new text!`)}default:throw new Error(`Unhandled tag: "${tag}"`)}}else return it})).join("")}return str};Renderer.initLazyImageLoaders=function(){function onIntersection(obsEntries){obsEntries.forEach((entry=>{if(entry.intersectionRatio>0){Renderer._imageObserver.unobserve(entry.target);const $img=$(entry.target);$img.attr("src",$img.attr("data-src")).removeAttr("data-src")}}))}let printListener=null;const $images=$(`img[data-src]`);const config={rootMargin:"150px 0px",threshold:.01};if(Renderer._imageObserver){Renderer._imageObserver.disconnect();window.removeEventListener("beforeprint",printListener)}Renderer._imageObserver=new IntersectionObserver(onIntersection,config);$images.each(((i,image)=>Renderer._imageObserver.observe(image)));printListener=()=>{alert(`All images in the page will now be loaded. This may take a while.`);$images.each(((i,image)=>{Renderer._imageObserver.unobserve(image);const $img=$(image);$img.attr("src",$img.attr("data-src")).removeAttr("data-src")}))};window.addEventListener("beforeprint",printListener)};Renderer._imageObserver=null;Renderer.HEAD_NEG_1="rd__b--0";Renderer.HEAD_0="rd__b--1";Renderer.HEAD_1="rd__b--2";Renderer.HEAD_2="rd__b--3";Renderer.HEAD_2_SUB_VARIANT="rd__b--4";Renderer.DATA_NONE="data-none";if(typeof module!=="undefined"){module.exports.Renderer=Renderer;global.Renderer=Renderer}else{window.addEventListener("load",(async()=>{if(!window.hasOwnProperty("_SEO_PAGE"))await Renderer.trait.preloadTraits()}))};
Renderer.dice={SYSTEM_USER:{name:"Desna"},POS_INFINITE:1e20,_SYMBOL_PARSE_FAILED:Symbol("parseFailed"),_$wrpRoll:null,_$minRoll:null,_$iptRoll:null,_$outRoll:null,_$head:null,_hist:[],_histIndex:null,_$lastRolledBy:null,_storage:null,_isManualMode:false,DICE:[4,6,8,10,12,20,100],getNextDice(faces){const idx=Renderer.dice.DICE.indexOf(faces);if(~idx)return Renderer.dice.DICE[idx+1];else return null},getPreviousDice(faces){const idx=Renderer.dice.DICE.indexOf(faces);if(~idx)return Renderer.dice.DICE[idx-1];else return null},_panel:null,bindDmScreenPanel(panel,title){if(Renderer.dice._panel){Renderer.dice.unbindDmScreenPanel()}Renderer.dice._showBox();Renderer.dice._panel=panel;panel.doPopulate_Rollbox(title)},unbindDmScreenPanel(){if(Renderer.dice._panel){$(`body`).append(Renderer.dice._$wrpRoll);Renderer.dice._panel.close$TabContent();Renderer.dice._panel=null;Renderer.dice._hideBox();Renderer.dice._$wrpRoll.removeClass("rollbox-panel")}},get$Roller(){return Renderer.dice._$wrpRoll},parseRandomise2(str){if(!str||!str.trim())return null;const wrpTree=Renderer.dice.lang.getTree3(str);if(wrpTree)return wrpTree.tree.evl({});else return null},parseAverage(str){if(!str||!str.trim())return null;const wrpTree=Renderer.dice.lang.getTree3(str);if(wrpTree)return wrpTree.tree.avg({});else return null},_showBox(){if(Renderer.dice._$wrpRoll.css("display")!=="flex"){Renderer.dice._$minRoll.hide();Renderer.dice._$wrpRoll.css("display","flex");Renderer.dice._$iptRoll.prop("placeholder",`${Renderer.dice._getRandomPlaceholder()} or "/help"`)}},_hideBox(){Renderer.dice._$minRoll.show();Renderer.dice._$wrpRoll.css("display","")},_getRandomPlaceholder(){const count=RollerUtil.randomise(10);const faces=Renderer.dice.DICE[RollerUtil.randomise(Renderer.dice.DICE.length-1)];const mod=(RollerUtil.randomise(3)-2)*RollerUtil.randomise(10);const drop=count>1&&RollerUtil.randomise(5)===5;const dropDir=drop?RollerUtil.randomise(2)===2?"h":"l":"";const dropAmount=drop?RollerUtil.randomise(count-1):null;return`${count}d${faces}${drop?`d${dropDir}${dropAmount}`:""}${mod<0?mod:mod>0?`+${mod}`:""}`},async _pInit(){const $wrpRoll=$(`<div class="rollbox"></div>`);const $minRoll=$(`<div class="rollbox-min"><span class="glyphicon glyphicon-chevron-up"></span></div>`).on("click",(()=>{Renderer.dice._showBox();Renderer.dice._$iptRoll.focus()}));const $head=$(`<div class="head-roll"><span class="hdr-roll">Dice Roller</span><span class="delete-icon glyphicon glyphicon-remove"></span></div>`).on("click",(()=>{if(!Renderer.dice._panel)Renderer.dice._hideBox()}));const $outRoll=$(`<div class="out-roll">`);const $iptRoll=$(`<input class="ipt-roll form-control" autocomplete="off" spellcheck="false">`).on("keypress",(async evt=>{evt.stopPropagation();if(evt.key!=="Enter")return;const strDice=$iptRoll.val();const result=await Renderer.dice.pRoll2(strDice,{isUser:true,name:"Anon"});$iptRoll.val("");if(result===Renderer.dice._SYMBOL_PARSE_FAILED){Renderer.dice._showInvalid();$iptRoll.addClass("form-control--error")}})).on("keydown",(evt=>{$iptRoll.removeClass("form-control--error");if(evt.key==="ArrowUp"){evt.preventDefault();Renderer.dice._prevHistory();return}if(evt.key==="ArrowDown"){evt.preventDefault();Renderer.dice._nextHistory()}}));$wrpRoll.append($head).append($outRoll).append($iptRoll);Renderer.dice._$wrpRoll=$wrpRoll;Renderer.dice._$minRoll=$minRoll;Renderer.dice._$head=$head;Renderer.dice._$outRoll=$outRoll;Renderer.dice._$iptRoll=$iptRoll;$(`body`).append($minRoll).append($wrpRoll);$wrpRoll.on("click",".out-roll-item-code",(evt=>Renderer.dice._$iptRoll.val($(evt.target).text()).focus()));Renderer.dice.storage=await StorageUtil.pGet(VeCt.STORAGE_ROLLER_MACRO)||{}},_prevHistory(){Renderer.dice._histIndex--;Renderer.dice._prevNextHistory_load()},_nextHistory(){Renderer.dice._histIndex++;Renderer.dice._prevNextHistory_load()},_prevNextHistory_load(){Renderer.dice._cleanHistoryIndex();const nxtVal=Renderer.dice._hist[Renderer.dice._histIndex];Renderer.dice._$iptRoll.val(nxtVal);if(nxtVal)Renderer.dice._$iptRoll[0].selectionStart=Renderer.dice._$iptRoll[0].selectionEnd=nxtVal.length},_cleanHistoryIndex:()=>{if(!Renderer.dice._hist.length){Renderer.dice._histIndex=null}else{Renderer.dice._histIndex=Math.min(Renderer.dice._hist.length,Math.max(Renderer.dice._histIndex,0))}},_addHistory:str=>{Renderer.dice._hist.push(str);Renderer.dice._histIndex=Renderer.dice._hist.length},_scrollBottom:()=>{Renderer.dice._$outRoll.scrollTop(1e10)},async pRollerClickUseData(evt,ele){const $ele=$(ele);const rollData=$ele.data("packed-dice");let name=$ele.data("roll-name");let shiftKey=evt.shiftKey;let ctrlKey=evt.ctrlKey||evt.metaKey;const options=rollData.toRoll.split(";").map((it=>it.trim())).filter(Boolean);let chosenRollData;if(options.length>1){const cpyRollData=MiscUtil.copy(rollData);const menu=ContextUtil.getMenu([new ContextUtil.Action("Choose Roll",null,{isDisabled:true}),null,...options.map((it=>new ContextUtil.Action(`Roll ${it}`,(evt=>{shiftKey=shiftKey||evt.shiftKey;ctrlKey=ctrlKey||(evt.ctrlKey||evt.metaKey);cpyRollData.toRoll=it;return cpyRollData}))))]);chosenRollData=await ContextUtil.pOpenMenu(evt,menu)}else chosenRollData=rollData;if(!chosenRollData)return;const rePrompt=/#\$prompt_number:?([^$]*)\$#/g;const results=[];let m;while(m=rePrompt.exec(chosenRollData.toRoll)){const optionsRaw=m[1];const opts={};if(optionsRaw){const spl=optionsRaw.split(",");spl.map((it=>it.trim())).forEach((part=>{const[k,v]=part.split("=").map((it=>it.trim()));switch(k){case"min":case"max":opts[k]=Number(v);break;default:opts[k]=v;break}}))}if(opts.min==null)opts.min=0;if(opts.max==null)opts.max=Renderer.dice.POS_INFINITE;if(opts.default==null)opts.default=0;const input=await InputUiUtil.pGetUserNumber(opts);if(input==null)return;results.push(input)}const rollDataCpy=MiscUtil.copy(chosenRollData);rePrompt.lastIndex=0;rollDataCpy.toRoll=rollDataCpy.toRoll.replace(rePrompt,(()=>results.shift()));let rollDataCpyToRoll;if(rollData.prompt){const sortedKeys=Object.keys(rollDataCpy.prompt.options).sort(SortUtil.ascSortLower);const menu=ContextUtil.getMenu([new ContextUtil.Action(rollDataCpy.prompt.entry,null,{isDisabled:true}),null,...sortedKeys.map((it=>{const title=rollDataCpy.prompt.mode==="psi"?`${it} point${it==="1"?"":"s"}`:`${Parser.spLevelToFull(it)} level`;return new ContextUtil.Action(title,(evt=>{shiftKey=shiftKey||evt.shiftKey;ctrlKey=ctrlKey||(evt.ctrlKey||evt.metaKey);const fromScaling=rollDataCpy.prompt.options[it];if(!fromScaling){name="";return rollDataCpy}else{name=rollDataCpy.prompt.mode==="psi"?`${it} psi activation`:`${Parser.spLevelToFull(it)}-level cast`;rollDataCpy.toRoll+=`+${fromScaling}`;return rollDataCpy}}))}))]);rollDataCpyToRoll=await ContextUtil.pOpenMenu(evt,menu)}else rollDataCpyToRoll=rollDataCpy;if(!rollDataCpyToRoll)return;await Renderer.dice.pRollerClick({shiftKey:shiftKey,ctrlKey:ctrlKey},ele,JSON.stringify(rollDataCpyToRoll),name)},__rerollNextInlineResult(ele){const $ele=$(ele);const $result=$ele.next(`.result`);const r=Renderer.dice.__rollPackedData($ele);$result.text(r)},__rollPackedData($ele){const wrpTree=Renderer.dice.lang.getTree3($ele.data("packed-dice").toRoll);return wrpTree.tree.evl({})},_pRollerClick_getMsgBug(total){return`<span class="message">No result found matching roll ${total}?! <span class="help--subtle" title="Bug!">🐛</span></span>`},async pRollerClick(evtMock,ele,packed,name){const $ele=$(ele);const entry=JSON.parse(packed);const additionalData={...ele.dataset};function attemptToGetNameOfRoll(){let titleMaybe=$(ele).closest(`table:not(.stats)`).children(`caption`).text();if(titleMaybe)return titleMaybe.trim();titleMaybe=$(ele).parent().children(`.list-item-title`).text();if(titleMaybe)return titleMaybe.trim();titleMaybe=$(ele).closest(`div`).children(`.rd__h`).first().find(`.entry-title-inner`).text();if(titleMaybe){titleMaybe=titleMaybe.trim().replace(/[.,:]\s*$/,"");return titleMaybe}return titleMaybe}function attemptToGetNameOfRoller(){const $hov=$ele.closest(`.hwin`);if($hov.length)return $hov.find(`.stats-name`).first().text();const $roll=$ele.closest(`.out-roll-wrp`);if($roll.length)return $roll.data("name");const $dispPanelTitle=$ele.closest(`.gm-screen-panel`).children(`.panel-control-title`);if($dispPanelTitle.length)return $dispPanelTitle.text().trim();let name=document.title.replace("- Pf2eTools","").trim();return name==="GM Screen"?"Game Master":name}function _$getRowFromTotal(total){let $table=$ele;while($table.length){if($table.hasClass("pf2-table"))break;else if($table.children(".pf2-table").length){$table=$table.children(".pf2-table").first();break}$table=$table.parent()}const $cells=$table.find(`.pf2-table__entry`).filter(((i,e)=>{const $e=$(e);if(!$e.closest(`.pf2-table`).is($table))return false;return total>=Number($e.data("roll-min"))&&total<=Number($e.data("roll-max"))}));if($cells.length)return $cells.get();return null}function _rollInlineRollers($ele){$ele.find(`.render-roller`).each(((i,e)=>{const $e=$(e);const r=Renderer.dice.__rollPackedData($e);$e.attr("onclick",`Renderer.dice.__rerollNextInlineResult(this)`);$e.after(` (<span class="result">${r}</span>)`)}))}function fnGetMessageTable(total){const eles=_$getRowFromTotal(total);if(eles){const tableRow=eles.map((ele=>ele.innerHTML.trim())).filter((it=>it)).join(" | ");const $row=$(`<span class="message">${tableRow}</span>`);_rollInlineRollers($ele);return $row.html()}return Renderer.dice._pRollerClick_getMsgBug(total)}const rolledBy={name:attemptToGetNameOfRoller(),label:name!=null?name:attemptToGetNameOfRoll(ele)};const modRollMeta=Renderer.dice.getEventModifiedRollMeta(evtMock,entry);const isRollOnTableCell=$ele=>{let $parent=$ele.parent();let isLabel=false;while($parent.length){if($parent.hasClass("pf2-table__label"))isLabel=true;if($parent.hasClass("pf2-table--rollable"))return isLabel;$parent=$parent.parent()}return false};if(isRollOnTableCell($ele)||modRollMeta.entry.onTable){Renderer.dice.pRollEntry(modRollMeta.entry,rolledBy,{fnGetMessage:fnGetMessageTable,rollCount:modRollMeta.rollCount})}else Renderer.dice.pRollEntry(modRollMeta.entry,rolledBy,{rollCount:modRollMeta.rollCount})},getEventModifiedRollMeta(evt,entry){const out={rollCount:1,entry:entry};if(evt.shiftKey){if(entry.subType==="damage"){entry.toRoll=`(${entry.toRoll}) * 2`}else if(entry.subType==="d20"){if(entry.d20mod!=null)entry.toRoll=`2d20dl1${entry.d20mod}`;else entry.toRoll=entry.toRoll.replace(/^\s*1?\s*d\s*20/,"2d20dl1")}else if(entry.subType==="hit"){entry.toRoll=`${entry.toRoll}${Parser.numToBonus(entry.MAP)}`}else out.rollCount=2}if(evt.ctrlKey||evt.metaKey){if(entry.subType==="damage"){entry.toRoll=`floor((${entry.toRoll}) / 2)`}else if(entry.subType==="d20"){if(entry.d20mod!=null)entry.toRoll=`2d20dh1${entry.d20mod}`;else entry.toRoll=entry.toRoll.replace(/^\s*1?\s*d\s*20/,"2d20dh1")}else if(entry.subType==="hit"){entry.toRoll=`${entry.toRoll}${Parser.numToBonus(entry.MAP*2)}`}else out.rollCount=2}return out},async pRoll2(str,rolledBy,opts){opts=opts||{};str=str.trim().replace(/\/r(?:oll)? /gi,"").trim();if(!str)return;if(rolledBy.isUser)Renderer.dice._addHistory(str);if(str.startsWith("/"))Renderer.dice._handleCommand(str,rolledBy);else if(str.startsWith("#"))return Renderer.dice._pHandleSavedRoll(str,rolledBy,opts);else{const[head,...tail]=str.split(":");if(tail.length){str=tail.join(":");rolledBy.label=head}const wrpTree=Renderer.dice.lang.getTree3(str);if(!wrpTree)return Renderer.dice._SYMBOL_PARSE_FAILED;return Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts)}},async pRollEntry(entry,rolledBy,opts){opts=opts||{};const rollCount=Math.round(opts.rollCount||1);delete opts.rollCount;if(rollCount<=0)throw new Error(`Invalid roll count: ${rollCount} (must be a positive integer)`);const wrpTree=Renderer.dice.lang.getTree3(entry.toRoll);wrpTree.tree.successThresh=entry.successThresh;wrpTree.tree.successMax=entry.successMax;const results=[];if(rollCount>1)Renderer.dice._showMessage(`Rolling twice...`,rolledBy);for(let i=0;i<rollCount;++i){const result=await Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts);if(result==null)return null;results.push(result)}return Math.max(...results)},async _pHandleRoll2(wrpTree,rolledBy,opts){opts={...opts};if(Renderer.dice._isManualMode)return Renderer.dice._pHandleRoll2_manual(wrpTree.tree,rolledBy,opts);else return Renderer.dice._pHandleRoll2_automatic(wrpTree.tree,rolledBy,opts)},_pHandleRoll2_automatic(tree,rolledBy,opts){opts=opts||{};Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);const $out=Renderer.dice._$lastRolledBy;if(tree){const meta={};const result=tree.evl(meta);const fullHtml=(meta.html||[]).join("");const allMax=meta.allMax&&meta.allMax.length&&!meta.allMax.filter((it=>!it)).length;const allMin=meta.allMin&&meta.allMin.length&&!meta.allMin.filter((it=>!it)).length;const lbl=rolledBy.label&&(!rolledBy.name||rolledBy.label.trim().toLowerCase()!==rolledBy.name.trim().toLowerCase())?rolledBy.label:null;const totalPart=tree.successThresh?`<span class="roll">${result>(tree.successMax||100)-tree.successThresh?"Success!":"Failure"}</span>`:`<span class="roll ${allMax?"roll-max":allMin?"roll-min":""}">${result}</span>`;const title=`${rolledBy.name?`${rolledBy.name} — `:""}${lbl?`${lbl}: `:""}${tree}`;$out.append(`\n\t\t\t\t<div class="out-roll-item" title="${title}">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t${lbl?`<span class="roll-label">${lbl}: </span>`:""}\n\t\t\t\t\t\t${totalPart}\n\t\t\t\t\t\t<span class="all-rolls ve-muted">${fullHtml}</span>\n\t\t\t\t\t\t${opts.fnGetMessage?`<span class="message">${opts.fnGetMessage(result)}</span>`:""}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="out-roll-item-button-wrp">\n\t\t\t\t\t\t<button title="Copy to input" class="btn btn-default btn-xs btn-copy-roll" onclick="Renderer.dice._$iptRoll.val('${tree.toString().replace(/\s+/g,"")}'); Renderer.dice._$iptRoll.focus()"><span class="glyphicon glyphicon-pencil"></span></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);ExtensionUtil.doSendRoll({dice:tree.toString(),rolledBy:rolledBy.name,label:lbl});Renderer.dice._scrollBottom();return result}else{$out.append(`<div class="out-roll-item">Invalid input! Try &quot;/help&quot;</div>`);Renderer.dice._scrollBottom();return null}},_pHandleRoll2_manual(tree,rolledBy,opts){opts=opts||{};if(!tree)return JqueryUtil.doToast({type:"danger",content:`Invalid roll input!`});const title=(rolledBy.label||"").toTitleCase()||"Roll Dice";const $dispDice=$(`<div class="p-2 bold flex-vh-center rll__prompt-header">${tree.toString()}</div>`);if(opts.isResultUsed){return InputUiUtil.pGetUserNumber({title:title,$elePre:$dispDice})}else{const{$modalInner:$modalInner}=UiUtil.getShowModal({title:title,isMinHeight0:true});$dispDice.appendTo($modalInner);return null}},_showMessage(message,rolledBy){Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);const $out=Renderer.dice._$lastRolledBy;$out.append(`<div class="out-roll-item out-roll-item--message">${message}</div>`);Renderer.dice._scrollBottom()},_showInvalid(){Renderer.dice._showMessage("Invalid input! Try &quot;/help&quot;",Renderer.dice.SYSTEM_USER)},_validCommands:new Set(["/c","/cls","/clear"]),_handleCommand(com,rolledBy){Renderer.dice._showMessage(`<span class="out-roll-item-code">${com}</span>`,rolledBy);const PREF_MACRO="/macro";function checkLength(arr,desired){return arr.length===desired}async function pSave(){await StorageUtil.pSet(VeCt.STORAGE_ROLLER_MACRO,Renderer.dice.storage)}if(com==="/help"||com==="/h"){Renderer.dice._showMessage(`<ul class="rll__list">\n\t\t\t\t\t<li>Keep highest; <span class="out-roll-item-code">4d6kh3</span></li>\n\t\t\t\t\t<li>Drop lowest; <span class="out-roll-item-code">4d6dl1</span></li>\n\t\t\t\t\t<li>Drop highest; <span class="out-roll-item-code">3d4dh1</span></li>\n\t\t\t\t\t<li>Keep lowest; <span class="out-roll-item-code">3d4kl1</span></li>\n\n\t\t\t\t\t<li>Reroll equal; <span class="out-roll-item-code">2d4r1</span></li>\n\t\t\t\t\t<li>Reroll less; <span class="out-roll-item-code">2d4r&lt;2</span></li>\n\t\t\t\t\t<li>Reroll less or equal; <span class="out-roll-item-code">2d4r&lt;=2</span></li>\n\t\t\t\t\t<li>Reroll greater; <span class="out-roll-item-code">2d4r&gt;2</span></li>\n\t\t\t\t\t<li>Reroll greater equal; <span class="out-roll-item-code">2d4r&gt;=3</span></li>\n\n\t\t\t\t\t<li>Explode equal; <span class="out-roll-item-code">2d4x4</span></li>\n\t\t\t\t\t<li>Explode less; <span class="out-roll-item-code">2d4x&lt;2</span></li>\n\t\t\t\t\t<li>Explode less or equal; <span class="out-roll-item-code">2d4x&lt;=2</span></li>\n\t\t\t\t\t<li>Explode greater; <span class="out-roll-item-code">2d4x&gt;2</span></li>\n\t\t\t\t\t<li>Explode greater equal; <span class="out-roll-item-code">2d4x&gt;=3</span></li>\n\n\t\t\t\t\t<li>Count Successes equal; <span class="out-roll-item-code">2d4cs=4</span></li>\n\t\t\t\t\t<li>Count Successes less; <span class="out-roll-item-code">2d4cs&lt;2</span></li>\n\t\t\t\t\t<li>Count Successes less or equal; <span class="out-roll-item-code">2d4cs&lt;=2</span></li>\n\t\t\t\t\t<li>Count Successes greater; <span class="out-roll-item-code">2d4cs&gt;2</span></li>\n\t\t\t\t\t<li>Count Successes greater equal; <span class="out-roll-item-code">2d4cs&gt;=3</span></li>\n\n\t\t\t\t\t<li>Margin of Success; <span class="out-roll-item-code">2d4ms=4</span></li>\n\n\t\t\t\t\t<li>Dice pools; <span class="out-roll-item-code">{2d8, 1d6}</span></li>\n\t\t\t\t\t<li>Dice pools with modifiers; <span class="out-roll-item-code">{1d20+7, 10}kh1</span></li>\n\n\t\t\t\t\t<li>Rounding; <span class="out-roll-item-code">floor(1.5)</span>, <span class="out-roll-item-code">ceil(1.5)</span>, <span class="out-roll-item-code">round(1.5)</span></li>\n\n\t\t\t\t\t<li>Average; <span class="out-roll-item-code">avg(8d6)</span></li>\n\n\t\t\t\t\t<li>Other functions; <span class="out-roll-item-code">sign(1d6-3)</span>, <span class="out-roll-item-code">abs(1d6-3)</span>, ...etc.</li>\n\t\t\t\t</ul>\n\t\t\t\tUp and down arrow keys cycle input history.<br>\n\t\t\t\tAnything before a colon is treated as a label (<span class="out-roll-item-code">Fireball: 6d6</span>)<br>\nUse <span class="out-roll-item-code">${PREF_MACRO} list</span> to list saved macros.<br>\n\t\t\t\tUse <span class="out-roll-item-code">${PREF_MACRO} add myName 1d2+3</span> to add (or update) a macro. Macro names should not contain spaces or hashes.<br>\n\t\t\t\tUse <span class="out-roll-item-code">${PREF_MACRO} remove myName</span> to remove a macro.<br>\n\t\t\t\tUse <span class="out-roll-item-code">#myName</span> to roll a macro.<br>\n\t\t\t\tUse <span class="out-roll-item-code">/clear</span> to clear the roller.`,Renderer.dice.SYSTEM_USER)}else if(com.startsWith(PREF_MACRO)){const[_,mode,...others]=com.split(/\s+/);if(!["list","add","remove","clear"].includes(mode))Renderer.dice._showInvalid();else{switch(mode){case"list":if(checkLength(others,0)){Object.keys(Renderer.dice.storage).forEach((name=>{Renderer.dice._showMessage(`<span class="out-roll-item-code">#${name}</span> — ${Renderer.dice.storage[name]}`,Renderer.dice.SYSTEM_USER)}))}else{Renderer.dice._showInvalid()}break;case"add":{if(checkLength(others,2)){const[name,macro]=others;if(name.includes(" ")||name.includes("#"))Renderer.dice._showInvalid();else{Renderer.dice.storage[name]=macro;pSave().then((()=>Renderer.dice._showMessage(`Saved macro <span class="out-roll-item-code">#${name}</span>`,Renderer.dice.SYSTEM_USER)))}}else{Renderer.dice._showInvalid()}break}case"remove":if(checkLength(others,1)){if(Renderer.dice.storage[others[0]]){delete Renderer.dice.storage[others[0]];pSave().then((()=>Renderer.dice._showMessage(`Removed macro <span class="out-roll-item-code">#${others[0]}</span>`,Renderer.dice.SYSTEM_USER)))}else{Renderer.dice._showMessage(`Macro <span class="out-roll-item-code">#${others[0]}</span> not found`,Renderer.dice.SYSTEM_USER)}}else{Renderer.dice._showInvalid()}break}}}else if(Renderer.dice._validCommands.has(com)){switch(com){case"/c":case"/cls":case"/clear":Renderer.dice._$outRoll.empty();Renderer.dice._$lastRolledBy.empty();Renderer.dice._$lastRolledBy=null;break}}else Renderer.dice._showInvalid()},_pHandleSavedRoll(id,rolledBy,opts){id=id.replace(/^#/,"");const macro=Renderer.dice.storage[id];if(macro){rolledBy.label=id;const wrpTree=Renderer.dice.lang.getTree3(macro);return Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts)}else Renderer.dice._showMessage(`Macro <span class="out-roll-item-code">#${id}</span> not found`,Renderer.dice.SYSTEM_USER)},addRoll(rolledBy,msgText){if(!msgText.trim())return;Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);Renderer.dice._$outRoll.prepend(`<div class="out-roll-item" title="${rolledBy.name||""}">${msgText}</div>`);Renderer.dice._scrollBottom()},addElement(rolledBy,$ele){Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);$$`<div class="out-roll-item out-roll-item--message">${$ele}</div>`.appendTo(Renderer.dice._$lastRolledBy);Renderer.dice._scrollBottom()},_checkHandleName(name){if(!Renderer.dice._$lastRolledBy||Renderer.dice._$lastRolledBy.data("name")!==name){Renderer.dice._$outRoll.prepend(`<div class="ve-muted out-roll-id">${name}</div>`);Renderer.dice._$lastRolledBy=$(`<div class="out-roll-wrp"></div>`).data("name",name);Renderer.dice._$outRoll.prepend(Renderer.dice._$lastRolledBy)}}};Renderer.dice.lang={validate3(str){str=str.trim();let lexed;try{lexed=Renderer.dice.lang._lex3(str).lexed}catch(e){return e.message}try{Renderer.dice.lang._parse3(lexed)}catch(e){return e.message}return null},getTree3(str,isSilent=true){str=str.trim();if(isSilent){try{const{lexed:lexed,lexedMeta:lexedMeta}=Renderer.dice.lang._lex3(str);return{tree:Renderer.dice.lang._parse3(lexed),meta:lexedMeta}}catch(e){return null}}else{const{lexed:lexed,lexedMeta:lexedMeta}=Renderer.dice.lang._lex3(str);return{tree:Renderer.dice.lang._parse3(lexed),meta:lexedMeta}}},_M_NUMBER_CHAR:/[0-9.]/,_M_SYMBOL_CHAR:/[-+/*^=><florceidhkxunavgsmpbtqw,]/,_M_NUMBER:/^[\d.,]+$/,_lex3(str){const self={tokenStack:[],parenCount:0,braceCount:0,mode:null,token:""};str=str.trim().toLowerCase().replace(/\s+plus\s+/g," + ").replace(/\s+minus\s+/g," - ").replace(/\s+times\s+/g," * ").replace(/\s+/g,"").replace(/[\u2012\u2013\u2014]/g,"-").replace(/[×]/g,"*").replace(/\*\*/g,"^").replace(/÷/g,"/").replace(/--/g,"+").replace(/\+-|-\+/g,"-");if(!str)return{lexed:[],lexedMeta:{}};this._lex3_lex(self,str);return{lexed:self.tokenStack,lexedMeta:{}}},_lex3_lex(self,l){const len=l.length;for(let i=0;i<len;++i){const c=l[i];switch(c){case"(":self.parenCount++;this._lex3_outputToken(self);self.token="(";this._lex3_outputToken(self);break;case")":self.parenCount--;if(self.parenCount<0)throw new Error(`Syntax error: closing <code>)</code> without opening <code>(</code>`);this._lex3_outputToken(self);self.token=")";this._lex3_outputToken(self);break;case"{":self.braceCount++;this._lex3_outputToken(self);self.token="{";this._lex3_outputToken(self);break;case"}":self.braceCount--;if(self.parenCount<0)throw new Error(`Syntax error: closing <code>}</code> without opening <code>(</code>`);this._lex3_outputToken(self);self.token="}";this._lex3_outputToken(self);break;case"+":case"-":case"*":case"/":case"^":case",":this._lex3_outputToken(self);self.token+=c;this._lex3_outputToken(self);break;default:{if(Renderer.dice.lang._M_NUMBER_CHAR.test(c)){if(self.mode==="symbol")this._lex3_outputToken(self);self.token+=c;self.mode="text"}else if(Renderer.dice.lang._M_SYMBOL_CHAR.test(c)){if(self.mode==="text")this._lex3_outputToken(self);self.token+=c;self.mode="symbol"}else throw new Error(`Syntax error: unexpected character <code>${c}</code>`);break}}}this._lex3_outputToken(self)},_lex3_outputToken(self){if(!self.token)return;switch(self.token){case"(":self.tokenStack.push(Renderer.dice.tk.PAREN_OPEN);break;case")":self.tokenStack.push(Renderer.dice.tk.PAREN_CLOSE);break;case"{":self.tokenStack.push(Renderer.dice.tk.BRACE_OPEN);break;case"}":self.tokenStack.push(Renderer.dice.tk.BRACE_CLOSE);break;case",":self.tokenStack.push(Renderer.dice.tk.COMMA);break;case"+":self.tokenStack.push(Renderer.dice.tk.ADD);break;case"-":self.tokenStack.push(Renderer.dice.tk.SUB);break;case"*":self.tokenStack.push(Renderer.dice.tk.MULT);break;case"/":self.tokenStack.push(Renderer.dice.tk.DIV);break;case"^":self.tokenStack.push(Renderer.dice.tk.POW);break;case"floor":self.tokenStack.push(Renderer.dice.tk.FLOOR);break;case"ceil":self.tokenStack.push(Renderer.dice.tk.CEIL);break;case"round":self.tokenStack.push(Renderer.dice.tk.ROUND);break;case"avg":self.tokenStack.push(Renderer.dice.tk.AVERAGE);break;case"sign":self.tokenStack.push(Renderer.dice.tk.SIGN);break;case"abs":self.tokenStack.push(Renderer.dice.tk.ABS);break;case"cbrt":self.tokenStack.push(Renderer.dice.tk.CBRT);break;case"sqrt":self.tokenStack.push(Renderer.dice.tk.SQRT);break;case"exp":self.tokenStack.push(Renderer.dice.tk.EXP);break;case"log":self.tokenStack.push(Renderer.dice.tk.LOG);break;case"random":self.tokenStack.push(Renderer.dice.tk.RANDOM);break;case"trunc":self.tokenStack.push(Renderer.dice.tk.TRUNC);break;case"pow":self.tokenStack.push(Renderer.dice.tk.POW);break;case"max":self.tokenStack.push(Renderer.dice.tk.MAX);break;case"min":self.tokenStack.push(Renderer.dice.tk.MIN);break;case"d":self.tokenStack.push(Renderer.dice.tk.DICE);break;case"dh":self.tokenStack.push(Renderer.dice.tk.DROP_HIGHEST);break;case"kh":self.tokenStack.push(Renderer.dice.tk.KEEP_HIGHEST);break;case"dl":self.tokenStack.push(Renderer.dice.tk.DROP_LOWEST);break;case"kl":self.tokenStack.push(Renderer.dice.tk.KEEP_LOWEST);break;case"r":self.tokenStack.push(Renderer.dice.tk.REROLL_EXACT);break;case"r>":self.tokenStack.push(Renderer.dice.tk.REROLL_GT);break;case"r>=":self.tokenStack.push(Renderer.dice.tk.REROLL_GTEQ);break;case"r<":self.tokenStack.push(Renderer.dice.tk.REROLL_LT);break;case"r<=":self.tokenStack.push(Renderer.dice.tk.REROLL_LTEQ);break;case"x":self.tokenStack.push(Renderer.dice.tk.EXPLODE_EXACT);break;case"x>":self.tokenStack.push(Renderer.dice.tk.EXPLODE_GT);break;case"x>=":self.tokenStack.push(Renderer.dice.tk.EXPLODE_GTEQ);break;case"x<":self.tokenStack.push(Renderer.dice.tk.EXPLODE_LT);break;case"x<=":self.tokenStack.push(Renderer.dice.tk.EXPLODE_LTEQ);break;case"cs=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_EXACT);break;case"cs>":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_GT);break;case"cs>=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_GTEQ);break;case"cs<":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_LT);break;case"cs<=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_LTEQ);break;case"ms=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_EXACT);break;case"ms>":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_GT);break;case"ms>=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_GTEQ);break;case"ms<":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_LT);break;case"ms<=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_LTEQ);break;default:{if(Renderer.dice.lang._M_NUMBER.test(self.token)){if(self.token.split(Parser._decimalSeparator).length>2)throw new Error(`Syntax error: too many decimal separators <code>${self.token}</code>`);self.tokenStack.push(Renderer.dice.tk.NUMBER(self.token))}else throw new Error(`Syntax error: unexpected token <code>${self.token}</code>`)}}self.token=""},_parse3(lexed){const self={ixSym:-1,syms:lexed,sym:null,lastAccepted:null,isIgnoreCommas:true};this._parse3_nextSym(self);return this._parse3_expression(self)},_parse3_nextSym(self){const cur=self.syms[self.ixSym];self.ixSym++;self.sym=self.syms[self.ixSym];return cur},_parse3_match(self,symbol){if(self.sym==null)return false;if(symbol.type)symbol=symbol.type;return self.sym.type===symbol},_parse3_accept(self,symbol){if(this._parse3_match(self,symbol)){const out=self.sym;this._parse3_nextSym(self);self.lastAccepted=out;return out}return false},_parse3_expect(self,symbol){const accepted=this._parse3_accept(self,symbol);if(accepted)return accepted;if(self.sym)throw new Error(`Unexpected input: Expected <code>${symbol}</code> but found <code>${self.sym}</code>`);else throw new Error(`Unexpected end of input: Expected <code>${symbol}</code>`)},_parse3_factor(self,{isSilent:isSilent=false}={}){if(this._parse3_accept(self,Renderer.dice.tk.TYP_NUMBER)){if(self.isIgnoreCommas){const syms=[self.lastAccepted];while(this._parse3_accept(self,Renderer.dice.tk.COMMA)){const sym=this._parse3_expect(self,Renderer.dice.tk.TYP_NUMBER);syms.push(sym)}const sym=Renderer.dice.tk.NUMBER(syms.map((it=>it.value)).join(""));return new Renderer.dice.parsed.Factor(sym)}return new Renderer.dice.parsed.Factor(self.lastAccepted)}else if(this._parse3_match(self,Renderer.dice.tk.FLOOR)||this._parse3_match(self,Renderer.dice.tk.CEIL)||this._parse3_match(self,Renderer.dice.tk.ROUND)||this._parse3_match(self,Renderer.dice.tk.AVERAGE)||this._parse3_match(self,Renderer.dice.tk.SIGN)||this._parse3_match(self,Renderer.dice.tk.ABS)||this._parse3_match(self,Renderer.dice.tk.CBRT)||this._parse3_match(self,Renderer.dice.tk.SQRT)||this._parse3_match(self,Renderer.dice.tk.EXP)||this._parse3_match(self,Renderer.dice.tk.LOG)||this._parse3_match(self,Renderer.dice.tk.RANDOM)||this._parse3_match(self,Renderer.dice.tk.TRUNC)){const children=[];children.push(this._parse3_nextSym(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_OPEN);children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);return new Renderer.dice.parsed.Function(children)}else if(this._parse3_match(self,Renderer.dice.tk.POW)){self.isIgnoreCommas=false;const children=[];children.push(this._parse3_nextSym(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_OPEN);children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.COMMA);children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);self.isIgnoreCommas=true;return new Renderer.dice.parsed.Function(children)}else if(this._parse3_match(self,Renderer.dice.tk.MAX)||this._parse3_match(self,Renderer.dice.tk.MIN)){self.isIgnoreCommas=false;const children=[];children.push(this._parse3_nextSym(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_OPEN);children.push(this._parse3_expression(self));while(this._parse3_accept(self,Renderer.dice.tk.COMMA))children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);self.isIgnoreCommas=true;return new Renderer.dice.parsed.Function(children)}else if(this._parse3_accept(self,Renderer.dice.tk.PAREN_OPEN)){const exp=this._parse3_expression(self);this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);return new Renderer.dice.parsed.Factor(exp,{hasParens:true})}else if(this._parse3_accept(self,Renderer.dice.tk.BRACE_OPEN)){self.isIgnoreCommas=false;const children=[];children.push(this._parse3_expression(self));while(this._parse3_accept(self,Renderer.dice.tk.COMMA))children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.BRACE_CLOSE);self.isIgnoreCommas=true;const modPart=[];this._parse3__dice_modifiers(self,modPart);return new Renderer.dice.parsed.Pool(children,modPart[0])}else{if(isSilent)return null;if(self.sym)throw new Error(`Unexpected input: <code>${self.sym}</code>`);else throw new Error(`Unexpected end of input`)}},_parse3_dice(self){const children=[];if(this._parse3_match(self,Renderer.dice.tk.DICE))children.push(new Renderer.dice.parsed.Factor(Renderer.dice.tk.NUMBER(1)));else children.push(this._parse3_factor(self));while(this._parse3_match(self,Renderer.dice.tk.DICE)){this._parse3_nextSym(self);children.push(this._parse3_factor(self));this._parse3__dice_modifiers(self,children)}return new Renderer.dice.parsed.Dice(children)},_parse3__dice_modifiers(self,children){const modsMeta=new Renderer.dice.lang.DiceModMeta;while(this._parse3_match(self,Renderer.dice.tk.DROP_HIGHEST)||this._parse3_match(self,Renderer.dice.tk.KEEP_HIGHEST)||this._parse3_match(self,Renderer.dice.tk.DROP_LOWEST)||this._parse3_match(self,Renderer.dice.tk.KEEP_LOWEST)||this._parse3_match(self,Renderer.dice.tk.REROLL_EXACT)||this._parse3_match(self,Renderer.dice.tk.REROLL_GT)||this._parse3_match(self,Renderer.dice.tk.REROLL_GTEQ)||this._parse3_match(self,Renderer.dice.tk.REROLL_LT)||this._parse3_match(self,Renderer.dice.tk.REROLL_LTEQ)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_EXACT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_GT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_GTEQ)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_LT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_LTEQ)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_EXACT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_GT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_GTEQ)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_LT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_LTEQ)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_EXACT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_GT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_GTEQ)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_LT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_LTEQ)){const nxtSym=this._parse3_nextSym(self);const nxtFactor=this._parse3__dice_modifiers_nxtFactor(self,nxtSym);if(nxtSym.isSuccessMode)modsMeta.isSuccessMode=true;modsMeta.mods.push({modSym:nxtSym,numSym:nxtFactor})}if(modsMeta.mods.length)children.push(modsMeta)},_parse3__dice_modifiers_nxtFactor(self,nxtSym){if(nxtSym.diceModifierImplicit==null)return this._parse3_factor(self,{isSilent:true});const fallback=new Renderer.dice.parsed.Factor(Renderer.dice.tk.NUMBER(nxtSym.diceModifierImplicit));if(self.sym==null)return fallback;const out=this._parse3_factor(self,{isSilent:true});if(out)return out;return fallback},_parse3_exponent(self){const children=[];children.push(this._parse3_dice(self));while(this._parse3_match(self,Renderer.dice.tk.POW)){this._parse3_nextSym(self);children.push(this._parse3_dice(self))}return new Renderer.dice.parsed.Exponent(children)},_parse3_term(self){const children=[];children.push(this._parse3_exponent(self));while(this._parse3_match(self,Renderer.dice.tk.MULT)||this._parse3_match(self,Renderer.dice.tk.DIV)){children.push(this._parse3_nextSym(self));children.push(this._parse3_exponent(self))}return new Renderer.dice.parsed.Term(children)},_parse3_expression(self){const children=[];if(this._parse3_match(self,Renderer.dice.tk.ADD)||this._parse3_match(self,Renderer.dice.tk.SUB))children.push(this._parse3_nextSym(self));children.push(this._parse3_term(self));while(this._parse3_match(self,Renderer.dice.tk.ADD)||this._parse3_match(self,Renderer.dice.tk.SUB)){children.push(this._parse3_nextSym(self));children.push(this._parse3_term(self))}return new Renderer.dice.parsed.Expression(children)},DiceModMeta:class{constructor(){this.isDiceModifierGroup=true;this.isSuccessMode=false;this.mods=[]}}};Renderer.dice.tk={Token:class{constructor(type,value,asString,opts){opts=opts||{};this.type=type;this.value=value;this._asString=asString;if(opts.isDiceModifier)this.isDiceModifier=true;if(opts.diceModifierImplicit)this.diceModifierImplicit=true;if(opts.isSuccessMode)this.isSuccessMode=true}eq(other){return other&&other.type===this.type}toString(){if(this._asString)return this._asString;return this.toDebugString()}toDebugString(){return`${this.type}${this.value?` :: ${this.value}`:""}`}},_new(type,asString,opts){return new Renderer.dice.tk.Token(type,null,asString,opts)},TYP_NUMBER:"NUMBER",TYP_DICE:"DICE",TYP_SYMBOL:"SYMBOL",NUMBER(val){return new Renderer.dice.tk.Token(Renderer.dice.tk.TYP_NUMBER,val)}};Renderer.dice.tk.PAREN_OPEN=Renderer.dice.tk._new("PAREN_OPEN","(");Renderer.dice.tk.PAREN_CLOSE=Renderer.dice.tk._new("PAREN_CLOSE",")");Renderer.dice.tk.BRACE_OPEN=Renderer.dice.tk._new("BRACE_OPEN","{");Renderer.dice.tk.BRACE_CLOSE=Renderer.dice.tk._new("BRACE_CLOSE","}");Renderer.dice.tk.COMMA=Renderer.dice.tk._new("COMMA",",");Renderer.dice.tk.ADD=Renderer.dice.tk._new("ADD","+");Renderer.dice.tk.SUB=Renderer.dice.tk._new("SUB","-");Renderer.dice.tk.MULT=Renderer.dice.tk._new("MULT","*");Renderer.dice.tk.DIV=Renderer.dice.tk._new("DIV","/");Renderer.dice.tk.POW=Renderer.dice.tk._new("POW","^");Renderer.dice.tk.FLOOR=Renderer.dice.tk._new("FLOOR","floor");Renderer.dice.tk.CEIL=Renderer.dice.tk._new("CEIL","ceil");Renderer.dice.tk.ROUND=Renderer.dice.tk._new("ROUND","round");Renderer.dice.tk.AVERAGE=Renderer.dice.tk._new("AVERAGE","avg");Renderer.dice.tk.SIGN=Renderer.dice.tk._new("SIGN","sign");Renderer.dice.tk.ABS=Renderer.dice.tk._new("ABS","abs");Renderer.dice.tk.CBRT=Renderer.dice.tk._new("CBRT","cbrt");Renderer.dice.tk.SQRT=Renderer.dice.tk._new("SQRT","sqrt");Renderer.dice.tk.EXP=Renderer.dice.tk._new("EXP","exp");Renderer.dice.tk.LOG=Renderer.dice.tk._new("LOG","log");Renderer.dice.tk.RANDOM=Renderer.dice.tk._new("RANDOM","random");Renderer.dice.tk.TRUNC=Renderer.dice.tk._new("TRUNC","trunc");Renderer.dice.tk.POW=Renderer.dice.tk._new("POW","pow");Renderer.dice.tk.MAX=Renderer.dice.tk._new("MAX","max");Renderer.dice.tk.MIN=Renderer.dice.tk._new("MIN","min");Renderer.dice.tk.DICE=Renderer.dice.tk._new("DICE","d");Renderer.dice.tk.DROP_HIGHEST=Renderer.dice.tk._new("DH","dh",{isDiceModifier:true,diceModifierImplicit:1});Renderer.dice.tk.KEEP_HIGHEST=Renderer.dice.tk._new("KH","kh",{isDiceModifier:true,diceModifierImplicit:1});Renderer.dice.tk.DROP_LOWEST=Renderer.dice.tk._new("DL","dl",{isDiceModifier:true,diceModifierImplicit:1});Renderer.dice.tk.KEEP_LOWEST=Renderer.dice.tk._new("KL","kl",{isDiceModifier:true,diceModifierImplicit:1});Renderer.dice.tk.REROLL_EXACT=Renderer.dice.tk._new("REROLL","r",{isDiceModifier:true});Renderer.dice.tk.REROLL_GT=Renderer.dice.tk._new("REROLL_GT","r>",{isDiceModifier:true});Renderer.dice.tk.REROLL_GTEQ=Renderer.dice.tk._new("REROLL_GTEQ","r>=",{isDiceModifier:true});Renderer.dice.tk.REROLL_LT=Renderer.dice.tk._new("REROLL_LT","r<",{isDiceModifier:true});Renderer.dice.tk.REROLL_LTEQ=Renderer.dice.tk._new("REROLL_LTEQ","r<=",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_EXACT=Renderer.dice.tk._new("EXPLODE","x",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_GT=Renderer.dice.tk._new("EXPLODE_GT","x>",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_GTEQ=Renderer.dice.tk._new("EXPLODE_GTEQ","x>=",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_LT=Renderer.dice.tk._new("EXPLODE_LT","x<",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_LTEQ=Renderer.dice.tk._new("EXPLODE_LTEQ","x<=",{isDiceModifier:true});Renderer.dice.tk.COUNT_SUCCESS_EXACT=Renderer.dice.tk._new("COUNT_SUCCESS_EXACT","cs=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_GT=Renderer.dice.tk._new("COUNT_SUCCESS_GT","cs>",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_GTEQ=Renderer.dice.tk._new("COUNT_SUCCESS_GTEQ","cs>=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_LT=Renderer.dice.tk._new("COUNT_SUCCESS_LT","cs<",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_LTEQ=Renderer.dice.tk._new("COUNT_SUCCESS_LTEQ","cs<=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.MARGIN_SUCCESS_EXACT=Renderer.dice.tk._new("MARGIN_SUCCESS_EXACT","ms=",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_GT=Renderer.dice.tk._new("MARGIN_SUCCESS_GT","ms>",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_GTEQ=Renderer.dice.tk._new("MARGIN_SUCCESS_GTEQ","ms>=",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_LT=Renderer.dice.tk._new("MARGIN_SUCCESS_LT","ms<",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_LTEQ=Renderer.dice.tk._new("MARGIN_SUCCESS_LTEQ","ms<=",{isDiceModifier:true});Renderer.dice.AbstractSymbol=class{constructor(){this.type=Renderer.dice.tk.TYP_SYMBOL}eq(symbol){return symbol&&this.type===symbol.type}evl(meta){this.meta=meta;return this._evl(meta)}avg(meta){this.meta=meta;return this._avg(meta)}min(meta){this.meta=meta;return this._min(meta)}max(meta){this.meta=meta;return this._max(meta)}_evl(){throw new Error("Unimplemented!")}_avg(){throw new Error("Unimplemented!")}_min(){throw new Error("Unimplemented!")}_max(){throw new Error("Unimplemented!")}toString(){throw new Error("Unimplemented!")}addToMeta(meta,html,text){if(!meta)return;text=text||html;(meta.html=meta.html||[]).push(html);(meta.text=meta.text||[]).push(text)}};Renderer.dice.parsed={_PARTITION_EQ:(r,compareTo)=>r===compareTo,_PARTITION_GT:(r,compareTo)=>r>compareTo,_PARTITION_GTEQ:(r,compareTo)=>r>=compareTo,_PARTITION_LT:(r,compareTo)=>r<compareTo,_PARTITION_LTEQ:(r,compareTo)=>r<=compareTo,_handleModifiers(fnName,meta,vals,nodeMod,opts){opts=opts||{};const displayVals=vals.slice();const{mods:mods}=nodeMod;for(const mod of mods){vals.sort(SortUtil.ascSortProp.bind(null,"val")).reverse();const modNum=mod.numSym[fnName]();switch(mod.modSym.type){case Renderer.dice.tk.DROP_HIGHEST.type:case Renderer.dice.tk.KEEP_HIGHEST.type:case Renderer.dice.tk.DROP_LOWEST.type:case Renderer.dice.tk.KEEP_LOWEST.type:{const isHighest=mod.modSym.type.endsWith("H");const splitPoint=isHighest?modNum:vals.length-modNum;const highSlice=vals.slice(0,splitPoint);const lowSlice=vals.slice(splitPoint,vals.length);switch(mod.modSym.type){case Renderer.dice.tk.DROP_HIGHEST.type:case Renderer.dice.tk.KEEP_LOWEST.type:highSlice.forEach((val=>val.isDropped=true));break;case Renderer.dice.tk.KEEP_HIGHEST.type:case Renderer.dice.tk.DROP_LOWEST.type:lowSlice.forEach((val=>val.isDropped=true));break;default:throw new Error(`Unimplemented!`)}break}case Renderer.dice.tk.REROLL_EXACT.type:case Renderer.dice.tk.REROLL_GT.type:case Renderer.dice.tk.REROLL_GTEQ.type:case Renderer.dice.tk.REROLL_LT.type:case Renderer.dice.tk.REROLL_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.REROLL_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.REROLL_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.REROLL_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.REROLL_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.REROLL_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}const toReroll=vals.filter((val=>fnPartition(val.val,modNum)));toReroll.forEach((val=>val.isDropped=true));const nuVals=opts.fnGetRerolls(toReroll);vals.push(...nuVals);displayVals.push(...nuVals);break}case Renderer.dice.tk.EXPLODE_EXACT.type:case Renderer.dice.tk.EXPLODE_GT.type:case Renderer.dice.tk.EXPLODE_GTEQ.type:case Renderer.dice.tk.EXPLODE_LT.type:case Renderer.dice.tk.EXPLODE_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.EXPLODE_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.EXPLODE_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.EXPLODE_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.EXPLODE_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.EXPLODE_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}let tries=999;let lastLen;let toExplodeNext=vals;do{lastLen=vals.length;const[toExplode]=toExplodeNext.partition((roll=>!roll.isExploded&&fnPartition(roll.val,modNum)));toExplode.forEach((roll=>roll.isExploded=true));const nuVals=opts.fnGetExplosions(toExplode);toExplodeNext=nuVals;vals.push(...nuVals);displayVals.push(...nuVals)}while(tries-- >0&&vals.length!==lastLen);if(!~tries)JqueryUtil.doToast({type:"warning",content:`Stopped exploding after 999 additional rolls.`});break}case Renderer.dice.tk.COUNT_SUCCESS_EXACT.type:case Renderer.dice.tk.COUNT_SUCCESS_GT.type:case Renderer.dice.tk.COUNT_SUCCESS_GTEQ.type:case Renderer.dice.tk.COUNT_SUCCESS_LT.type:case Renderer.dice.tk.COUNT_SUCCESS_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.COUNT_SUCCESS_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.COUNT_SUCCESS_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.COUNT_SUCCESS_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.COUNT_SUCCESS_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.COUNT_SUCCESS_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}const successes=vals.filter((val=>fnPartition(val.val,modNum)));successes.forEach((val=>val.isSuccess=true));break}case Renderer.dice.tk.MARGIN_SUCCESS_EXACT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GTEQ.type:case Renderer.dice.tk.MARGIN_SUCCESS_LT.type:case Renderer.dice.tk.MARGIN_SUCCESS_LTEQ.type:{const total=vals.map((it=>it.val)).reduce(((valA,valB)=>valA+valB),0);const subDisplayDice=displayVals.map((r=>`[${Renderer.dice.parsed._rollToNumPart(r,opts.faces)}]`)).join("+");let delta;let subDisplay;switch(mod.modSym.type){case Renderer.dice.tk.MARGIN_SUCCESS_EXACT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GTEQ.type:{delta=total-modNum;subDisplay=`(${subDisplayDice})-${modNum}`;break}case Renderer.dice.tk.MARGIN_SUCCESS_LT.type:case Renderer.dice.tk.MARGIN_SUCCESS_LTEQ.type:{delta=modNum-total;subDisplay=`${modNum}-(${subDisplayDice})`;break}default:throw new Error(`Unimplemented!`)}while(vals.length){vals.pop();displayVals.pop()}vals.push({val:delta});displayVals.push({val:delta,htmlDisplay:subDisplay});break}default:throw new Error(`Unimplemented!`)}}return displayVals},_rollToNumPart(r,faces){if(faces==null)return r.val;return r.val===faces?`<span class="rll__max--muted">${r.val}</span>`:r.val===1?`<span class="rll__min--muted">${r.val}</span>`:r.val},Function:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const[symFunc]=this._nodes;switch(symFunc.type){case Renderer.dice.tk.FLOOR.type:case Renderer.dice.tk.CEIL.type:case Renderer.dice.tk.ROUND.type:case Renderer.dice.tk.SIGN.type:case Renderer.dice.tk.CBRT.type:case Renderer.dice.tk.SQRT.type:case Renderer.dice.tk.EXP.type:case Renderer.dice.tk.LOG.type:case Renderer.dice.tk.RANDOM.type:case Renderer.dice.tk.TRUNC.type:case Renderer.dice.tk.POW.type:case Renderer.dice.tk.MAX.type:case Renderer.dice.tk.MIN.type:{const[,...symExps]=this._nodes;this.addToMeta(meta,`${symFunc.toString()}(`);const args=[];symExps.forEach(((symExp,i)=>{if(i!==0)this.addToMeta(meta,`, `);args.push(symExp[fnName](meta))}));const out=Math[symFunc.toString()](...args);this.addToMeta(meta,")");return out}case Renderer.dice.tk.AVERAGE.type:{const[,symExp]=this._nodes;return symExp.avg(meta)}default:throw new Error(`Unimplemented!`)}}toString(){let out;const[symFunc,symExp]=this._nodes;switch(symFunc.type){case Renderer.dice.tk.FLOOR.type:case Renderer.dice.tk.CEIL.type:case Renderer.dice.tk.ROUND.type:case Renderer.dice.tk.AVERAGE.type:case Renderer.dice.tk.SIGN.type:case Renderer.dice.tk.ABS.type:case Renderer.dice.tk.CBRT.type:case Renderer.dice.tk.SQRT.type:case Renderer.dice.tk.EXP.type:case Renderer.dice.tk.LOG.type:case Renderer.dice.tk.RANDOM.type:case Renderer.dice.tk.TRUNC.type:case Renderer.dice.tk.POW.type:case Renderer.dice.tk.MAX.type:case Renderer.dice.tk.MIN.type:out=symFunc.toString();break;default:throw new Error(`Unimplemented!`)}out+=`(${symExp.toString()})`;return out}},Pool:class extends Renderer.dice.AbstractSymbol{constructor(nodesPool,nodeMod){super();this._nodesPool=nodesPool;this._nodeMod=nodeMod}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const vals=this._nodesPool.map((it=>{const subMeta={};return{node:it,val:it[fnName](subMeta),meta:subMeta}}));if(this._nodeMod&&vals.length){const isSuccessMode=this._nodeMod.isSuccessMode;const modOpts={fnGetRerolls:toReroll=>toReroll.map((val=>{const subMeta={};return{node:val.node,val:val.node[fnName](subMeta),meta:subMeta}})),fnGetExplosions:toExplode=>toExplode.map((val=>{const subMeta={};return{node:val.node,val:val.node[fnName](subMeta),meta:subMeta}}))};const displayVals=Renderer.dice.parsed._handleModifiers(fnName,meta,vals,this._nodeMod,modOpts);const asHtml=displayVals.map((v=>{const html=v.meta.html.join("");if(v.isDropped)return`<span class="rll__dropped">(${html})</span>`;else if(v.isExploded)return`<span class="rll__exploded">(</span>${html}<span class="rll__exploded">)</span>`;else if(v.isSuccess)return`<span class="rll__success">(${html})</span>`;else return`(${html})`})).join("+");const asText=displayVals.map((v=>`(${v.meta.text.join("")})`)).join("+");this.addToMeta(meta,asHtml,asText);if(isSuccessMode){return vals.filter((it=>!it.isDropped&&it.isSuccess)).length}else{return vals.filter((it=>!it.isDropped)).map((it=>it.val)).sum()}}else{this.addToMeta(meta,`${vals.map((it=>`(${it.meta.html.join("")})`)).join("+")}`,`${vals.map((it=>`(${it.meta.text.join("")})`)).join("+")}`);return vals.map((it=>it.val)).sum()}}toString(){return`{${this._nodesPool.map((it=>it.toString())).join(", ")}}${this._nodeMod?this._nodeMod.toString():""}`}},Factor:class extends Renderer.dice.AbstractSymbol{constructor(node,opts){super();opts=opts||{};this._node=node;this._hasParens=!!opts.hasParens}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){switch(this._node.type){case Renderer.dice.tk.TYP_NUMBER:{this.addToMeta(meta,this.toString());return Number(this._node.value)}case Renderer.dice.tk.TYP_SYMBOL:{if(this._hasParens)this.addToMeta(meta,"(");const out=this._node[fnName](meta);if(this._hasParens)this.addToMeta(meta,")");return out}default:throw new Error(`Unimplemented!`)}}toString(indent){let out;switch(this._node.type){case Renderer.dice.tk.TYP_NUMBER:out=this._node.value;break;case Renderer.dice.tk.TYP_SYMBOL:out=this._node.toString();break;default:throw new Error(`Unimplemented!`)}return this._hasParens?`(${out})`:out}},Dice:class extends Renderer.dice.AbstractSymbol{static _facesToValue(faces,fnName){switch(fnName){case"evl":return RollerUtil.randomise(faces);case"avg":return(faces+1)/2;case"min":return 1;case"max":return faces}}constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){if(this._nodes.length===1)return this._nodes[0][fnName](meta);const view=this._nodes.slice();const numSym=view.shift();let tmp=numSym[fnName]();while(view.length){if(Math.round(tmp)!==tmp)throw new Error(`Number of dice to roll (${tmp}) was not an integer!`);const facesSym=view.shift();const faces=facesSym[fnName]();if(Math.round(faces)!==faces)throw new Error(`Dice face count (${faces}) was not an integer!`);const isLast=view.length===0||view.length===1&&view.last().isDiceModifierGroup;tmp=this._invoke_handlePart(fnName,meta,view,tmp,faces,isLast)}return tmp}_invoke_handlePart(fnName,meta,view,num,faces,isLast){const rolls=[...new Array(num)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)})));let displayRolls;let isSuccessMode=false;if(view.length&&view[0].isDiceModifierGroup){const nodeMod=view[0];if(fnName==="evl"||fnName==="min"||fnName==="max"){isSuccessMode=nodeMod.isSuccessMode;const modOpts={faces:faces,fnGetRerolls:toReroll=>[...new Array(toReroll.length)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)}))),fnGetExplosions:toExplode=>[...new Array(toExplode.length)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)})))};displayRolls=Renderer.dice.parsed._handleModifiers(fnName,meta,rolls,nodeMod,modOpts)}view.shift()}else displayRolls=rolls;if(isLast){const asHtml=displayRolls.map((r=>{if(r.htmlDisplay)return r.htmlDisplay;const numPart=Renderer.dice.parsed._rollToNumPart(r,faces);if(r.isDropped)return`<span class="rll__dropped">[${numPart}]</span>`;else if(r.isExploded)return`<span class="rll__exploded">[</span>${numPart}<span class="rll__exploded">]</span>`;else if(r.isSuccess)return`<span class="rll__success">[${numPart}]</span>`;else return`[${numPart}]`})).join("+");const asText=displayRolls.map((r=>`[${r.val}]`)).join("+");this.addToMeta(meta,asHtml,asText)}if(fnName==="evl"){const maxRolls=rolls.filter((it=>it.val===faces&&!it.isDropped));const minRolls=rolls.filter((it=>it.val===1&&!it.isDropped));meta.allMax=meta.allMax||[];meta.allMin=meta.allMin||[];meta.allMax.push(maxRolls.length&&maxRolls.length===rolls.length);meta.allMin.push(minRolls.length&&minRolls.length===rolls.length)}if(isSuccessMode){return rolls.filter((it=>!it.isDropped&&it.isSuccess)).length}else{return rolls.filter((it=>!it.isDropped)).map((it=>it.val)).sum()}}toString(){if(this._nodes.length===1)return this._nodes[0].toString();const[numSym,facesSym]=this._nodes;let out=`${numSym.toString()}d${facesSym.toString()}`;for(let i=2;i<this._nodes.length;++i){const n=this._nodes[i];if(n.isDiceModifierGroup)out+=n.mods.map((it=>`${it.modSym.toString()}${it.numSym.toString()}`)).join("");else out+=`d${n.toString()}`}return out}},Exponent:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const view=this._nodes.slice();let val=view.pop()[fnName](meta);while(view.length){this.addToMeta(meta,"^");val=view.pop()[fnName](meta)**val}return val}toString(){const view=this._nodes.slice();let out=view.pop().toString();while(view.length)out=`${view.pop().toString()}^${out}`;return out}},Term:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){let out=this._nodes[0][fnName](meta);for(let i=1;i<this._nodes.length;i+=2){if(this._nodes[i].eq(Renderer.dice.tk.MULT)){this.addToMeta(meta," × ");out*=this._nodes[i+1][fnName](meta)}else if(this._nodes[i].eq(Renderer.dice.tk.DIV)){this.addToMeta(meta," ÷ ");out/=this._nodes[i+1][fnName](meta)}else throw new Error(`Unimplemented!`)}return out}toString(){let out=this._nodes[0].toString();for(let i=1;i<this._nodes.length;i+=2){if(this._nodes[i].eq(Renderer.dice.tk.MULT))out+=` * ${this._nodes[i+1].toString()}`;else if(this._nodes[i].eq(Renderer.dice.tk.DIV))out+=` / ${this._nodes[i+1].toString()}`;else throw new Error(`Unimplemented!`)}return out}},Expression:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const view=this._nodes.slice();let isNeg=false;if(view[0].eq(Renderer.dice.tk.ADD)||view[0].eq(Renderer.dice.tk.SUB)){isNeg=view.shift().eq(Renderer.dice.tk.SUB);if(isNeg)this.addToMeta(meta,"-")}let out=view[0][fnName](meta);if(isNeg)out=-out;for(let i=1;i<view.length;i+=2){if(view[i].eq(Renderer.dice.tk.ADD)){this.addToMeta(meta," + ");out+=view[i+1][fnName](meta)}else if(view[i].eq(Renderer.dice.tk.SUB)){this.addToMeta(meta," - ");out-=view[i+1][fnName](meta)}else throw new Error(`Unimplemented!`)}return out}toString(indent=0){let out="";const view=this._nodes.slice();let isNeg=false;if(view[0].eq(Renderer.dice.tk.ADD)||view[0].eq(Renderer.dice.tk.SUB)){isNeg=view.shift().eq(Renderer.dice.tk.SUB);if(isNeg)out+="-"}out+=view[0].toString(indent);for(let i=1;i<view.length;i+=2){if(view[i].eq(Renderer.dice.tk.ADD))out+=` + ${view[i+1].toString(indent)}`;else if(view[i].eq(Renderer.dice.tk.SUB))out+=` - ${view[i+1].toString(indent)}`;else throw new Error(`Unimplemented!`)}return out}}};if(!IS_VTT&&typeof window!=="undefined"){window.addEventListener("load",Renderer.dice._pInit)};
"use strict";class ScaleCreature{constructor(){this._LvlAbilityMods={"-1":[3,3,2,0],0:[3,3,2,0],1:[5,4,3,1],2:[5,4,3,1],3:[5,4,3,1],4:[6,5,3,2],5:[6,5,4,2],6:[7,5,3,2],7:[7,6,4,2],8:[7,6,4,3],9:[7,6,4,3],10:[8,7,5,3],11:[8,7,5,3],12:[8,7,5,4],13:[9,8,5,4],14:[9,8,5,4],15:[9,8,6,4],16:[10,9,6,5],17:[10,9,6,5],18:[10,9,6,5],19:[11,10,6,5],20:[11,10,7,6],21:[11,10,7,6],22:[11,10,8,6],23:[11,10,8,6],24:[13,12,9,7],25:[13,12,9,7]};this._LvlPerception={"-1":[9,8,5,2,0],0:[10,9,6,3,1],1:[11,10,7,4,2],2:[12,11,8,5,3],3:[14,12,9,6,4],4:[15,14,11,8,6],5:[17,15,12,9,7],6:[18,17,14,11,8],7:[20,18,15,12,10],8:[21,19,16,13,11],9:[23,21,18,15,12],10:[24,22,19,16,14],11:[26,24,21,18,15],12:[27,25,22,19,16],13:[29,26,23,20,18],14:[30,28,25,22,19],15:[32,29,26,23,20],16:[33,30,28,25,22],17:[35,32,29,26,23],18:[36,33,30,27,24],19:[38,35,32,29,26],20:[39,36,33,30,27],21:[41,38,35,32,28],22:[43,39,36,33,30],23:[44,40,37,34,31],24:[46,42,38,36,32],25:[46,42,38,36,32]};this._LvlSkills={"-1":[8,5,4,2,1],0:[9,6,5,3,2],1:[10,7,6,4,3],2:[11,8,7,5,4],3:[13,10,9,7,5],4:[15,12,10,8,7],5:[16,13,12,10,8],6:[18,15,13,11,9],7:[20,17,15,13,11],8:[21,18,16,14,12],9:[23,20,18,16,13],10:[25,22,19,17,15],11:[26,23,21,19,16],12:[28,25,22,20,17],13:[30,27,24,22,19],14:[31,28,25,23,20],15:[33,30,27,25,21],16:[35,32,28,26,23],17:[36,33,30,28,24],18:[38,35,31,29,25],19:[40,37,33,31,27],20:[41,38,34,32,28],21:[43,40,36,34,29],22:[45,42,37,35,31],23:[46,43,38,36,32],24:[48,45,40,38,33],25:[48,45,40,38,33]};this._LvlAC={"-1":[18,15,14,12],0:[19,16,15,13],1:[19,16,15,13],2:[21,18,17,15],3:[22,19,18,16],4:[24,21,20,18],5:[25,22,21,19],6:[27,24,23,21],7:[28,25,24,22],8:[30,27,26,24],9:[31,28,27,25],10:[33,30,29,27],11:[34,31,30,28],12:[36,33,32,30],13:[37,34,33,31],14:[39,36,35,33],15:[40,37,36,34],16:[42,39,38,36],17:[43,40,39,37],18:[45,42,41,39],19:[46,43,42,40],20:[48,45,44,42],21:[49,46,45,43],22:[51,48,47,45],23:[52,49,48,46],24:[54,51,50,48],25:[54,51,50,48]};this._LvlSavingThrows={"-1":[9,8,5,2,0],0:[10,9,6,3,1],1:[11,10,7,4,2],2:[12,11,8,5,3],3:[14,12,9,6,4],4:[15,14,11,8,6],5:[17,15,12,9,7],6:[18,17,14,11,8],7:[20,18,15,12,10],8:[21,19,16,13,11],9:[23,21,18,15,12],10:[24,22,19,16,14],11:[26,24,21,18,15],12:[27,25,22,19,16],13:[29,26,23,20,18],14:[30,28,25,22,19],15:[32,29,26,23,20],16:[33,30,28,25,22],17:[35,32,29,26,23],18:[36,33,30,27,24],19:[38,35,32,29,26],20:[39,36,33,30,27],21:[41,38,35,32,28],22:[43,39,36,33,30],23:[44,40,37,34,31],24:[46,42,38,36,32],25:[46,42,38,36,32]};this._LvlHP={"-1":[9,9,8,7,6,5],0:[20,17,16,14,13,11],1:[26,24,21,19,16,14],2:[40,36,32,28,25,21],3:[59,53,48,42,37,31],4:[78,72,63,57,48,42],5:[97,91,78,72,59,53],6:[123,115,99,91,75,67],7:[148,140,119,111,90,82],8:[173,165,139,131,105,97],9:[198,190,159,151,120,112],10:[223,215,179,171,135,127],11:[248,240,199,191,150,142],12:[273,265,219,211,165,157],13:[298,290,239,231,180,172],14:[323,315,259,251,195,187],15:[348,340,279,271,210,202],16:[373,365,299,291,225,217],17:[398,390,319,311,240,232],18:[423,415,339,331,255,247],19:[448,440,359,351,270,262],20:[473,465,379,371,285,277],21:[505,495,405,395,305,295],22:[544,532,436,424,329,317],23:[581,569,466,454,351,339],24:[633,617,508,492,383,367],25:[633,617,508,492,383,367]};this._regexHealingAbilities=/(healing |regeneration )(\d+)/g;this._LvlResistanceWeakness={"-1":[1,1],0:[3,1],1:[3,2],2:[5,2],3:[6,3],4:[7,4],5:[8,4],6:[9,5],7:[10,5],8:[11,6],9:[12,6],10:[13,7],11:[14,7],12:[15,8],13:[16,8],14:[17,9],15:[18,9],16:[19,9],17:[19,10],18:[20,10],19:[21,11],20:[22,11],21:[23,12],22:[24,12],23:[25,13],24:[26,13],25:[26,13]};this._LvlAttackBonus={"-1":[10,8,6,4],0:[10,8,6,4],1:[11,9,7,5],2:[13,11,9,7],3:[14,12,10,8],4:[16,14,12,9],5:[17,15,13,11],6:[19,17,15,12],7:[20,18,16,13],8:[22,20,18,15],9:[23,21,19,16],10:[25,23,21,17],11:[27,24,22,19],12:[28,26,24,20],13:[29,27,25,21],14:[31,29,27,23],15:[32,30,28,24],16:[34,32,30,25],17:[35,33,31,27],18:[37,35,33,28],19:[38,36,34,29],20:[40,38,36,31],21:[41,39,37,32],22:[43,41,39,33],23:[44,42,40,35],24:[46,44,42,36],25:[46,44,42,36]};this._LvlExpectedDamage={"-1":[4,3,3,2],0:[6,5,4,3],1:[8,6,5,4],2:[11,9,8,6],3:[15,12,10,8],4:[18,14,12,9],5:[20,16,13,11],6:[23,18,15,12],7:[25,20,17,13],8:[28,22,18,15],9:[30,24,20,16],10:[33,26,22,17],11:[35,28,23,19],12:[38,30,25,20],13:[40,32,27,21],14:[43,34,28,23],15:[45,36,30,24],16:[48,37,31,25],17:[50,38,32,26],18:[53,40,33,27],19:[55,42,35,28],20:[58,44,37,29],21:[60,46,38,31],22:[63,48,40,32],23:[65,50,42,33],24:[68,52,44,35],25:[68,52,44,35]};this._LvlDamageFormula={"-1":["1d6+1","1d4+1","1d4","1d4"],0:["1d6+3","1d6+2","1d4+2","1d4+1"],1:["1d8+4","1d6+3","1d6+2","1d4+2"],2:["1d12+4","1d10+4","1d8+4","1d6+3"],3:["1d12+8","1d10+6","1d8+6","1d6+5"],4:["2d10+7","2d8+5","2d6+5","2d4+4"],5:["2d12+7","2d8+7","2d6+6","2d4+6"],6:["2d12+10","2d8+9","2d6+8","2d4+7"],7:["2d12+12","2d10+9","2d8+8","2d6+6"],8:["2d12+15","2d10+11","2d8+9","2d6+8"],9:["2d12+17","2d10+13","2d8+11","2d6+9"],10:["2d12+20","2d12+13","2d10+11","2d6+10"],11:["2d12+22","2d12+15","2d10+12","2d8+10"],12:["3d12+19","3d10+14","3d8+12","3d6+10"],13:["3d12+21","3d10+16","3d8+14","3d6+11"],14:["3d12+24","3d10+18","3d8+15","3d6+13"],15:["3d12+26","3d12+17","3d10+14","3d6+14"],16:["3d12+29","3d12+18","3d10+15","3d6+15"],17:["3d12+31","3d12+19","3d10+16","3d6+16"],18:["3d12+34","3d12+20","3d10+17","3d6+17"],19:["4d12+29","4d10+20","4d8+17","4d6+14"],20:["4d12+32","4d10+22","4d8+19","4d6+15"],21:["4d12+34","4d10+24","4d8+20","4d6+17"],22:["4d12+37","4d10+26","4d8+22","4d6+18"],23:["4d12+39","4d12+24","4d10+20","4d6+19"],24:["4d12+42","4d12+26","4d10+22","4d6+21"],25:["4d12+42","4d12+26","4d10+22","4d6+21"]};this._LvlSpellAtkBonus={"-1":[11,8,5],0:[11,8,5],1:[12,9,6],2:[14,10,7],3:[15,12,9],4:[17,13,10],5:[18,14,11],6:[19,16,13],7:[21,17,14],8:[22,18,15],9:[24,20,17],10:[25,21,18],11:[26,22,19],12:[28,24,21],13:[29,25,22],14:[31,26,23],15:[32,28,25],16:[33,29,26],17:[35,30,27],18:[36,32,29],19:[38,33,30],20:[39,34,31],21:[40,36,33],22:[42,37,34],23:[43,38,35],24:[44,40,37],25:[44,40,37]};this._LvlSpellDC={"-1":[19,16,13],0:[19,16,13],1:[20,17,14],2:[22,18,15],3:[23,20,17],4:[25,21,18],5:[26,22,19],6:[27,24,21],7:[29,25,22],8:[30,26,23],9:[32,28,25],10:[33,29,26],11:[34,30,27],12:[36,32,29],13:[37,33,30],14:[39,34,31],15:[40,36,33],16:[41,37,34],17:[43,38,35],18:[44,40,37],19:[46,41,38],20:[47,42,39],21:[48,44,41],22:[50,45,42],23:[51,46,43],24:[52,48,45],25:[52,48,45]};this._LvlSpellsPerLvl={"-1":[2,0,0,0,0,0,0,0,0,0,0],0:[3,1,0,0,0,0,0,0,0,0,0],1:[5,2,0,0,0,0,0,0,0,0,0],2:[5,3,0,0,0,0,0,0,0,0,0],3:[5,3,2,0,0,0,0,0,0,0,0],4:[5,3,3,0,0,0,0,0,0,0,0],5:[5,3,3,2,0,0,0,0,0,0,0],6:[5,3,3,3,0,0,0,0,0,0,0],7:[5,3,3,3,2,0,0,0,0,0,0],8:[5,3,3,3,3,0,0,0,0,0,0],9:[5,3,3,3,3,2,0,0,0,0,0],10:[5,3,3,3,3,3,0,0,0,0,0],11:[5,3,3,3,3,3,2,0,0,0,0],12:[5,3,3,3,3,3,3,0,0,0,0],13:[5,3,3,3,3,3,3,2,0,0,0],14:[5,3,3,3,3,3,3,3,0,0,0],15:[5,3,3,3,3,3,3,3,2,0,0],16:[5,3,3,3,3,3,3,3,3,0,0],17:[5,3,3,3,3,3,3,3,3,2,0],18:[5,3,3,3,3,3,3,3,3,3,0],19:[5,3,3,3,3,3,3,3,3,3,1],20:[5,3,3,3,3,3,3,3,3,3,1],21:[5,3,3,3,3,3,3,3,3,3,2],22:[5,3,3,3,3,3,3,3,3,3,2],23:[5,3,3,3,3,3,3,3,3,3,3],24:[5,3,3,3,3,3,3,3,3,3,3],25:[5,3,3,3,3,3,3,3,3,3,3]};this._LvlAreaDamage={"-1":[2,4],0:[4,6],1:[5,7],2:[7,11],3:[9,14],4:[11,18],5:[12,21],6:[14,25],7:[15,28],8:[17,32],9:[18,35],10:[20,39],11:[21,42],12:[23,46],13:[24,49],14:[26,53],15:[27,56],16:[28,60],17:[29,63],18:[30,67],19:[32,70],20:[33,74],21:[35,77],22:[36,81],23:[38,84],24:[39,88],25:[39,88]};this._spells=null;this._rng=null;this._isProfNoLvl=ScaleCreature.storage.getItem(ScaleCreature._STORAGE_PROF_NO_LVL)==="true";this._toggleProfNoLvl_updateButtonClass()}_initRng(cr,toLvl){if(typeof toLvl!=="number")throw Error(`toLvl must be an integer!`);let h=CryptUtil.hashCode(toLvl);h=31*h+CryptUtil.hashCode(cr.source);h=31*h+CryptUtil.hashCode(cr.name);this._rng=Math.seed(h)}_adjustAll(creature,lvlIn,toLvl,opts){this._adjustAbilityMods(creature,lvlIn,toLvl,opts);this._adjustPerception(creature,lvlIn,toLvl,opts);this._adjustSkills(creature,lvlIn,toLvl,opts);this._adjustAC(creature,lvlIn,toLvl,opts);this._adjustSavingThrows(creature,lvlIn,toLvl,opts);this._adjustHP(creature,lvlIn,toLvl,opts);this._adjustResistancesWeaknesses(creature,lvlIn,toLvl,opts);this._adjustItems(creature,lvlIn,toLvl,opts);this._adjustAttacks(creature,lvlIn,toLvl,opts);this._adjustSpellCasting(creature,lvlIn,toLvl,opts);this._adjustAbilities(creature,lvlIn,toLvl,opts)}async scale(creature,toLvl){if(toLvl==null||toLvl==="Unknown")throw new Error("Attempting to scale unknown level!");this._initRng(creature,toLvl);creature=MiscUtil.copy(creature);const lvlIn=creature.level;if(lvlIn>25)throw new Error("Attempting to scale a creature beyond level 25!");if(lvlIn<-1)throw new Error("Attempting to scale a creature below level -1!");if(lvlIn===toLvl&&!this.isProfNoLvl())return creature;else if(lvlIn===toLvl+1){creature=this._scaleWeak(creature);creature._displayName=`Weak ${creature.name}`}else if(lvlIn===toLvl-1){creature=this._scaleElite(creature);creature._displayName=`Elite ${creature.name}`}else{const opts={};opts.flatAddProf=0;await this._pInitSpellCache();this._adjustAll(creature,lvlIn,toLvl,opts);creature.level=toLvl;if(lvlIn!==toLvl){creature._displayName=`${creature.name} (Lvl ${toLvl})`}}creature._isScaledLvl=true;creature._scaledLvl=toLvl;creature._originalLvl=creature._originalLvl||lvlIn;return creature}applyAdjustment(creature,adjustment){if(adjustment==="elite"){this._scaleElite(creature)}else if(adjustment==="weak"){this._scaleWeak(creature)}else{throw new Error("Unknown adjustment.")}}applyVarRules(creature){if(!this.isProfNoLvl())return creature;const level=creature.level;this._initRng(creature,level);creature=JSON.parse(JSON.stringify(creature));const opts={};opts.flatAddProf=this.isProfNoLvl()?-level:0;this._adjustAll(creature,level,level,opts);return creature}_scaleElite(creature){const opts={};opts.flatAddProf=2;opts.flatAddDamage=2;opts.flatAddDamageLimited=4;creature=this._scaleEliteWeak(creature,opts);if(creature.level<2)creature.defenses.hp[0].hp+=10;else if(creature.level<5)creature.defenses.hp[0].hp+=15;else if(creature.level<20)creature.defenses.hp[0].hp+=20;else creature.defenses.hp[0].hp+=30;creature.level+=1;return creature}_scaleWeak(creature){const opts={};opts.flatAddProf=-2;opts.flatAddDamage=-2;opts.flatAddDamageLimited=-4;creature=this._scaleEliteWeak(creature,opts);if(creature.level<2)creature.defenses.hp[0].hp-=10;else if(creature.level<5)creature.defenses.hp[0].hp-=15;else if(creature.level<20)creature.defenses.hp[0].hp-=20;else creature.defenses.hp[0].hp-=30;creature.level-=1;return creature}_scaleEliteWeak(creature,opts){Object.keys(creature.defenses.ac).forEach((key=>{if(key!=="abilities")creature.defenses.ac[key]+=opts.flatAddProf}));["fort","ref","will"].forEach((st=>Object.keys(creature.defenses.savingThrows[st]).forEach((key=>creature.defenses.savingThrows[st][key]+=opts.flatAddProf))));Object.keys(creature.perception).forEach((key=>creature.perception[key]+=opts.flatAddProf));if(Object.keys(creature.skills).length){Object.keys(creature.skills).forEach((skill=>{Object.keys(creature.skills[skill]).forEach((key=>{if(key!=="note")creature.skills[skill][key]+=opts.flatAddProf}))}))}if(creature.spellcasting!=null){creature.spellcasting.forEach((sc=>{if(sc.DC)sc.DC+=opts.flatAddProf;if(sc.attack)sc.attack+=opts.flatAddProf}))}if(creature.attacks){creature.attacks.forEach((a=>{a.attack+=opts.flatAddProf;a.damage=a.damage.replace(/(\d+d\d+)([+-]?\d*)/,((formula,formulaNoMod,mod)=>{if(!mod)return`${formula}${Parser.numToBonus(opts.flatAddDamage)}`;else{const newMod=Number(mod)+opts.flatAddDamage;if(newMod===0)return`${formulaNoMod}`;else return`${formulaNoMod}${Parser.numToBonus(newMod)}`}}))}))}const adjustAbility=ab=>{const{isLimited:isLimited,isArea:isArea}=this._isAbilityAreaLimited(ab);const bonus=isLimited?opts.flatAddDamageLimited:opts.flatAddDamage;if(ab.type==="affliction")ab.DC+=opts.flatAddProf;if(ab.entries){ab.entries=ab.entries.map((e=>{if(typeof e==="string"){e=e.replaceAll(/ DC (\d+)(?!\d* flat)/g,((...m)=>` DC ${Number(m[1])+opts.flatAddProf}`));e=e.replaceAll(/@hit (\d+)/g,((...m)=>`@hit ${Number(m[1])+opts.flatAddProf}`));e=e.replaceAll(/@damage (\d+d\d+)([+-]?\d*)/g,((formula,formulaNoMod,mod)=>{if(!mod)return`@damage ${formulaNoMod}${bonus>0?"+":""}${bonus}`;else{if(Number(mod)+bonus>0)return`@damage ${formulaNoMod}+${Number(mod)+bonus}`;else if(Number(mod)+bonus<0)return`@damage ${formulaNoMod}${Number(mod)+bonus}`;else return`@damage ${formulaNoMod}`}}))}return e}))}};if(creature.abilities)Object.keys(creature.abilities).forEach((k=>creature.abilities[k].forEach(adjustAbility)));return creature}_scaleValue(lvlIn,toLvl,value,map,precision=1){const rangesIn=map[lvlIn];const toRanges=map[toLvl];const lowerIdx=rangesIn.findIndex((it=>it<value));const upperIdx=rangesIn.length-1-MiscUtil.copy(rangesIn).reverse().findIndex((it=>it>value));const a=rangesIn[lowerIdx]||value-(rangesIn[upperIdx]-value);const b=rangesIn[upperIdx]||value+(value-rangesIn[lowerIdx]);let c,d;if(lowerIdx===-1)c=toRanges[upperIdx]-(b-a);else c=toRanges[lowerIdx];if(upperIdx===rangesIn.length)d=c+(b-a);else d=toRanges[upperIdx];return Math.round(precision*((value-a)*((d-c)/(b-a))+c))/precision}_getDiceEV(diceExp){diceExp=diceExp.replace(/\s*/g,"");const asAverages=diceExp.replace(/d(\d+)/gi,((...m)=>` * ${(Number(m[1])+1)/2}`));return MiscUtil.expEval(asAverages)}_scaleDice(initFormula,expectation,opts){opts=opts||{};if(this._getDiceEV(initFormula)===expectation)return initFormula;const targetDice=opts.noMod?expectation:expectation/2;const dice=Number(initFormula.match(/d(\d+)/)[1]);const numDice=Math.max(1,Math.round(targetDice*2/(dice+1)));const mod=opts.noMod?0:Math.max(0,Math.round(expectation-numDice*(dice+1)/2));return`${numDice}d${dice}${mod?`+${mod}`:""}`}_adjustAbilityMods(creature,lvlIn,toLvl,opts){Object.keys(creature.abilityMods).forEach((abMod=>{const mod=creature.abilityMods[abMod];const levelDiff=toLvl-lvlIn;if(mod<-3){}else if(mod<0){creature.abilityMods[abMod]+=Math.floor(levelDiff/5)}else{creature.abilityMods[abMod]=this._scaleValue(lvlIn,toLvl,mod,this._LvlAbilityMods)}}))}_adjustPerception(creature,lvlIn,toLvl,opts){const defaultPerception=creature.perception.std;creature.perception.std=this._scaleValue(lvlIn,toLvl,defaultPerception,this._LvlPerception)+opts.flatAddProf;Object.keys(creature.perception).forEach((key=>{if(key!=="std")creature.perception[key]+=creature.perception.std-defaultPerception}))}_adjustSkills(creature,lvlIn,toLvl,opts){if(Object.keys(creature.skills??{}).length){Object.keys(creature.skills).forEach((skill=>{const defaultSkill=creature.skills[skill].std;creature.skills[skill].std=this._scaleValue(lvlIn,toLvl,defaultSkill,this._LvlSkills)+opts.flatAddProf;Object.keys(creature.skills[skill]).forEach((key=>{if(key!=="std"&&key!=="note")creature.skills[skill][key]+=creature.skills[skill].std-defaultSkill}))}))}}_adjustAC(creature,lvlIn,toLvl,opts){const defaultAc=creature.defenses.ac.std;creature.defenses.ac.std=this._scaleValue(lvlIn,toLvl,defaultAc,this._LvlAC)+opts.flatAddProf;Object.keys(creature.defenses.ac).forEach((key=>{if(key!=="std"&&key!=="abilities")creature.defenses.ac[key]+=creature.defenses.ac.std-defaultAc}))}_adjustSavingThrows(creature,lvlIn,toLvl,opts){["fort","ref","will"].forEach((st=>{const defaultSave=creature.defenses.savingThrows[st].std;creature.defenses.savingThrows[st].std=this._scaleValue(lvlIn,toLvl,defaultSave,this._LvlSavingThrows)+opts.flatAddProf;Object.keys(creature.defenses.savingThrows[st]).forEach((key=>{if(key!=="std")creature.defenses.savingThrows[st][key]+=creature.defenses.savingThrows[st].std-defaultSave}))}))}_adjustItems(creature,lvlIn,toLvl,opts){}_adjustHP(creature,lvlIn,toLvl,opts){for(let hp of creature.defenses.hp){hp.hp=this._scaleValue(lvlIn,toLvl,hp.hp,this._LvlHP);if(hp.hp>100){hp.hp+=2;hp.hp-=hp.hp%5}for(let i=0;i<(hp.abilities||[]).length;i++){hp.abilities[i]=hp.abilities[i].replace(this._regexHealingAbilities,((match,name,amt)=>{const amount=this._scaleValue(lvlIn,toLvl,Number(amt),this._LvlExpectedDamage);return`${name}${amount}`}))}}}_adjustResistancesWeaknesses(creature,lvlIn,toLvl,opts){if(creature.defenses.resistances){creature.defenses.resistances.forEach((r=>{if(r.amount)r.amount=this._scaleValue(lvlIn,toLvl,r.amount,this._LvlResistanceWeakness)}))}if(creature.defenses.weaknesses){creature.defenses.weaknesses.forEach((w=>{if(w.amount)w.amount=this._scaleValue(lvlIn,toLvl,w.amount,this._LvlResistanceWeakness)}))}}_adjustAttacks(creature,lvlIn,toLvl,opts){if(creature.attacks==null)return;creature.attacks.forEach((a=>{a.attack=this._scaleValue(lvlIn,toLvl,a.attack,this._LvlAttackBonus)+opts.flatAddProf;if(a.damage){const dpr=(a.damage.match(/\d+d\d+[+-]?\d*/g)||[]).map((f=>this._getDiceEV(f))).reduce(((a,b)=>a+b),0);const scaledDpr=this._scaleValue(lvlIn,toLvl,dpr,this._LvlExpectedDamage,2);a.damage=a.damage.replaceAll(/\d+d\d+([+-]?\d*)/g,((formula,mod)=>{const scaleTo=this._getDiceEV(formula)*scaledDpr/dpr;const opts=mod?{}:{noMod:true};return this._scaleDice(formula,scaleTo,opts)}))}}))}_adjustSpellCasting(creature,lvlIn,toLvl,opts){if(creature.spellcasting==null)return;creature.spellcasting.forEach((sc=>{if(sc.DC)sc.DC=this._scaleValue(lvlIn,toLvl,sc.DC,this._LvlSpellDC)+opts.flatAddProf;if(sc.attack)sc.attack=this._scaleValue(lvlIn,toLvl,sc.attack,this._LvlSpellAtkBonus)+opts.flatAddProf;if(!this._spells)return;if(sc.type==="Prepared"||sc.type==="Spontaneous"){const countPreperations=lvl=>sc.entry[lvl].spells.map((it=>Number(it.amount)||1)).reduce(((a,b)=>a+b),0);const highestSpell=Object.keys(sc.entry).map((it=>Number(it))).filter(Number).sort(SortUtil.ascSort).last();const bonusSpells=Math.max(highestSpell!=null?(sc.entry[highestSpell].slots||countPreperations(highestSpell))-this._LvlSpellsPerLvl[lvlIn][highestSpell]:0,0);if(lvlIn>toLvl){for(let i=10;i>Math.ceil(toLvl/2);i--){delete sc.entry[i]}sc.entry[0].level=Math.ceil(toLvl/2);if(sc.type==="Prepared"){for(let i=Math.ceil(toLvl/2);i>-1;i--){const preps=this._LvlSpellsPerLvl[toLvl][i]+bonusSpells;let tries=20;while(countPreperations(i)>preps&&tries-- >0){const rand=RollerUtil.roll(sc.entry[i].spells.length,this._rng);if(Number(sc.entry[i].spells[rand].amount)){if(Number(sc.entry[i].spells[rand].amount)>2)sc.entry[i].spells[rand].amount-=1;else delete sc.entry[i].spells[rand].amount}else if(sc.entry[i].spells[rand].amount==null)sc.entry[i].spells.splice(rand,1)}}}else if(sc.type==="Spontaneous"){for(let i=Math.ceil(toLvl/2);i>0;i--){sc.entry[i].slots=this._LvlSpellsPerLvl[toLvl][i]+bonusSpells}}}else{sc.entry[0].level=Math.min(10,Math.ceil(toLvl/2));const addSpell=lvl=>{let randomSpell=null;let tries=20;while((sc.entry[lvl].spells.map((it=>it.name.toLowerCase())).includes(randomSpell)||!randomSpell)&&tries-- >0){const tradition=sc.tradition.toLowerCase();if(!this._spells[tradition])return;randomSpell=this._spells[tradition][lvl][RollerUtil.roll(this._spells[tradition][lvl].length,this._rng)]}sc.entry[lvl].spells.push({name:randomSpell})};if(sc.type==="Prepared"){for(let i=highestSpell;i<=Math.min(10,Math.ceil(toLvl/2));i++){const preps=this._LvlSpellsPerLvl[toLvl][i]+bonusSpells;sc.entry[i]=sc.entry[i]||{spells:[]};while(countPreperations(i)<preps){addSpell(i)}sc.entry[i].spells.last().notes=`or other {@filter ${sc.tradition.toLowerCase()} ${Parser.getOrdinalForm(i)} level spells|spells||source=CRB|tradition & spell list=${sc.tradition}|level=${i}}`}}else if(sc.type==="Spontaneous"){for(let i=highestSpell;i<=Math.min(10,Math.ceil(toLvl/2));i++){sc.entry[i]=sc.entry[i]||{spells:[]};sc.entry[i].slots=this._LvlSpellsPerLvl[toLvl][i]+bonusSpells;while(sc.entry[i].spells.length<sc.entry[i].slots-1){addSpell(i)}sc.entry[i].spells.last().notes=`or other {@filter ${sc.tradition.toLowerCase()} ${Parser.getOrdinalForm(i)} level spells|spells||source=CRB|tradition & spell list=${sc.tradition}|level=${i}}`}}}}}))}async _pInitSpellCache(){if(this._spells)return Promise.resolve();this._spells={};const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/spells-crb.json`);this.__initSpellCache(data)}__initSpellCache(data){data.spell.forEach((sp=>{(sp.traditions||[]).forEach((t=>{let it=this._spells[t]=this._spells[t]||{};it=it[sp.level]=it[sp.level]||[];it.push(sp.name.toLowerCase())}))}))}_adjustAbilities(creature,lvlIn,toLvl,opts){const adjustAbility=ab=>{const{isLimited:isLimited,isArea:isArea}=this._isAbilityAreaLimited(ab);if(ab.type==="affliction"){ab.DC=this._scaleValue(lvlIn,toLvl,ab.DC,this._LvlSpellDC)+opts.flatAddProf;for(let s of ab.stages){s.entry.replaceAll(/@damage (\d+d\d+[+-]?\d*)/g,((...m)=>`@damage ${this._scaleDice(m[1],this._scaleValue(lvlIn,toLvl,this._getDiceEV(m[1]),this._LvlExpectedDamage))}`))}}if(ab.entries){ab.entries=ab.entries.map((e=>{if(typeof e==="string"){e=e.replaceAll(/ (?:{@dc|DC) (\d+)(?:\}|)(?!\d* flat)/g,((...m)=>` DC ${this._scaleValue(lvlIn,toLvl,Number(m[1]),this._LvlSpellDC)+opts.flatAddProf}`));e=e.replaceAll(/@hit (\d+)/g,((...m)=>`@hit ${this._scaleValue(lvlIn,toLvl,Number(m[1]),this._LvlAttackBonus)+opts.flatAddProf}`));if(lvlIn!==toLvl){e=e.replaceAll(/@damage (\d+d\d+[+-]?\d*)/g,((...m)=>{const scaleTo=isArea?this._LvlAreaDamage[toLvl][Number(isLimited)]/this._LvlAreaDamage[lvlIn][Number(isLimited)]*this._getDiceEV(m[1]):this._scaleValue(lvlIn,toLvl,this._getDiceEV(m[1]),this._LvlExpectedDamage);return`@damage ${this._scaleDice(m[1],scaleTo)}`}))}}return e}))}};if(creature.abilities)Object.keys(creature.abilities).forEach((k=>creature.abilities[k].forEach(adjustAbility)))}_isAbilityAreaLimited(ab){let isArea=Boolean(ab.area);let isLimited=false;const entry=(ab.entries||[]).filter((it=>typeof it==="string")).join(" ");if(entry.match(/foot (cone|line|burst|emanation|cylinder)/i))isArea=true;if(entry.match(/can.t use .+ again\W/i))isLimited=true;return{isLimited:isLimited,isArea:isArea}}toggleProfNoLvl(){const profNoLvl=!this.isProfNoLvl();this._isProfNoLvl=profNoLvl;ScaleCreature.storage.setItem(ScaleCreature._STORAGE_PROF_NO_LVL,profNoLvl);this._toggleProfNoLvl_updateButtonClass();if(UrlUtil.getCurrentPage()===UrlUtil.PG_BESTIARY){const cr=bestiaryPage._dataList[Hist.lastLoadedId];const scaleTo=Hist.getSubHash(VeCt.HASH_CR_SCALED);if(scaleTo){this.scale(cr,Number(scaleTo)).then((scaled=>bestiaryPage._renderStatblock(scaled,true)))}else bestiaryPage._renderStatblock(cr)}}_toggleProfNoLvl_updateButtonClass(){if(this._isProfNoLvl)document.querySelectorAll(".btn-profnolvl").forEach((node=>node.className=`${node.className} active`));else document.querySelectorAll(".btn-profnolvl").forEach((node=>node.className=node.className.split(" ").filter((it=>it!=="active")).join(" ")))}isProfNoLvl(){return this._isProfNoLvl}}ScaleCreature._STORAGE_PROF_NO_LVL="ScaleCreature_prof-no-lvl";try{ScaleCreature.storage=window.localStorage}catch(e){ScaleCreature.storage={getItem(){return false},setItem(k,v){}}}const scaleCreature=new ScaleCreature;;
"use strict";class Hist{static hashChange(forceLoad){if(Hist.isHistorySuppressed){Hist.setSuppressHistory(false);return}const[link,...sub]=Hist.getHashParts();let blankFilterLoad=false;if(link!==Hist.lastLoadedLink||sub.length===0||forceLoad){Hist.lastLoadedLink=link;if(link===HASH_BLANK){blankFilterLoad=true}else{const listItem=Hist.getActiveListItem(link);if(listItem==null){if(typeof pHandleUnknownHash==="function"&&window.location.hash.length&&Hist._lastUnknownLink!==link){Hist._lastUnknownLink=link;pHandleUnknownHash(link,sub);return}else{Hist._freshLoad();return}}const toLoad=listItem.ix;if(toLoad===undefined)Hist._freshLoad();else{Hist.lastLoadedId=listItem.ix;loadHash(listItem.ix);document.title=`${listItem.name?`${listItem.name} - `:""}Pf2eTools`}}}if(typeof loadSubHash==="function"&&(sub.length>0||forceLoad))loadSubHash(sub);if(blankFilterLoad)Hist._freshLoad()}static init(initialLoadComplete){window.onhashchange=Hist.hashChange;if(window.location.hash.length){Hist.hashChange()}else{Hist._freshLoad()}if(initialLoadComplete)Hist.initialLoad=false}static setSuppressHistory(val){Hist.isHistorySuppressed=val}static getSelectedListItem(){const[link]=Hist.getHashParts();return Hist.getActiveListItem(link)}static getSelectedListElementWithLocation(){const[link]=Hist.getHashParts();return Hist.getActiveListItem(link,true)}static getHashParts(){return Hist.util.getHashParts(window.location.hash)}static getDoubleHashParts(){return Hist.util.getDoubleHashParts(window.location.hash)}static getActiveListItem(link,getIndex){const primaryLists=ListUtil.getPrimaryLists();if(primaryLists&&primaryLists.length){for(let x=0;x<primaryLists.length;++x){const list=primaryLists[x];const foundItemIx=list.items.findIndex((it=>it.values.hash===link));if(~foundItemIx){if(getIndex)return{item:list.items[foundItemIx],x:x,y:foundItemIx,list:list};return list.items[foundItemIx]}}}}static _freshLoad(){setTimeout((()=>{const goTo=$("#listcontainer").find(".list a").attr("href");if(goTo){const parts=location.hash.split(HASH_PART_SEP);const fullHash=`${goTo}${parts.length>1?`${HASH_PART_SEP}${parts.slice(1).join(HASH_PART_SEP)}`:""}`;location.replace(fullHash)}}),1)}static cleanSetHash(toSet){window.location.hash=Hist.util.getCleanHash(toSet)}static getHashSource(){const[link]=Hist.getHashParts();return link?link.split(HASH_LIST_SEP).last():null}static getSubHash(key){return Hist.util.getSubHash(window.location.hash,key)}static setSubhash(key,val){const nxtHash=Hist.util.setSubhash(window.location.hash,key,val);Hist.cleanSetHash(nxtHash)}static setMainHash(hash){const subHashPart=Hist.util.getHashParts(window.location.hash).slice(1).join(HASH_PART_SEP);Hist.cleanSetHash([hash,subHashPart].filter(Boolean).join(HASH_PART_SEP))}static replaceHistoryHash(hash){window.history.replaceState({},document.title,`${location.origin}${location.pathname}#${hash}`)}}Hist.lastLoadedLink=null;Hist._lastUnknownLink=null;Hist.lastLoadedId=null;Hist.initialLoad=true;Hist.isHistorySuppressed=false;Hist.util=class{static getCleanHash(hash){return hash.replace(/,+/g,",").replace(/,$/,"").toLowerCase()}static getHashParts(location){if(location[0]==="#")location=location.slice(1);return location.toLowerCase().replace(/%27/g,"'").split(HASH_PART_SEP)}static getDoubleHashParts(location){if(location[0]==="#")location=location.slice(1);let parts=location.split("#").length===2?location.split("#"):location.split("#").concat([""]);return parts.map((p=>Hist.util.getHashParts(p)))}static getSubHash(location,key){const[link,...sub]=Hist.util.getHashParts(location);const hKey=`${key}${HASH_SUB_KV_SEP}`;const part=sub.find((it=>it.startsWith(hKey)));if(part)return part.slice(hKey.length);return null}static setSubhash(location,key,val){if(key.endsWith(HASH_SUB_KV_SEP))key=key.slice(0,-1);const[link,...sub]=Hist.util.getHashParts(location);if(!link)return"";const hKey=`${key}${HASH_SUB_KV_SEP}`;const out=[link];if(sub.length)sub.filter((it=>!it.startsWith(hKey))).forEach((it=>out.push(it)));if(val!=null)out.push(`${hKey}${val}`);return Hist.util.getCleanHash(out.join(HASH_PART_SEP))}};