{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "entry.json",
	"title": "Entry",
	"description": "A recursively renderable object.",
	"version": "1.5.3",
	"definitions": {
		"_arrayOfSpell": {
			"type": "array",
			"uniqueItems": true,
			"items": {
				"oneOf": [
					{
						"type": "string"
					},
					{
						"type": "object",
						"properties": {
							"entry": {
								"type": "string"
							},
							"hidden": {
								"type": "boolean"
							}
						},
						"required": [
							"entry",
							"hidden"
						]
					}
				]
			}
		},
		"mediaHref": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "internal"
						},
						"path": {
							"type": "string"
						}
					},
					"required": [
						"path"
					],
					"additionalProperties": false
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "external"
						},
						"url": {
							"type": "string"
						}
					},
					"required": [
						"url"
					],
					"additionalProperties": false
				}
			]
		},
		"entry": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"page": {
					"type": "integer"
				},
				"id": {
					"type": "string"
				}
			},
			"required": [
				"type"
			]
		},
		"entrySection": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "section"
						},
						"name": {
							"type": "string"
						},
						"alias": {
							"description": "The alias of the entry, used by Omnisearch for more results, for ex. 'Déjà vu' and an alias 'Deja Vu'.",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"reference": {
							"$comment": "Add the source requirement to the schema if reference is true.",
							"description": "Adds a reference string to the entry. Requires a source.",
							"type": "object",
							"properties": {
								"auto": {
									"description": "The hopefully working automatic setting.",
									"type": "boolean",
									"const": true
								},
								"note": {
									"description": "Custom note to insert.",
									"type": "array",
									"items": {
										"$ref": "#"
									}
								},
								"index": {
									"description": "Index at which it should insert the reference, starts from 0.",
									"type": "integer"
								}
							}
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"source": {
							"type": "string"
						},
						"id": {
							"type": "string"
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryEntries": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "entries"
						},
						"name": {
							"type": "string"
						},
						"alias": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"source": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"style": {
							"type": "string"
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryPF2-hx": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"oneOf": [
								{
									"const": "pf2-h1"
								},
								{
									"const": "pf2-h2"
								},
								{
									"const": "pf2-h3"
								},
								{
									"const": "pf2-h4"
								},
								{
									"const": "pf2-h5"
								},
								{
									"const": "pf2-brown-box"
								},
								{
									"const": "pf2-sample-box"
								},
								{
									"const": "pf2-sidebar"
								}
							]
						},
						"name": {
							"type": "string"
						},
						"alias": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"level": {
							"type": "integer"
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"source": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"collapsible": {
							"type": "boolean"
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryPF2-title": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "pf2-title"
						},
						"name": {
							"type": "string"
						},
						"alias": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"level": {
							"type": "integer"
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"source": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"collapsible": {
							"type": "boolean"
						}
					},
					"required": [
						"type",
						"name"
					],
					"additionalProperties": false
				}
			]
		},
		"entriesOtherSource": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "entriesOtherSource"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"source": {
							"type": "string"
						},
						"page": {
							"type": "integer"
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entriesAbilityBlock": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"$ref": "utils.json#/definitions/abilityBlock",
					"required": [
						"type",
						"entries"
					]
				}
			]
		},
		"entriesLevelEffect": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "lvlEffect"
						},
						"entries": {
							"type": "array",
							"items": {
								"properties": {
									"entry": {
										"$ref": "#"
									},
									"range": {
										"type": "string"
									}
								},
								"additionalProperties": false,
								"required": [
									"entry",
									"range"
								]
							},
							"minItems": 1
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entriesSuccessDegree": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "successDegree"
						},
						"entries": {
							"type": "object",
							"patternProperties": {
								"^((Critical )?(Success|Failure))$": {
									"type": [
										"array",
										"string"
									],
									"items": {
										"$ref": "#"
									},
									"minItems": 1
								},
								"^Special$": {
									"type": [
										"array",
										"string"
									],
									"items": {
										"$ref": "#"
									},
									"minItems": 1
								}
							},
							"additionalProperties": false,
							"minProperties": 1
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entriesStatblock": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "data"
						},
						"tag": {
							"$ref": "utils.json#/definitions/tags"
						},
						"name": {
							"type": "string"
						},
						"source": {
							"type": "string"
						}
					},
					"minProperties": 4,
					"additionalProperties": false
				}
			]
		},
		"entriesAffliction": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"$ref": "utils.json#/definitions/afflictionBlock"
				}
			]
		},
		"entryQuote": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "quote"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"by": {
							"type": "string"
						},
						"from": {
							"type": "string"
						},
						"skipMarks": {
							"description": "If the automatically-inserted quotation marks should be skipped.",
							"type": "boolean"
						},
						"skipItalics": {
							"type": "boolean"
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryInlineEntries": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "inline"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryEntriesInlineEntries": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "inlineBlock"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryOptions": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "options"
						},
						"count": {
							"description": "Used to specify how many of the listed options can be chosen as e.g. permanent character features. Leave blank for transient choices.",
							"type": "integer"
						},
						"name": {
							"type": "string"
						},
						"style": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryTable": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"source": {
							"type": "string",
							"$ref": "utils.json#/definitions/sourceList"
						},
						"id": {
							"type": "string",
							"pattern": "^\\d+(-?\\d+)?$"
						},
						"type": {
							"const": "table"
						},
						"caption": {
							"type": "string"
						},
						"isStriped": {
							"type": "boolean"
						},
						"rollable": {
							"type": "boolean"
						},
						"labelRowIdx": {
							"type": "array",
							"description": "Indices of rows that are labels.\n If the value is [ ], no rows are rendered as labels.",
							"items": {
								"type": "integer",
								"minimum": 0
							},
							"default": 0
						},
						"labelColIdx": {
							"type": "array",
							"description": "Indices of columns that are labels.\n If the value is [ ], no columns are rendered as labels.",
							"items": {
								"type": "integer",
								"minimum": 0
							},
							"default": null
						},
						"isNameGenerator": {
							"type": "boolean",
							"description": "Uses the result rolled to construct a name from multiple columns, such as Prefix, Given, Family, Suffix names etc."
						},
						"style": {
							"type": "string"
						},
						"spans": {
							"type": "array",
							"items": {
								"type": "array",
								"items": {
									"type": "array",
									"items": {
										"type": "integer",
										"minimum": 1
									},
									"maxItems": 2,
									"minItems": 2
								},
								"minItems": 1
							},
							"minItems": 1
						},
						"colSizes": {
							"type": "array",
							"items": {
								"type": "number",
								"exclusiveMinimum": 0
							},
							"minItems": 1
						},
						"colLabels": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"minItems": 1
						},
						"colStyles": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"minItems": 1
						},
						"rowLabels": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"minItems": 1
						},
						"rowStyles": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"minItems": 1
						},
						"cellStyles": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"row": {
										"type": "integer",
										"minimum": 0
									},
									"col": {
										"type": "integer",
										"minimum": 0
									},
									"style": {
										"type": "string"
									}
								},
								"additionalProperties": false,
								"required": [
									"row",
									"col",
									"style"
								]
							},
							"minItems": 1,
							"uniqueItems": true
						},
						"rows": {
							"type": "array",
							"items": {
								"anyOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#"
										}
									},
									{
										"$ref": "#/definitions/entryTableRow"
									},
									{
										"$ref": "#/definitions/entryTableMultiRow"
									}
								]
							},
							"minItems": 1
						},
						"intro": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"footnotes": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"alias": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"minItems": 1,
							"uniqueItems": true
						}
					},
					"required": [
						"rows"
					],
					"additionalProperties": false
				}
			]
		},
		"entryTableGroup": {
			"description": "Used to group related tables together; has no effect on rendering.",
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "tableGroup"
						},
						"tables": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entryTable"
							}
						},
						"name": {
							"type": "string"
						},
						"data": {
							"type": "object"
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entryTableRow": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "row"
						},
						"style": {
							"type": "string"
						},
						"row": {
							"type": "array",
							"items": {
								"$ref": "#"
							}
						}
					},
					"required": [
						"type",
						"row"
					],
					"additionalProperties": false
				}
			]
		},
		"entryTableMultiRow": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "multiRow"
						},
						"style": {
							"type": "string"
						},
						"rows": {
							"type": "array",
							"items": {
								"anyOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#"
										}
									},
									{
										"$ref": "#/definitions/entryTableRow"
									}
								]
							}
						}
					},
					"required": [
						"type",
						"rows"
					],
					"additionalProperties": false
				}
			]
		},
		"entryTableCell": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "cell"
						},
						"width": {
							"type": "integer"
						},
						"roll": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"min": {
											"type": "integer"
										},
										"max": {
											"type": "integer"
										},
										"pad": {
											"type": "boolean"
										}
									},
									"required": [
										"min",
										"max"
									],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"exact": {
											"type": "integer"
										},
										"pad": {
											"type": "boolean"
										}
									},
									"required": [
										"exact"
									],
									"additionalProperties": false
								}
							]
						},
						"entry": {
							"$ref": "#"
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entryPf2Options": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "pf2-options"
						},
						"style": {
							"type": "string",
							"description": "Formatting to be applied to the options; not providing a style results in a simple list with bold headings.\n pf2-p: This style is used for normal paragraphs in most sourcebooks. \n pf2-stat--text: This style is used for all statblocks. \n pf2-book__option--indent: A bold heading list with indented first line",
							"enum": [
								"pf2-p",
								"pf2-stat--text",
								"pf2-book__option--indent"
							]
						},
						"skipSort": {
							"type": "boolean",
							"const": true,
							"description": "If true, the options will not be sorted alphabetically."
						},
						"noColon": {
							"type": "boolean",
							"const": true,
							"description": "Don't render a colon \":\" between the item \"name\" and the item \"entry\"."
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "item"
									},
									"name": {
										"type": "string"
									},
									"entries": {
										"type": "array",
										"items": {
											"$ref": "#"
										},
										"minItems": 1
									}
								},
								"additionalProperties": false,
								"required": [
									"type",
									"name",
									"entries"
								]
							},
							"minItems": 1
						}
					},
					"required": [
						"items"
					],
					"additionalProperties": false
				}
			]
		},
		"entryList": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "list"
						},
						"columns": {
							"description": "Number of columns the content should be split into. Note that the full value is only displayed on wide screens, and screens below certain widths will see an appropriately reduced number of columns.",
							"type": "integer"
						},
						"style": {
							"type": "string",
							"description": "Formatting to be applied to the list; not providing a style results in a simple bullet point list.\n list-decimal: decimal numbering 1. 2. 3. etc \n list-hang: a list with the bullets removed and a full indentation \n list-hang-notitle: a list with no bullets that indents all lines but the first\n list-lower-roman: lowercase roman numeral numbering i, ii, iii, iv, etc.\n list-name: a bulleted list with all text in bold\n list-no-bullets: a list with the bullets removed and reduced indentation\n list-no-bullets-indent: a list with the bullets removed WITH indentation",
							"enum": [
								"list-decimal",
								"list-hang",
								"list-hang-notitle",
								"list-lower-roman",
								"list-name",
								"list-no-bullets",
								"list-no-bullets-indent"
							]
						},
						"name": {
							"type": "string"
						},
						"items": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"items"
					],
					"additionalProperties": false
				}
			]
		},
		"entryBonus": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "bonus"
						},
						"value": {
							"type": "integer"
						}
					},
					"required": [
						"value"
					],
					"additionalProperties": false
				}
			]
		},
		"entryBonusSpeed": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "bonusSpeed"
						},
						"value": {
							"type": "integer"
						}
					},
					"required": [
						"value"
					],
					"additionalProperties": false
				}
			]
		},
		"entryDice": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "dice"
						},
						"toRoll": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"number": {
										"type": "integer"
									},
									"faces": {
										"type": "integer"
									},
									"modifier": {
										"description": "(Warning: unused)",
										"type": "integer"
									},
									"hideModifier": {
										"description": "(Warning: unused)",
										"type": "boolean"
									}
								},
								"required": [
									"number",
									"faces"
								]
							}
						},
						"rollable": {
							"type": "boolean"
						}
					},
					"additionalProperties": false
				}
			]
		},
		"entryAbilityDc": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "abilityDc"
						},
						"name": {
							"type": "string"
						},
						"attributes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"str",
									"dex",
									"con",
									"int",
									"wis",
									"cha",
									"spellcasting"
								]
							}
						}
					},
					"required": [
						"name",
						"attributes"
					],
					"additionalProperties": false
				}
			]
		},
		"entryAbilityAttackMod": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "abilityAttackMod"
						},
						"name": {
							"type": "string"
						},
						"attributes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"str",
									"dex",
									"con",
									"int",
									"wis",
									"cha",
									"spellcasting"
								]
							}
						}
					},
					"required": [
						"name",
						"attributes"
					],
					"additionalProperties": false
				}
			]
		},
		"abilityGeneric": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "abilityGeneric"
						},
						"name": {
							"type": "string"
						},
						"text": {
							"type": "string"
						},
						"attributes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"str",
									"dex",
									"con",
									"int",
									"wis",
									"cha"
								]
							}
						}
					},
					"required": [
						"text"
					],
					"additionalProperties": false
				}
			]
		},
		"entryLink": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "link"
						},
						"text": {
							"type": "string"
						},
						"href": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"type": {
											"const": "internal"
										},
										"path": {
											"type": "string"
										},
										"hash": {
											"type": "string"
										},
										"hashPreEncoded": {
											"type": "boolean"
										},
										"subhashes": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"type": "object",
														"properties": {
															"key": {
																"type": "string"
															},
															"values": {
																"type": "array",
																"items": {
																	"type": "string"
																}
															},
															"preEncoded": {
																"type": "boolean"
															}
														},
														"required": [
															"key",
															"values"
														],
														"additionalProperties": false
													},
													{
														"type": "object",
														"properties": {
															"key": {
																"type": "string"
															},
															"value": {
																"type": "string"
															},
															"preEncoded": {
																"type": "boolean"
															}
														},
														"required": [
															"key",
															"value"
														],
														"additionalProperties": false
													}
												]
											}
										},
										"hover": {
											"type": "object",
											"properties": {
												"page": {
													"type": "string"
												},
												"source": {
													"type": "string"
												},
												"hash": {
													"description": "Optional; overrides the href hash for hover handlers.",
													"type": "string"
												},
												"hashPreEncoded": {
													"type": "boolean"
												}
											},
											"additionalProperties": false,
											"required": [
												"page",
												"source"
											]
										}
									},
									"required": [
										"path"
									],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"type": {
											"const": "external"
										},
										"url": {
											"type": "string"
										}
									},
									"required": [
										"url"
									],
									"additionalProperties": false
								}
							]
						}
					},
					"required": [
						"text",
						"href"
					],
					"additionalProperties": false
				}
			]
		},
		"entryOptFeature": {
			"description": "For e.g. Eldritch Invocations which require prerequisite text",
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"type": {
							"const": "optfeature"
						},
						"prerequisite": {
							"type": "string"
						}
					},
					"required": [
						"name"
					]
				}
			]
		},
		"entryInset": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "pf2-inset"
						},
						"name": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"data": {
							"type": "object"
						},
						"page": {
							"type": "integer"
						},
						"source": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"style": {
							"type": "string"
						}
					},
					"required": [
						"entries"
					]
				}
			]
		},
		"entryVariant": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "variant"
						},
						"name": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"name",
						"entries"
					]
				}
			]
		},
		"entryVariantInner": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "variantInner"
						},
						"name": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"name",
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryVariantSub": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "variantSub"
						},
						"name": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"name",
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryItem": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"oneOf": [
						{
							"type": "object",
							"properties": {
								"type": {
									"const": "item"
								},
								"style": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"entry": {
									"$ref": "#"
								}
							},
							"required": [
								"name",
								"entry"
							],
							"additionalProperties": false
						},
						{
							"type": "object",
							"properties": {
								"type": {
									"const": "item"
								},
								"style": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"entries": {
									"type": "array",
									"items": {
										"$ref": "#"
									},
									"minItems": 1
								}
							},
							"required": [
								"name",
								"entries"
							],
							"additionalProperties": false
						}
					]
				}
			]
		},
		"entryItemSub": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "itemSub"
						},
						"name": {
							"type": "string"
						},
						"entry": {
							"$ref": "#"
						}
					},
					"required": [
						"name",
						"entry"
					],
					"additionalProperties": false
				}
			]
		},
		"entryItemSpell": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "itemSpell"
						},
						"name": {
							"type": "string"
						},
						"entry": {
							"$ref": "#"
						}
					},
					"required": [
						"name",
						"entry"
					],
					"additionalProperties": false
				}
			]
		},
		"entryImage": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "image"
						},
						"href": {
							"$ref": "#/definitions/mediaHref"
						},
						"hrefThumbnail": {
							"title": "A thumbnail image used in rare cases, e.g. when loading a wall of maps to choose from in the DM Screen.",
							"$ref": "#/definitions/mediaHref"
						},
						"title": {
							"type": "string"
						},
						"altText": {
							"description": "For accessibility purposes",
							"type": "string"
						},
						"imageType": {
							"type": "string",
							"enum": [
								"map",
								"mapPlayer"
							]
						},
						"grid": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"enum": [
										"none",
										"square",
										"hexRowsOdd",
										"hexRowsEven",
										"hexColsOdd",
										"hexColsEven"
									]
								},
								"size": {
									"type": "integer"
								},
								"offsetX": {
									"type": "integer"
								},
								"offsetY": {
									"type": "integer"
								}
							},
							"additionalProperties": false
						},
						"mapRegions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"area": {
										"type": "string"
									},
									"points": {
										"type": "array",
										"items": {
											"type": "array",
											"items": {
												"type": "integer"
											},
											"maxItems": 2,
											"minItems": 2
										},
										"uniqueItems": true
									}
								},
								"additionalProperties": false
							}
						},
						"mapParent": {
							"description": "Note that the order of transformations is: scale, then offset.",
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"offsetX": {
									"description": "The X position of this map within the parent map. Defaults to 0.",
									"type": "integer"
								},
								"offsetY": {
									"description": "The Y position of this map within the parent map. Defaults to 0.",
									"type": "integer"
								},
								"scaleX": {
									"description": "X scaling required for this map to match the parent map. Defaults to 1.",
									"type": "number",
									"exclusiveMinimum": 0
								},
								"scaleY": {
									"description": "Y scaling required for this map to match the parent map. Defaults to 1.",
									"type": "number",
									"exclusiveMinimum": 0
								},
								"autoScale": {
									"description": "If the X/Y scaling for this map should be based on the size ratio between the two. This is often used a placeholder for maps requiring future manual adjustment.",
									"type": "boolean"
								}
							},
							"additionalProperties": false
						},
						"mapName": {
							"type": "string"
						},
						"width": {
							"type": "integer"
						},
						"height": {
							"type": "integer"
						},
						"maxWidth": {
							"description": "Specify the max desired display width of the images, as opposed to \"width\" which should only be used for the _real_ width. Assumes pixels by default.",
							"type": "integer"
						},
						"maxHeight": {
							"description": "As per \"maxWidth\"",
							"type": "integer"
						},
						"maxWidthUnits": {
							"type": "string"
						},
						"maxHeightUnits": {
							"type": "string"
						},
						"style": {
							"enum": [
								"comic-speaker-left",
								"comic-speaker-right",
								"deity-symbol"
							]
						}
					},
					"required": [
						"href"
					],
					"additionalProperties": false
				}
			]
		},
		"entryGallery": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "gallery"
						},
						"images": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entryImage"
							}
						}
					},
					"required": [
						"images"
					],
					"additionalProperties": false
				}
			]
		},
		"entryActions": {
			"allOf": [
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "actions"
						},
						"name": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"type",
						"name",
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryAttack": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "attack"
						},
						"attackType": {
							"type": "string",
							"description": "MW: Melee Weapon\n RW: Ranged Weapon",
							"enum": [
								"MW",
								"RW"
							]
						},
						"attackEntries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"hitEntries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						}
					},
					"required": [
						"type",
						"attackType",
						"attackEntries",
						"hitEntries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryFlowchart": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "flowchart"
						},
						"blocks": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entry"
							}
						}
					},
					"required": [
						"type",
						"blocks"
					],
					"additionalProperties": false
				}
			]
		},
		"entryFlowBlock": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "flowBlock"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entry"
							}
						},
						"name": {
							"type": "string"
						}
					},
					"required": [
						"type"
					],
					"additionalProperties": false
				}
			]
		},
		"entryIngredient": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "ingredient"
						},
						"entry": {
							"$ref": "#"
						}
					},
					"patternProperties": {
						"^amount\\d+$": {
							"type": "number"
						}
					},
					"required": [
						"type",
						"entry"
					],
					"additionalProperties": false
				}
			]
		},
		"entryDataCreature": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataCreature"
				},
				"dataCreature": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"dataCreature"
			]
		},
		"entryDataSpell": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataSpell"
				},
				"dataSpell": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"dataSpell"
			]
		},
		"entryDataTrapHazard": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataTrapHazard"
				},
				"dataTrapHazard": {
					"oneOf": [
						{
							"type": "string"
						}
					]
				}
			},
			"required": [
				"type",
				"dataTrapHazard"
			]
		},
		"entryDataObject": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataObject"
				},
				"dataObject": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"dataObject"
			]
		},
		"entryDataItem": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataItem"
				},
				"dataItem": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"dataItem"
			]
		},
		"entryRefClassFeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refClassFeature"
				},
				"classFeature": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"classFeature"
			]
		},
		"entryRefSubclassFeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refSubclassFeature"
				},
				"subclassFeature": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"subclassFeature"
			]
		},
		"entryRefOptionalfeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refOptionalfeature"
				},
				"optionalfeature": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"optionalfeature"
			]
		},
		"entryHr": {
			"type": "object",
			"properties": {
				"type": {
					"const": "hr",
					"description": "A horizontal rule."
				}
			},
			"required": [
				"type"
			]
		},
		"entryPf2-h1-flavor": {
			"type": "object",
			"properties": {
				"type": {
					"const": "pf2-h1-flavor",
					"description": "A pathfinder style horizontal rule."
				}
			},
			"required": [
				"type"
			]
		},
		"entrySpellcasting": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "spellcasting"
						},
						"name": {
							"type": "string"
						},
						"headerEntries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"constant": {
							"$ref": "#/definitions/_arrayOfSpell"
						},
						"will": {
							"$ref": "#/definitions/_arrayOfSpell"
						},
						"ritual": {
							"$ref": "#/definitions/_arrayOfSpell"
						},
						"rest": {
							"$ref": "#/definitions/entrySpellcasting_frequency"
						},
						"daily": {
							"$ref": "#/definitions/entrySpellcasting_frequency"
						},
						"weekly": {
							"$ref": "#/definitions/entrySpellcasting_frequency"
						},
						"yearly": {
							"$ref": "#/definitions/entrySpellcasting_frequency"
						},
						"spells": {
							"type": "object",
							"properties": {
								"0": {
									"type": "object",
									"properties": {
										"spells": {
											"type": "array",
											"uniqueItems": true,
											"items": {
												"type": "string"
											}
										}
									},
									"required": [
										"spells"
									],
									"additionalProperties": false
								}
							},
							"patternProperties": {
								"^[1-9]$": {
									"$ref": "#/definitions/entrySpellcasting_level1to9"
								}
							},
							"additionalProperties": false
						},
						"hidden": {
							"description": "Allows the above properties to be specified, but not rendered. Useful if e.g. a creature can only cast one spell, and this is rendered in the header line.",
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"constant",
									"will",
									"rest",
									"daily",
									"weekly",
									"yearly",
									"ritual",
									"spells"
								]
							}
						},
						"footerEntries": {
							"type": "array",
							"items": {
								"$ref": "#"
							},
							"minItems": 1
						},
						"ability": {
							"type": "string",
							"enum": [
								"str",
								"dex",
								"con",
								"int",
								"wis",
								"cha"
							]
						},
						"displayAs": {
							"description": "Implicitly \"trait\"",
							"type": "string",
							"enum": [
								"trait",
								"action"
							]
						}
					},
					"required": [
						"name"
					],
					"additionalProperties": false
				}
			]
		},
		"entrySpellcasting_level1to9": {
			"type": "object",
			"properties": {
				"lower": {
					"type": "integer"
				},
				"slots": {
					"type": "integer"
				},
				"spells": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"spells"
			],
			"additionalProperties": false
		},
		"entrySpellcasting_frequency": {
			"type": "object",
			"patternProperties": {
				"^\\de?$": {
					"$ref": "#/definitions/_arrayOfSpell"
				}
			},
			"additionalProperties": false
		},
		"entryWrapped": {
			"allOf": [
				{
					"$ref": "#/definitions/entry"
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "wrapper"
						},
						"wrapped": {}
					},
					"required": [
						"wrapper",
						"wrapped"
					],
					"additionalProperties": false
				}
			]
		},
		"dataDamImmune": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"immune": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/dataDamImmune"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"immune"
					]
				}
			]
		},
		"dataCondImmune": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"conditionImmune": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"conditionImmune"
					]
				}
			]
		}
	},
	"anyOf": [
		{
			"$ref": "#/definitions/entrySection"
		},
		{
			"$ref": "#/definitions/entryEntries"
		},
		{
			"$ref": "#/definitions/entryQuote"
		},
		{
			"$ref": "#/definitions/entryPF2-hx"
		},
		{
			"$ref": "#/definitions/entryPF2-title"
		},
		{
			"$ref": "#/definitions/entriesAbilityBlock"
		},
		{
			"$ref": "#/definitions/entriesOtherSource"
		},
		{
			"$ref": "#/definitions/entriesSuccessDegree"
		},
		{
			"$ref": "#/definitions/entriesLevelEffect"
		},
		{
			"$ref": "#/definitions/entriesStatblock"
		},
		{
			"$ref": "#/definitions/entriesAffliction"
		},
		{
			"$ref": "#/definitions/entryInlineEntries"
		},
		{
			"$ref": "#/definitions/entryEntriesInlineEntries"
		},
		{
			"$ref": "#/definitions/entryOptions"
		},
		{
			"$ref": "#/definitions/entryTableGroup"
		},
		{
			"$ref": "#/definitions/entryTable"
		},
		{
			"$ref": "#/definitions/entryTableRow"
		},
		{
			"$ref": "#/definitions/entryTableMultiRow"
		},
		{
			"$ref": "#/definitions/entryTableCell"
		},
		{
			"$ref": "#/definitions/entryList"
		},
		{
			"$ref": "#/definitions/entryPf2Options"
		},
		{
			"$ref": "#/definitions/entryBonus"
		},
		{
			"$ref": "#/definitions/entryBonusSpeed"
		},
		{
			"$ref": "#/definitions/entryDice"
		},
		{
			"$ref": "#/definitions/entryAbilityDc"
		},
		{
			"$ref": "#/definitions/entryAbilityAttackMod"
		},
		{
			"$ref": "#/definitions/abilityGeneric"
		},
		{
			"$ref": "#/definitions/entryLink"
		},
		{
			"$ref": "#/definitions/entryOptFeature"
		},
		{
			"$ref": "#/definitions/entryInset"
		},
		{
			"$ref": "#/definitions/entryVariant"
		},
		{
			"$ref": "#/definitions/entryVariantInner"
		},
		{
			"$ref": "#/definitions/entryVariantSub"
		},
		{
			"$ref": "#/definitions/entryItem"
		},
		{
			"$ref": "#/definitions/entryItemSub"
		},
		{
			"$ref": "#/definitions/entryItemSpell"
		},
		{
			"$ref": "#/definitions/entryImage"
		},
		{
			"$ref": "#/definitions/entryGallery"
		},
		{
			"$ref": "#/definitions/entryActions"
		},
		{
			"$ref": "#/definitions/entryAttack"
		},
		{
			"$ref": "#/definitions/entryDataCreature"
		},
		{
			"$ref": "#/definitions/entryDataSpell"
		},
		{
			"$ref": "#/definitions/entryDataTrapHazard"
		},
		{
			"$ref": "#/definitions/entryDataObject"
		},
		{
			"$ref": "#/definitions/entryDataItem"
		},
		{
			"$ref": "#/definitions/entryRefClassFeature"
		},
		{
			"$ref": "#/definitions/entryRefSubclassFeature"
		},
		{
			"$ref": "#/definitions/entryRefOptionalfeature"
		},
		{
			"$ref": "#/definitions/entryHr"
		},
		{
			"$ref": "#/definitions/entryPf2-h1-flavor"
		},
		{
			"$ref": "#/definitions/entrySpellcasting"
		},
		{
			"$ref": "#/definitions/entryFlowchart"
		},
		{
			"$ref": "#/definitions/entryFlowBlock"
		},
		{
			"$ref": "#/definitions/entryIngredient"
		},
		{
			"$ref": "#/definitions/entryWrapped"
		},
		{
			"type": "string"
		},
		{
			"type": "integer"
		}
	]
}
